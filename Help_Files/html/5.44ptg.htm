<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Timetable validation</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<OBJECT TYPE="application/x-oleobject" CLASSID="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
	<PARAM NAME="Keyword" VALUE="Timetable validation">
	<PARAM NAME="Keyword" VALUE="Validation of timetables">
</OBJECT>

<P><B><A NAME="5.4"></A>5.4  Timetable validation</B></P>

<P>The 'Validate timetable' button in the timetable editor is available only when a railway is loaded and a timetable is open in the editor and saved to a file.  A timetable that is in course of development can't be validated until it has been saved (or saved under a different name using the 'Save timetable as...' button), because the validator works on the file.</P>

<P>Timetable integrity is validated with respect to program interpretation, not with respect to logical structure.  It is the user's responsibility to make sure that a timetable makes sense!</P>

<P>Two sets of checks are carried out, the first for syntax, and the second for overall structure.  The first will reveal incorrect coding, the second will reveal incorrect timings such as a departure before an arrival, incorrect sequences such as arrival at Station A followed by departure from Station B, and incorrect service reference linkages etc.  Checking is quite comprehensive, so a timetable that is validated should load and operate correctly.</P>

<P>It is the user's responsibility to ensure that stopping locations are entered in the correct order.  If a train is to stop in sequence at A, B, C, D, but station layout is A, D, C, B, then when the train reaches D the program 'thinks' that stations B and C have been missed, so 'missed location' logs will be sent to the performance file.  As far as the timetable is then concerned B and C are no longer listed.  However the check for missed locations is only carried out as far as the next change-of-direction (cdt) if there is one.  This allows for services that stop at some locations on the way out and at the same or others on the way back.  For example, stations may be set out in sequence W, X, Y and Z, and a train stops at W and Z on the way out, then changes direction and stops at Y, X and W on the way back.  When it arrives at Z ready to return, it hasn't missed X and Y, so 'missed location' logs are not sent for these because they come after the change-of-direction.  This situation would normally be set up by changing service at Z (new headcode), but the program allows that same service to change direction and continue if required.</P>

<P>Note that a train that is timetabled to stop at the same station twice without a change of direction in between (running in a ring for example) will cause a validation error as the checker thinks that the second entry is a mistake.  To get round this restriction there must be a change of service (Fns - Sns combination) before the station is reached for the second time.</P>

<P>See <A HREF="5.111w8h.htm">section 5.11</A> for some important aspects that will help to avoid errors.</P>

</BODY>
</HTML>
