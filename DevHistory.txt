Development History

This is a very rough set of notes recorded practically from day 1 of C++ Builder development.  It was compiled for my own use as a diary of events, a to-do list, and a dumping ground for any other notes that I wished to keep.  I have added it to the development repository as there are things in it that need to be retained such as user requests and the full list of changes from version to version.

The structure is as follows:-

1)  List of suggestions from users for future changes (some incorporated).
2)  My own list of thoughts for change proposals (many incorporated)
3)  List of problems & odd behaviour for which I don't yet have solutions
4)  Changes made for each successive version release
5)  Release & website reminders
6)  Historic development notes

-----------------------

1) Future change suggestions from users:


#57 & 58  From Simon Banham by email 18/07/21.  Allow users to specify the distribution of mass, brake force and power when trains split, with a default of 50/50 (as at present).

Simplify the timetable conflict analysis file so it looks more like SimSig's analysis file with all movements in location order and warnings about potential conflicts.


#56 From Metvor_Rules via Discord 07/05/21.  What if there was a rotation function for track pieces so you could just press R for example and the track/ platform would rotate by 45 or 90 degrees each button press.
This would reduce the amount of unique parts so you don’t have to go back and forth selecting different track types.


#55 From Krizar 25/04/21 via discord.  The simulation has the train phoning signaller mechanic already, so I was wondering how feasible it was to add something like this:
https://en.wikipedia.org/wiki/Radio_Electronic_Token_Block#/media/File:West_Highland_Line_single_line_permssion_sign_-_Rannoch_south_01.jpg
Radio Electronic Token Block
Radio Electronic Token Block is a system of railway signalling used in the United Kingdom. It is a development of the physical token system for controlling traffic on single lines. The system is slightly similar to North American Direct Traffic Control, which unlike RETB does not have a cab display unit.
Whereby you would just click a button saying "yep sure continue"
so it would just be the equivalent of when a driver is stuck at a signal for too long and phones
You could also simulate plunger pressing by the driver by having the train halt in front of the signal, there be a couple of seconds pause, then a white light display, or if it is a "whistle then continue" no light and just a pause
Albert — Today at 14:28
I'm struggling to see how simulating this situation would be different to the standard signaller command of 'Pass red signal'.  Or are you suggesting a separate alarm of some sort when a train had waited at a red signal for more than a certain time?
KR/ZAR — Today at 14:31
What I had in mind was pretty much what was already there except rather than it be treated like there is a problem (purple train etc) and there being a signal, just some other indicator that just asks for a token.


#54 Suggestion from Wilsteady via discord 09/01/21.  New idea with rollingstock details - could there be a way to enter a Trains acceleration/deceleration instead of brake force? I can imagine it would be potentially a large change in how the program functions, but given many Wikipedia pages for trains give the Accel/Decel rates in m/s2 not the brake force, it means guessing the values required for the program to find one that works best for the timetable in place.


#53 Suggestion from Bill78 08/01/21 via discord.  I've been thinking about Speedbutton 17. Could it be made into a "reporting point?" Buy this, I mean a person could put one or more on any route and when any train crossed it, a notice would pop up on the notification area that "such-and-such train is at Reporting Point whatever." This way, it wouldn't be controlled by anything in a timetable, but simply be there and notify when a train crosses it. Leave the "W" in the timetable so certain trains will show a Warning, but SB17 would pop a Warning every time a train crosses it.


#52 [done].  Suggestion from josco 05/01/21 via discord.  No idea if this is doable but would it be possible to replicate the 'hover' menu from the trains in the actions due box? Thus when a train appears in the actions menu you could hover over the train and it would show you the train menu with timetable etc. This would be more user friendly in my view than clicking the train to then find out where it is in the map. This is not a crucial update but would be useful in my view. However if it is not doable nor a simple fix then I would leave alone!


#51 Suggestion from Wilsteady 24/12/20 via discord. Got another fun feature idea for consideration - Inbuilt native support for windows that if you double click on a .rly or .dev [or .ssn] file in Windows Explorer, it will open railway.exe with that file pre-loaded.


#50 [Done].  Suggestion from Wilsteady 21/10/20 via Discord.  Don't know if this is a feature that already exists or not - It would be handy in the layout builder, to be able to Select an area, choose a particular track type, and have the system auto fill that space with that type. For example build a railway by selecting the location of each station, signal, turnout, etc, but don't add any 'straight' tracks. Then being able to select a long line, and having it pre-fill all the straight sections. Would be handy when building twin or quad track sections that don't vary other than a X-over or signal here or there.


#49.  Suggestion from Dan via Discord 12/08/20.  Include route availability with stock being given a specific value, and the lines having a corresponding value. The trains' value should be lower than or equal to the track's value, or it cannot run on that track. You may see it as RA then a number from 1 to 10


#48. Suggestion from Wilsteady via discord 21/07/20.  Two I would love to see, is a two aspect yellow over green as a repeater signal, and a single aspect red signal.


#47. Suggestion from imortallknedlik via discord 20/07/20.  Maybe do like an option to choose what colours you have on different signals, or just add some of the LU signals, like the ATO ones


#44 - #46 [Done]. Suggestions from Micke (Commuterpop), Krizar & Bjorn via discord 28 & 29/06/20.  Have program able to adapt to different user file structures than having all subfolders below the executable folder. Allow user to set preferred folders for file locations, and autoload the last used file.


#43. Suggestion from The10toFarnborough via discord 27/06/20 - have timetable functions work in seconds rather than minutes. 


#35 - #42. Requests from 506_Independent via discord 21/06/20.  

First of all, I would like a small red halo around my selected track piece, as having no way to know what iv'e selected means I could add the wrong piece, wasting a few seconds of aluble time. 

Its also a little bit silly having all your pieces in a big splat, a sorted splat, but still a splat, it would nice to have a [multilevel] drop down menu

Second of all: as you can see, there is an icon, and the name of the piece. Organising like type would be better then by direction (signals, bridges, straight, direction, splits...). 

Third, I would like to be able to mix stuff together, because as you can see, the signals and direction pointers take up a lot of space, so what if I could point direction and show switches at the same time? Maybe you could make it so that you could left click on a straight with a signal button [images in original] you could click on buttons like this, but for seperate things. (maybe switches, or turns). They will automatch to the pieces, so you dont need all the different pieces, and just have a few of each type.

In a different way, think about how stations work. Apply this working to everything. Imagine the straights as base blocks, and you can click on them to add things. This would simplify the entire grid, requiring a maximum of 3 buttons for each category (two switch types for each, and a "bannana skin" connector, two curves). Of course, you may need the full menu when you are doing some complicated things, like this [image in original] 

I recommend making another buttonin the top menu (where text options are) for the full menu and not "auto add". 

I would also like another way of where instead of clicking in the blackness, you can start from a end. You click on the menu, for the things you want to build, a bit like scarm.

I also think a even more graphical, almost block based timetable editor would really help, allowing for scratch-like blocks, but a bit more white and boring. 


#34. Suggestion from Micke (Commuterpop) 16/06/20 via discord - when a train is heavily delayed often skip stops in real life, include facility to skip stops in timetable as a signaller option


#33. Suggestion from Wilsteady, Discord 02/06/20:  I've thought of an interesting concept that could be rather interesting to include. Support for recognition of train types linked with lines, i.e. Electric/Diesel or different track gauges. In practice I guess it would be something like, setting a route for a train where the track leaves electrified territory, but the type of train is designated as electric, and as such approaching that junction, depending on a different setting, could either continue through and "derail/fault" for leaving the electrified territory, or simply come to a complete stop at the preceding signal until the route is corrected.


#31 & #32 [part done]. Suggestions from Wilsteady, Discord 09/05/20:  Place footbridge/underpass over existing track to avoid having to reset lengths etc; ability to add a non-station named location over a signal [Location over signal added at v2.6.0]


#29 & #30. From Dan on Discord 17/04/20:  Drive-by-sight would be a neat feature for trams, and maybe a signal type to permit access to a siding or a drive-by-sight section.


#27 & #28. Suggestion from @Mark 04/02/20.  Ability to tell a train to skip the next station or skip its next trip in the timetable (in cases where a train is running very delayed).  That and have the ability to select a different timetable.  


#26. Suggestion from Oli_k123 29/10/19.  A new route chopping tool would be nice so when you use the 'blue route' you can chop between 2 signals without having to re do everything after the first signal or maybe a 'one time override'?


#19 - #25. Suggestions from Kristian Zarebski (Krizar) 06/08/19

- Catch Points: This is rather a minor thing and perhaps is not needed enough to warrant time. Many of the routes I look at have either catch points or very short lengths of line after points within a passing loop. For the simulator all this would mean is removing the constraint that you cannot have the ends of track next to a set of points with the added condition that if someone routes a train towards the track end it then "derails" (or in the loop case collides immediately with buffers).

- Signal Side [Done]: Someone oddly asked me specifically about this (I dont know why me?). They wanted to know if it was possible to switch the side that signals are positioned on tracks (For Europe etc). I took a brief look at the code and my conclusion was that you actually draw the icons through the code, is that right? They are not just image files.

- Three way junction: I am actually surprised how common these are in track layouts. This should not interfere with connecting to existing track as it would just be the "Y" junction with the added straight line.

- Bookmarks: this is of great use to large layouts (considering real signalling centres do not cover whole networks this might only apply to my outrageously large layouts!). Similar to the existing home button having extra buttons customisable within the simulation to "jump" to various positions on the map would be very useful. For the "L" train I have to keep pausing the simulation so as to move across the map. In short: multiple "home" buttons aka "location jumps".

- [already available] Clickable Notices: alternatively to the above or in addition, if a train flashes when you use the zoomed out version of the map, you can click it to quickly head to that map location?

- Signal ID: probably easier to explain with an example "1A02 held at signal OX23" accompanied by the usual flashing. Probably much easier to do than the above! Although it does still have the issue of the user not knowing the location without map knowledge.

- Unknown: I do not know if you have ever used Simsig but something came to mind. On the maps included there are radial clickable buttons. I cannot remember what they do at all, is it some automatic route setting? My knowledge of computational signalling is very low, but being able to select between preset automatic routes would be great. Although adding such a feature sounds a headache.


#18. Suggestion from Xeon email of 05/03/18. Chinese railways use several more aspects than UK railways, Xeon requests 6-aspect to allow for this


#16 & #17. Suggestions from Richard Gaede email of 22/08/14:-

[Done for two or more railway applications running at the same time] Allow cut and copied segments to be retained when a railway is cleared and a new one loaded, so that railways can be merged together

[Done with 'actions due' panel] Have a drop-down list of running trains and their status and trains about to enter the system - to give a quick form of running train identification so they aren't forgotten and advance warning of future entries.


#11 - #15. Suggestions from David Graf - email of 31/03/14

"Coventry Requirements Sig Sim for Rail Op Sim

I’ve almost finished placing together the signalling area covered by the old Coventry PSB in the West Midlands ( the period in question would be 1965 to 1984 ) using your signalling programme.  It looks the part only having a peek at the available information of the real signal box several things are missing and I was wondering if they might become available in any future updates.

The Coventry panel should really have a slot to control the Coventry end of the single track to and from Leamington Spa and visa versa.

A ' SLOT ' is used to prevent a route from being set until the slot has been given and has to be received or accepted by the next signal box. Ie in this case Leamington Spa. In practice I think it was just a button in the signal box, on the panel it is usually a white dot for on and a blank dot for off with the required confirmation that the slot has been accepted. Slots are also used to cover certain sidings and refuge sidings like the one at Berkswell.

Will probably also require a repeater banner indicator. There is one between Coventry and Canley stations. i.e. a signal that simply repeats the next aspect of the signal which the driver cannot see as it is obscured by a bend in the track. I have an icon of a repeater banner which you might be able to use. I was thinking if its face is left blank then the next signal is at danger i.e. RED and if it is clear i.e. GREEN the its face becomes a white dot.

Also the adjacent signalling area Coundon Road has semaphore signals. I was wondering if you could use a semaphore signal icon to denote that it is a semaphore but have a RED dot for stop and a Green dot for clear . I am currently using a double MAS signal to simulate both the Repeater Banner and the Semaphores. They sort of cover the same function but it would be more authentic if a semaphore icon was in use.

[Done] Also the level crossings at Tile Hill and Berkswell are controlled by CCTV. I am assuming the TV screens were in Coventry Power Signal Box. If that is the case then there should be an open or raised , closed or lowered, and clear marker indicators in Coventry PSB for both level crossings. Basically switches to raise and lower the level crossing gates. I wonder if you could simulate that by using a simple dot indicator that you have to press to operate ie open and close the gates. At this time Canley Level Crossing was still manually operated so would be out of the control of Coventry PBS. They would set the route but it was up to the man at Canley SF to open the gates. In practice the Canley gates would be closed to road traffic just as the train was departing Coventry. So there is still a need for manually operated level crossings in the sim.

Background – basically I have been waiting for a signal simulator to cover the West Midlands area only all the commercial stuff is mostly based on modern practice and badly misses the period that I would like to cover. Unfortunately and now fortunately I stumbled across your programme last week by accident and found that I was able to construct the required areas myself. So yes I am interested in helping to aid in further upgrades to enable your project to move forward. Unfortunately I do not have any Borland computer knowledge but I do have some insight into how British Railways used to work and I can hopefully suggest a few things to make your signalling Sim more authentic. Well in British Rail practice.

I am currently researching a North Wales Coast route so semaphore signals would be of great help. That is if its not to much to ask."


#10. Suggestion from Jonathan Kwok (email of 11/05/13)
Have a 'Touch mode' where when activated the buttons are bigger for easier operation with touch-sensitive screens.


#7 - #9. Suggestions from Bjorn - email of 20/10/12:
1) Manual Stop Signals (blue), as in, being able to set them manually, i.e. for in stations where the whole platform can be used, or only a part of the platform. As in the Netherlands it's common tho have "Stop" signals halfway down the platform to allow two opposing trains to use it as if it were 2 seperate platforms... If you catch my drift. and by using a special stop (BLUE) signal, one can split a track... Also another idea I had was to allow a stretch of track to have signals. Those blue signals kinda function like an "end-of-track" signal... but can also be used to signal "track not in use".
2) Being able to have 1 track to have signals in both directions, to conserve space... now one can only have one signal on a track in either direction, but being able to put both signals on one stretch of track would not only save space, but also would be more realistic as signals are usually placed in pairs (up/down)...
3) [Done] The ability to automatically set a track from one point to another without having to set all the signals in between, just a starting point and an endpoint. And then that the program follows wither the preferred directions to create the best available route or that it just looks for the shortest route possible from point A to point B. 


#6. Suggestion from Josh Coupe (email ~21/10/12):  Useful if could advance the timetable clock and have all trains where they would most likely be at that time.


#4 & #5.Suggestion from Atilio Flegner (email 10/10/12): allow acceleration & deceleration rates as inputs as well as train power & braking force; and allow headways between trains as well as fixed starting times


#3. Suggestion from Mark Jones (email of 29/06/12): try to allow different train lengths consisting of different numbers of elements.  Can indicate required length in timetable.


#2. Suggestion from Keith Hazelton (Feature Requests Forum 02/04/12):  Have the ability to set random dwell times at station stops. At present, once you’ve got ‘the hang’ of a layout and got into a rhythm of route setting, everything is pretty predictable. Random dwell times (say between 30sec & 3 mins) would add an unpredictable element.


#1. Sam Wainwright email received 09/02/12: If a shunt signal is placed in the same direction as the main running signals, it is necessary to set a route through the shunt signal as well. Would it be possible to set a route from one running signal to the next with any shunt signals in the same direction in between clearing automatically?

-----------------------

2) Own thoughts:-

Expand railway file spec to include .ssn & .ttb files as well

Allow front end route cancellation by clicking element before signal for green & blue, check how to do it for red - maybe have left click for remove from front, right click for remove from back (looks complex)

Variable zoom would be useful - by changing the displayed image (prob not to replace existing zoom)

Undo facility would be useful, esp for cut & paste

[Done at v 2.3.0]. Try to trap memory capacity errors that occur when try to save large bitmaps without crashing the program.  Occurred on Xeon's Shanghai Metro railway when .bmp was over 500Mb.

No: Add int Left, Top in ClearandRebuildRailway before Track->GetScreenPositionsFromTruePos(1, Left, Top, PointFlash->GetHPos(), PointFlash->GetVPos()); below if(Track->PointFlashFlag), as is resets Interface->Left & Top though not permanently influenced by the change, perhaps because the values aren't constants. Say this because Interface->Left & Top took the values set in GetScreenPositionsFromTruePos within the routine but the form didn't move, though when set to fixed values it did move (!!don't change anything until understand what's happening. Could be a compiler issue!!) 

With single element routes being automatically cancelled and last element being points can set another route in other direction before train reaches it.  Have to be quick and unlikely in practice, and have never heard of anything like it happening.  See if anyone reports it and deal with then.

Points to emerge from operating Beaver Lake:  If train cancels a route by moving in wrong direction issue a SPAD risk (like approach locking) and change log accordingly.  Useful if could truncate an automatic route behind a train as well as in front [done at v2.1.0].  When cancel an automatic route that links to a non-automatic route try to either include the signal(s) with the other route (problem if first element of that route is a bridge then can't cancel it and can't set another route to link to it) or cancel adjacent non-automatic routes as well - that's probably easier. Probably more complex than it's worth?  See if anyone reports it as a problem and deal with it then.

OK: Times beyond 24hrs show as hh:mm:ss in .csv formatted timetables but not in .txt version (see Sheffield). This is a feature of Excel, the times are correct in the .csv file

[Done]: Fail to save Traincontroller->ExcessLCDownMins in session files (should be in TInterface::SaveInterface), so on loading a session the excess minutes value resets to zero.  If try to correct this beware that need to retain compatibility with earlier session files that don't save it.  ok corrected at v2.2.0. Added floating point value as a string after ***Interface***

[Done]: Error given when try to split at a named non-station location & there is a non-track element present (i.e. effectively a nonstation [blue] concourse) - discovered by Xeon & notified 14 July 2018.  (TrackUnit line about 8121 [8354 in v2.2.0 file]) Ordinary concourses are excluded but these aren't.  It's because the active track 'find' function fails as there isn't one for this type of element.  Keep the 'find' function but include a test if it fails where if due to one of these elements just 'continue', otherwise throw the error. OK corrected in v2.2.0

[Done]: Allow Frh & Fjo for trains after split and maybe others such as new services (Snt [done inc Fjo at v2.0.0] & Sns) No need - for Sns, Frh & Fjo can just follow the original service; for Sfs, can have the original remain or join other, if both to remain then no need to split, or if both to join others then have the split train jbo rather than Fjo.

General improvement possibilities (some also suggested by users):

Three-way points.
Automatic route setting.
Option to use & display imperial units as well as metric units.
Ability to record and replay sessions.
Signalbox mode where individual signals and points are operated directly, perhaps via a graphical lever frame, with user-defined interlocking.
Sound effects, e.g. enter a track ID & hear trains & station announcements at that location.
Random failures of signals & points.
Variable train lengths.
Restricted routes - DC 3 & 4 rail; AC; tube stock etc.
Multi-player facility over the internet.

-----------------------


3) Problems recorded but without solutions as yet:

1.  Had a failure to reset signals to red when reset a red route in front of a blue route at High Wycombe (operating Chiltern Railways running right to left). The train ran past the end of the blue route so it wasn't just the display that was wrong. Couldn't repeat the fault afterwards.

2.  When operating Chiltern had a train under signaller control & moving forwards, but couldn't get popup menu when right clicked - nothing happened.  Saved session & reloaded, then OK.

3.  If an arriving train reaches a platform with a train in front at buffers, and the arriving train is to split while facing the train at buffers (from the rear but maybe also from the front) and there is enough platform for the split, then the split doesn't occur.  Occurred on Chiltern (Chiltern rear split problem; Timetable time 10.49.03; Chiltern Railways v2; Chiltern Railways v2.ssn) after manoeuvring 5F33 & 1N24 onto a vacant platform & restoring appropriate directions & timetable control.  Due to lack of sophistication of split functions (see note in program: Split logic is:-  at least one of 4 final train positions must overlap with one of original train positions, & final 4 positions will maximise the number at the location.  Note that this function isn't sophisticated enough to account for trains already at the location in determining the 4 positions, and will give a failure message if a train obstructs any of the 4 positions.  In these circumstances the other train will need to be move sufficiently away to release all 4 positions, then the train will split.)  Try to improve if possible (i.e. just take account of 'available' platforms, and ensure keep trying in case other trains move off) or at least give a warning in the help & operator manuals to keep trains that are to split separated from trains already present at platforms - preferably don't have other trains at platforms at all where a train is to split.[leave for now unless reported as a problem - no-one has reported it yet]

-----------------------

4) Version change information

VERSION CHANGES AFTER v2.9.2 for v2.10.0

This version fixes a few bugs and also incorporates a number of changes.

New features:

Krizar has added new files and program modifications that allow real-time information extraction during program operation.  These open up great potential for future development using external interacting programs.

Another brainchild of Krizar's is the inclusion of a new folder in the zip called 'Metadata'.  Metadata is data about other data, or information about other information.  The folder contains two files, one for each of the two railways that come with the download - Birminham and Liverpool.  The files are of type .toml - 'Tom's obvious minimal language', which provides a format that is both human and computer-readable.  Going forward it is intended to make more use of computer file reading, so users are encouraged to provide these files with any new railways that they submit to the website.  More information about toml files can be found at https://toml.io/en/, and a list of country codes is provided at https://www.iso.org/obp/ui/#search/code.  

The response to clicking a headcode in the 'Actions due' panel was always to move the viewpoint so the relevant train was centred on screen.  This was often found to be annoying for railways that mainly fit on a single screen, as the viewpoint had to be reset again manually afterwards.  Now, if the train is already visible on the current screen, the viewpoint isn't moved, the mouse position is all that is moved to hover over the train, wherever it is on the screen.  If the selected train isn't visible on the current screen then the viewpoint moves as before.

A train direction analysis has now been included with the others when the 'Conflict analysis' button is clicked in the timetable editor.  This looks for (a) trains that are created facing buffers (as they often are if the rear and front element IDs are entered the wrong way round); (b) potentially missing changes of direction (cdt's) - expanding on single service missing cdt check in the timetable validator by examining all linked services; and (c) potentially unnecessary cdt entries, where a cdt is entered when the train is already facing the right way. 

Undesirable behaviour:

It was pointed out by Simon Banham that when a route is locked ahead of a train that is moving and positioned immediately in front of the signal that forms the start of the locked route it continues past it without a SPAD.  The signal turns red as is required but it has no effect on the train.  This wasn't strictly speaking a bug because the train was behaving as designed.  Although the train looked as if it hadn't yet passed the red signal the program regarded it as having done so, and already occupying the first half of the signal element, the next half-element move only being shown when the train had covered the distance to the half way point.  Nevertheless this reason couldn't justify what appeared to be wrong, so a modification was introduced to ensure that in these circumstances a SPAD would be triggered.  This was something that I hadn't previously noticed so thanks are due to Simon for pointing it out.

Bugs:

A screenshot was sent in by Albie Vowles showing a failed train with a green (stopped at a signal) background rather than an orange background when it was standing in front of a red signal.  Investigation revealed that this would happen when a train was awaiting a call-on into a station (purple background), and failed while waiting.  The train kept the purple background after the failure instead of changing to orange as it should have done, and when the call-on was no longer available (the train infront having left the station) the background changed to green as it would for a non-failed train.  It was corrected by disallowing a call-on for a failed train.  Thanks to Albie for reporting this error.

Jason Bassett sent in an error file showing that timetable validation had failed where there was a non-station named location (blue elements) that included blue elements without track (as is quite normal) during the check for enough named elements to allow a split.  This error highlighted the fact that although concourses had been taken into account non-station named locations without track hadn't.  Once recognised it was relatively easy to fix by taking proper account of such elements.  Thanks to Jason for sending in the file.

Sam Wainwright and later Bengt sent in error files that were generated when the Windows clipboard couldn't be accessed.  When developing the clipboard functions I had trapped all (or thought I had) clipboard errors in order to prevent a program crash, but just issue a message or do nothing instead depending on circumstances.  The clipboard is a resource that is shared between all applications so it can be changed outside the railway program and appear to it as if it is corrupt or inaccessible.  Such cases generate a clipboard error but it isn't a fatal error, at worst it's merely an inconvenience and often not even that, so it isn't appropriate to stop the program.  However Sam and Bengt found an instance where I had failed to trap one of these errors, and it was in a function that is called regularly by the system clock so the clipboard isn't necessarily even in use.  Happily it was easily fixed so it shouldn't happen again.  Thanks to Sam and Bengt for reporting this.

The user manual and on-screen help have been updated to reflect these changes.


other points not for website:

/added new try... catch EClipboard... block in SetLevel2TrackMode (mainly for case Pasting)

/discovered a missing '&' in line 'if((Level1Mode == TrackMode) && !SelectionValid & (ClpBrdValid != "RlyClpBrd_Cut") && (ClpBrdValid != "RlyClpBrdCopy"))' in ClockTimer2

/Added Krizar's api files etc & credit given in in AboutForm

/Preset autosigs not set if find a signal facing wrong way - mention in manual & help /done

/Add perf log file info at start & when loading a pre-start session - gives railway, tt & start time

/Give Fer exit locs in direction analysis /ok for 3.0.0 (added at end of SingleServiceOutput in TrainUnit.cpp)

/changed (a == z + 1) in conflict analysis to (a <= (z + 2)) to allow for a cdt

/Changed all operating panel key hints to lowercase as Shift is disabled in the function & change in user manual & help too

/In Case OperMode add if(!EveryPrefDir->PrefDirVector.empty()) as a condition for enabling PresetAutoSigRoutesButton(InterfaceUnit.cpp)

/added '&& !EveryPrefDir->PrefDirVector.empty() in conditions for PresetAutoSigRoutesButton->Enabled = true in SetSaveMenuAndButtons

/Add warning that a station has concourses but no platforms or Blue locs with no track - won't appear in timetable

/Arrange for images to show text on top of named locations

/Remove all 7777s and call CallerChecker

/Don't leave anything in TestFunction()

/add logs where ignore EClipboardExceptions so can see if reach those points

/Check where & why CallLogPop introduced before throw in TrackElementAt - intro on 02/06/21 at rev 3745fadb... with no explanation, just delete it.

/Check all non-error catches & ensure all pop the call log properly - ok they do.

/Remove the non-printable copyright symbol in v2.10.0 - not required anyway

/Need to add GetServiceFromVector, TrackElementPresentAtHV, InactiveTrackElementPresentAtHV & SingleServiceOutput to caller checker

/Add more explanation within the analysis file re directions

/Alter text for splits to make clear whether original service or split service & maybe give sequence at start rather than just the service ref

/Add more diagnostics to analysis error file to indicate where the error occurred

Testing direction analysis:
/- check same headcodes so have /1, /2 etc (LU Met BK, & Kings Cross same headcodes3.ttb [with KC PCR])
/- try many other tts
/- check old KC tt (with cdt errors)
/- try multiple splits (Cornwall)
/- check single service missing cdts

/Remove TestFunction for failed train test

/Try a release configuration instead of debug and see if it still needs .dlls and .bpls.  It doesn't but get a very large number of warnings of the sort 'variable X is declared but never used', when they all manifestly are used!  Unable to discover why so stick with debug configuration, there seems to be no detectable time penalty and the .dlls are easy enough to include. 


VERSION CHANGES AFTER v2.9.1 for v2.9.2

I sincerely hope that this release cures the preferred direction problems associated with the Windows clipboard.  It seemed like a good idea to include preferred directions at v2.9.0 but given the trouble they've caused now I'm not so sure.

One good thing is that one of the corrected bugs explains the error found by Daniel Gill at v2.9.0 in response to which the code was strengthened for v2.9.1, but it continued to bother me because I was unable (then) to reproduce it.

I have tested this release extensively but still feel quite apprehensive, my fingers and everything else are well crossed!  Please let me know if you see any odd behaviour or send in any error reports if they are generated - thanks.

I have also to confess to another error, not a bug this time but a plain blunder on my part.  I had noticed a while back that the performance log omitted exit counts - early, late and on time exits - so in an earlier release I included them, but forgot to initialise them all to zero!  A schoolboy howler!  I only noticed it recently but I'm sure others heve seen it too, with exit numbers listed in the hundreds of millions or even billions!  These have now been corrected.

I was ready to release the new version when Simon Banham sent me an image of a railway with a locked route and signals on it all green!  That was clearly not right.  On investigation it was found to occur when a two segments of automatic signal routes had a segment of non-automatic signal route between them, and that route was locked.  When a train in advance of the locked route passed a signal all signals behind it were reset, but the resetting function failed to take account of the locked route so signals were reset as if it didn't exist.  Fortunately it was quite an easy fix, so that shouldn't happen again.  Thanks are due to Simon for pointing this error out.

Other points not for website:
/remove Beta from version
/run final caller checker

clipboard probs:
/ - set all CheckCount values explicitly to 9
/ - when using 'find' in SelectTrackMap there's an 'in principle' danger that an inactive element might be found - not in practice because active elements stored first so these take all the h & v slots rather than inactive elements, but shouldn't rely on this - find a way to only store active elements in the map - ok, screened out inactives using the 5 inactive TrackTypes
/ - when LoadClipboard adds pref dirs it only explicity adds 7, missing TVPos and SpeedTag.  Should add these too so that CheckCount can legitimately be set to 9.  Best to use the original value for TVPos for consistency & tidiness if possible, though it will be reset when pasted and again later when the track is next linked.  Don't need SpeedTag as set from the corresponding TrackElement
/ - check if Conns & ConnLinkPosses set in pref dirs when track linked, or if these stay as -1 - best if can be set properly.  Yes, these are all set in RebuildPrefDirVector when the track is linked

/Simon Banham error 21/07/21:  Locked route had signals reset as if not locked when a train in advance passed a signal.  Corrected by adding check for locked routes in SetRearwardsSignalsReturnFalseForTrain

/ problem with GetTrackElementFromAnyTrackMap returning element with wrong properties - caused by passing Vector in by value rather than reference, when it returned Vector went out of scope and was invalid.  Changed both Map & Vector to references & ok now (Map needn't be a reference but included it anyway)

/ add name of file where can't load, ask to check spelling - done for railways, timetables & sessions
/ added session file extras to error file & kept the v2.8.0 additions at the end as not wanted in a reconstructed session file
/ 5N80 has too long an actions due time in first saved KC session - OK, needed to keep MinsDelayed at 0 for passes
/ Had failed to zero the 3 exit parameters OnTimeExits, EarlyExits & LateExits when they were introduced <-- BAD ERROR


VERSION CHANGES AFTER v2.9.0 for v2.9.1

This is a bug fix release as a result of an error reported by Daniel Gill when rotating a segment of railway.  I have not been able to reproduce the fault but made improvements to the rotation and associated functions that seem to have cured it.  Also included are a couple of minor changes that were awaiting the next release as follows:-

The 'Comment' entries in the timetable service list have been changed to show the first 15 characters of the actual comment as this is felt to be more meaningful.

A timetable time has been added to all warning logs that are shown in red at the top of the screen.

-> = mention on website (only a few as new version will be v2.9.1)

/hundreds of TrackVector.at(  and InactiveTrackVector.at rather than TrackElementAt(Caller, ...  all done.

/add more brackets in ExNumber function

/use 'y' instead of 2 'x's in rotation of prefdirs (& maybe elsewhere)

Daniel Gill error:  Drawn a blank here, nothing stands out as likely or even possible noting that the error occurred in the rot right function itself
/seed an access fault and see if same - gives an EEFFACE error, access violation means prog is trying to access an area of memory reserved for another program

/Access violation error in Isglassen05 error 31/07/20, due to attempt to access an empty vector address

/look at all at's for track, prefdirs, text etc
/what about cut & copy, any missing properties? No, all stored in vector AND MAP as is, but the SelectPrefDirMap isn't used
/what about the pref dir map, when is that compiled? during paste
/what about Selectvector, is there a map too or just a vector? Just a vector, no map

/->added times with warning logs (in red at top of screen) for more info

/->Changed "Comment" in timetable list box to * + actual comment truncated to list box width - so more meaningful

/added a lot more instrumentation in rotate etc. to help find any more errors that arise in these functions

/added all parameters for pref dirs when flipping etc in response to bug reported by Daniel Gill

/added entry restriction for continuations when a route is set against it

/Added headcode to warning message about 2 or more locations with same name in a service

/Possible problem.  If have 2 or more services with same location name twice or more, and only show message for first, what about second & others? OK, have new panel giving all required information

/Error in location ID in conflict file for Fer entries without a name. OK, had used 'N' instead of AnsiString('N') & gave odd results

/Try to incorporate passes in conflict analysis - 2 entries in LocServiceTimesVector, 1st as arrival & atloc and 2nd as departure & atloc

/Doesn't seem to be a penalty for late exits - ok added in, needed quite a lot of changes including new session file additions

/Added message flags for location elements too long or short so only shown once

/Altered hint for length conversion panel to include 1 mile = 80 chains, 1 chain = 22 yards

/Altered code for finding timetabled location name in case train straddling two different location elements & only one in timetable

VERSION CHANGES AFTER v2.8.0 for v2.9.0

Include on web version page:

This update represents a bit of a tidy-up - adding features that should ideally have been added earlier.

The main addition is to include preferred directions (PDs) in selected railway areas for cutting, copying, rotating etc.  This omission had become an odd man out since the other track attributes were included some time ago.  It was left because although PD elements are derived from track elements the data they embody is stored separately from other track data, so new selection and manipulation functions were necessary to capture and manage them.  These functions are now included and work with all types of selection, including use of the Windows clipboard.

Another addition is to include a check function able to find and highlight potential PD conflicts.  When building PDs it is very easy to miss short segments of track, especially on one leg of a set of points, leaving them without any PD and thereby preventing automatic and PD routes being set across them.  The check function is available in the 'Edit' menu in PD mode and is explained in section 4 of the manual and on-screen help.

Level crossings are now included in zoom-out mode, and they are shown flashing for manual crossings that are open to trains without any routes across them.  This is to remind users to close them because heavy time penalties are incurred if they are forgotten - which I've done to my cost more than once!  To further remind users about such level crossings a warning icon is also shown flashing on the left hand side of the screen.

Points to note that are not included on web page:

Update Contributing.md to mention discord wrt having a question

Lincoln - LS51 went from 2min to 3 min when stopped at Saxilby.  It's because MinsDelayed is only calculated at each logged action and is subtracted from later stop times, assuming the timetable is (reasonably) correct.  If more time is made up before the next station then the subtraction is inappropriate, but subtracted anyway and the time to act can be shorter than it should be.  This is corrected at the next logged action and the time can increase.  Similarly if there is a lot of make up time before the next but one (or more) stop, it won't be accounted for until that stop is the next stop.  Otherwise the calculation becomes too complicated.  Overall the time to act assumes the timetable is reasonably accurate with regard to timings, and if a long way off then so will the times to act.  But, in all cases as the time reduces it becomes more accurate.

Error found in Mins Early calculation - error in Lincoln for LT01 when appeared - Mins Early was ~47mins & LaterStopTime was about same, so didn't show in Actions Due panel, but Mins Early should have been 0 or close to it.  Now corrected.

Checked all catches that don't go to errorlog & added calllogpops where required. Some of these functions call external functions that have errorlog throws - but don't want to add pops in those functions as would lose the last call log item, but do want to allow for the catch coming from such a throw. Don't alter these - will have an extra item on the call log but that shouldn't be a problem.

Added initial check that the executable exists in the working directory.  If not an attempt is made to change the working directory to the directory in which the executable resides, and if successful program execution continues normally, or if fails a message is given about the working directory being wrong and the program terminates.  It was found that sometimes the shift left click taskbar icon doesn't work (seems to only work if there's a desktop or a taskbar icon for the program), and if so right clicking gives an option to run the program, but if selected the working directory is changed to \Windows\System32 giving very odd effects.  The above mod corrects that behaviour by resetting the working directory.


VERSION CHANGES AFTER v2.7.0 for v2.8.0

Include on web version page:

The main change in this version is the ability to use the Windows clipboard so that areas of railway that are cut or copied can be pasted into another railway application. The user manual and on-screen help have been modified to explain the process in section 3.5.

Minor changes:

1. After selecting an area of railway in track build mode the track elements now become visible so that the selected area can more easily be filled with a particular element.

2. If an area of railway was cut and moved and then cancelled, it used to be pasted in the new position which wasn't appropriate, so now it's pasted back in its original position.

3. It was found that if a route was set for a call-on into a platform where there was already a train, and that train changed direction, the route was cancelled. It happened because of an earlier change that cancelled stub routes ahead of a train when it changed direction and the excess route beyond the train was no longer wanted, but the route direction wasn't checked so any route was cancelled. Now the route direction is checked and only routes leading away from the train are cancelled.

4. It was found that a route could be set across a level crossing that had only just begun to close to trains if the route setting was done very quickly. The final signal before the crossing stayed at red so trains would be protected but the route was present and shouldn't have been. The program check routine has now been modified to include routes that are in course of being set in addition to routes already set.

Changes not included on web page:

File specification changed to include the session file addition after v2.7.0 - should have been done for last version.

Error in LC down time: Exeter log 11:34:28 gives 0.4mins & is later than 10:33:01 which gives 0.9mins. Problem is that the excess minutes are only calculated on exit from operation or program, whereas the session value is stored before that.  Best to assume that train will cross LC after the perf summary sent so deduct 3 mins from each down barrier.  If train does cross then accurate, if it doesn't then later play will increase the value, but in all cases the value can only increase in successive perf summaries.

Create character buffers in Utilities.cpp using new but don't use delete[] - there were a lot of these spread throughout the program so memory leakage would occur, all ok now

Manual doesn't explain how to delete a user graphic.  Keep existing arrangement but explain that have to select a graphic (any will do) then right click it.  In fact it does in section 3.1, but not in 3.2 - tidied up now

Manual error: " it does not automatically open after a train has passed" - should be "close", maybe better to keep to barriers lowering & raising, check other sections for consistency - done

Actions due time STILL too short for TL16 approaching Swanley - see session file. Due to not using GetRepeatTime for repeat departures, so departure time was too low,  Corrected now.

In TTrainController::CalcOperatingAndNotStartedTrainLateness where AVEntryPtr is a combined arrival and departure and the arrival time is less than TTClockTime then it registers as 'failed to reach' even though the train has arrived and is stopped at the location.  Also late departures are included in the same calculation (for OperatingTrainArrDep) but these should really be included with late departures.  OK, added !Train.StoppedAtLocation as condition to rule out TimeTimeLocs where train has arrived.  Also dropped departures from both operating and not started trains and dropped divide by 2.

In TTrain::CallingOnAllowed don't count the distance for the track element that the front of the train stands on, as it has already covered that distance, start at the next element.  Can use 'if(Distance > 4000 + LeadElementDistance) then all else stays same, but need to derive it from LeadElement which is a track vector position.

Trains due to stop at next station still have too short a time in actions due panel!  See session 19/03/21 at 9:36 for FP03, due to stop at Chatham and times down but when stops time goes up to 2 minutes.  OK, changed (DistanceToStationStop < DistanceToRedSignal) to (DistanceToStationStop <= DistanceToRedSignal) in CalcTimeToAct

Should only have a 'save' option for a railway after changing or moving text, graphics, copying or cutting.  It's function ResetChangedFileDataAndCaption that sets the option, and it's called too early for text and distances (& maybe others).  All checked & much better now.

VERSION CHANGES AFTER v2.6.2 for v2.7.0

This version incorporates a number of functional changes that will hopefully make operation easier as follows:

In response to Josco's suggestion via Discord of adding information to trains listed in the 'actions due' panel this is now included.  The same information as is selected via the 'information' menu is shown when the user hovers over a headcode and clicks the right mouse button.  The mouse button click was added instead of just plain hovering to avoid distraction when the information isn't needed.

There are now two options available when selecting preferred direction (green) routes.  The green route selection button is split into upper and lower halves, the upper half working as before where the route is built by clicking on each consecutive signal (or buffer/continuation at the ends) - this reflects normal practice.  The lower half button allows routes to be built from signal to any following signal (or buffer/continuation at the ends).  Routes built in this way must still follow preferred directions, so should be more accurate first time than unrestricted routes that don't have to follow preferred directions.  In fact this change was suggested by Bjorn years ago!

When a train exits at a continuation and there are two or more possible exits to choose from, there is currently no way during operation to know which is/are designated as correct in the timetable.  The exit element identifier (ID) is shown only if the exit isn't named.  In this version the allowable exit IDs are listed in the timetable information window.  This change was prompted by my abysmal performance at the last signalling social when operating Liverpool St to Romford.  I repeatedly sent trains out from Romford on the slow line when they should have used the fast line - don't tell anybody!  I won't have that excuse in future so I'll have to find a new one.

When a train was stopped at a signal and a call-on offered and accepted, the time to act remained 'NOW' until it passed the signal.  That was inappropriate so now as soon as a call-on is accepted the train is removed from the list.

The manual and on-screen help have been updated in accordance with these changes as have the file specifications.

One correction was made relating to train colours:

I noticed that on returning a train to timetable control at a stop location after being under signaller control the train colour changed to 'running' (grey) when the route in front cleared, even though the train wasn't due to depart.  The colour should have remained pale green (stopped at location) until the departure time.  The fault was found and corrected.

VERSION CHANGES AFTER v2.6.1 for v2.6.2

This is simply a fix for a bug introduced in the last version relating to two locations having the same name.  What I overlooked was that in a developing railway locations can be saved before they are named, and in these cases they have a null name, which is an empty string - meaning unnamed.  The name checker failed to ignore these locations so the warning message was given in error - causing confusion - each time such a railway was loaded.  Happily the fix was quite simple - a new line that checks for nulls and bypasses the name check if any are found. Thanks to Micke(Commuterpop) for reporting this issue.

VERSION CHANGES AFTER v2.6.0 for v2.6.1

This version includes a number of small functional changes, a couple of bug fixes and documentation changes.

Small Functional changes:

In response to Bill78's supporting program to merge two .dev railway files there was a need to check that two locations didn't have the same name so as to prevent the merged railway being saved as a .rly file.  There is an existing check but this is made on entering a name, and this prevents two locations having the same name, but with two separate railways being merged each might have a name that appears in the other railway.  A new check is now made on loading a railway file, and if the same name is found a warning is given to say that the railway can't be saved as a .rly file.  The check and warning is repeated if an attempt is made to save as a .rly file.

When gap setting the existing arrangement marks gaps to be set, but in a detailed railway these can be hard to find.  Now the marks flash in both zoom-in and zoom-out modes and are easier to spot.

During operation, after taking signaller control of a train, it was easy to click 'step forward one element' inadvertently if two clicks were made in quick succession.  The position of the pop-up menu has now been moved slightly so that the mouse does not lie over any of the options so as to prevent this nuisance.

If a train was removed by the signaller there could be a short stub route left over ahead of the removed train.  This is now removed up to the next signal (similar to route removal behind a train that has changed direction).

Bug fixes:

Androeker discovered an error & notified it via discord on 16/12/20.  The error was that if a location name containing a continuation was changed then a timetable that included it would validate and therefore allow the program to load and operate, the reason being that the list of continuation names [ContinuationNameMap] wasn't updated in these circumstances [it's only updated in TryToLinkTrack, so if that isn't called, as it isn't for a name change, then the error wouldn't be seen by the program].  When the program was exited and later restarted and an attempt made to reload the (flawed) timetable the continuation name list was updated (as it is whenever track is linked), so the program saw the error and the load failed.  This correction rebuilds ContinuationNameMap whenever a name is entered or changed so the timetable validator now gives an appropriate error message.

It was noticed in the 'Actions due' panel that the time to act was sometimes too short for trains that were approaching a stop location.  The time corrected itself when the train stopped.  What happened was that when running early the time calculator didn't take account of the extra time needed at the next station before reaching it.  This version updates the time calculator to take account of the dwell time.

Additional changes:

User manual and on-screen help updated in line with latest program changes.

The file specification document has been expanded to include session files, timetable files and the configuration file as well as railway files.  It now also incorporates the earlier 'Changing a timetable in a session file whilst retaining routes' document.


Detail:
* = mention on website

/*changed position of popup menu for signaller control - as was could inadvertently select 'move forwards one element' if clicked twice in quick succession

/*remove route ahead of a removed train up to next signal - like cdt stub route removal

/*add location name checker for when saving as a .rly file in response to Bill78 merge program (& when loading a file)

/*add flashing gap in zoom out & zoom in for ease of finding

/*[bug fix] Androeker error found 16/12/20 & notified by discord on 16/12/20.  Error was that if a location name containing a continuation was changed then a timetable that included it would validate and therefore allow the program to load and operate it, the reason being that the list of continuation names [ContinuationNameMap] wasn't updated in these circumstances [it's only updated in TryToLinkTrack, so if that isn't called, as it isn't for a name change, then the error wouldn't be seen by the program].  When the program was exited and later restarted and an attempt made to reload the (flawed) timetable the continuation name list was updated (as it is whenever track is linked), so the program saw the error and the load failed.  The modification rebuilds ContinuationNameMap whenever a name is entered or changed so the error is no longer be hidden.

/*[bug fix] Actions due time too short for trains approaching a stop location, corrects when stopped for duration of stop but seems to ignore the next stop duration when approaching. Only seem to calc stop times when actually stopped (see TrainUnit.cpp line 17684), prob to do with early or late running & recovery times & prob a comment somewhere about it.  If merely remove line 17684 then seems ok!  Compare with & without this if... statement and check whether can lead to any problems - if ok then run for a long time to confirm no adverse behaviour.  No, that is needed because in a while.. loop where each element is examined in turn.  What happens is that when running early it doesn't take account of the extra time needed at the next station.  Added mod 16/12/20 & seems ok but needs a lot of testing.

/update on-screen help when all manual changes made

/mention in user manual flashing gaps when setting - to find easier on big railway (both zoom modes)

-----------------------

VERSION CHANGES AFTER v2.5.1 for v2.6.0

Text in website 'Version information':

This version includes a number of functional changes as well as several 'corrections' (i.e. improved undesirable behaviour) and bug fixes.

Functional changes:

A selected area can now be filled with a specified track element, which can save a great deal of time when building long sections of horizontal or vertical parallel tracks.  This was in response to a request from Wilsteady.  The user manual and on-screen help have been expanded to explain this feature in section 3.5.

Level crossings can now be opened and closed manually by left clicking them.  This was in response to a request from Krizar.  The user manual and on-screen help explain how to use this new feature in section 3.1.1.  Note that program versions earlier than v2.6.0 won't load a session file that includes any manually opened level crossings.

When railways, timetables or session files are in folders other than the defaults, and a user navigates to them for loading or saving, the new folder locations are stored in a configuration file (Config.txt) and are used thereafter by the program.  This is helpful for users who prefer to locate their files in other than the default folders and is in response to an initial request from Micke (Commuterpop) and subsequent suggestions from Bjorn and Krizar as to how it might be done.  The feature is described in the user manual and on-screen help in sections 2.3 and 6.3.  Config.txt also now stores the background colour and signal handedness, making the earlier files that were used for these purposes redundant.

Horizontal & vertical signals can now be used in named non-station (blue) locations.  Wilsteady suggested this a few months ago.  I think I was just playing safe in disallowing them but on further thought I can't see why there should be problems and testing didn't reveal any, and it makes them consistent with station locations where signals can already be used.


Corrections:

If a timetabled location appeared twice or more  in a particular service other than with a change of direction between them it was assumed to be an error and not permitted.  It isn't necessarily an error however for trains that take a circular route back to earlier locations.  This was queried by Daniel Gill some time ago and I promised to look at it again.  This version now allows location duplication but gives a one-off message to allow the user to check whether it's intended or an error.

If a railway or session contains user graphics and the program can't find them, then formerly the load would fail.  Now they are loaded without them but a message is given to inform the user.

In the last update a train that changed direction at a timetabled location had any excess route elements beyond the train removed automatically up to the next signal.  This has now been extended to trains under signaller control that change direction.

Bug fixes:

A route that finished at a trailing point leg where an existing route on the other leg looped back to this trailing leg caused an appending route to loop forever.  A new test has been added that checks and exits for this condition.  Thanks to Xeon for spotting this and notifying me by email on 13/10/20.

If a named location was copied and pasted next to another location it didn't take the name of that location but lay next to it and remained unnamed.  This version corrects it, making the pasted location take the name of the existing location.

Detail:

* = to be mentioned on website (as above)

*/mention manual & help changed

/*See if can allow user to click level crossing to change state, need to preserve penalty timing & if opened reclose after train passed or user clicks again  OK done for 2.6.0.

/*See if can include Wilsteady's suggestion re filling a selected area with a track element (and if do so change the paste warning (PasteWarningSentFlag) to include it as well as pasting - no need as filling doesn't overwrite existing elements)

*/See if can set basic directories to the last folder chosen as per Micke's request
done 08/10/20 - details: Now have Config.txt instead of Signal.hnd, Background.col  & GNU, so they are now unused, though signals will initially be on left regardless of how set before & background colour will be black - so may need setting again.  Config.txt only written on closing so on first opening it doesn't exist and all values are the defaults.  Directories (for railways, timetables and sessions will remain where last navigated to in a save (for railways & ttbls) or load (for all).  Can't select session save directory so need to navigate to where wanted in a load - and load one (may need to copy or move one there first if none there already).  If can't find a directory in Config.txt then reverts to the default (as before) directory.  Stoll nervous about this as it uses Windows functions and they often don't do what's expected of them!

/*Added horiz & vert signals to named non-station locations - Wilsteady's suggestion on 09/05/20. I think was just playing safe in disallowing them but on further thought I can't see a reason, and it makes them consistent with station locations.

*/[functional change but really a correction]Check whether a location appearing twice or more needs to be an error.  Maybe just a warning to check it's not an entry mistake. (line, 11684, 11754 & 11836 in TrainUnit.cpp).  If give warning just give it once.  Done all this 7/10/20 & seems ok.  Loops and same consequtive locs now permitted - seems ok, hope there's no dire effects lurking!

*/[correction] If can't find a user graphic then ensure can load the railway without it.  OK, can load the railway, and after some mods can also load a session file.

*/[correction] Add route removal for signaller mode cdts done 7/10/20

*/Bug fix: Error found by Xeon notified by email 13/10/20.  A route that finishes at a trailing point leg where an existing route on the other leg loops back to this trailing leg causes an appending route to loop forever.  A new test has been added that checks for this condition.

/*Bug fix: If copy a segment of a location and paste next to another location it doesn't take the name of that location and named and unnamed lie adjacent to each other.  OK corrected 25/10/20 by removing the CopyFlag condition when pasting - don't need it for pasting because want any locations (which are unnamed for copy) to be named if the they are pasted adjacent to an existing named location

/Bug fix: Don't have change of service show both trains at loc at same time (did this when finish time same as arrival time, & prob also when start time same as dep time) OK added new test 10/10/20

/Bug fix: after clearall usergraphicreselectpanel shown if click graohic button but fails if try to reselect because vector & map cleared when track deleted & recreated.  Check now includes UserGraphicVector being not empty or panel not shown

/[correction] When mirror part of Birmingham station the mirrored part retains the name & the rest is unnamed, but when mirror back again the station takes the name as required but not the blue sidings, they retain the striped image & are unnamed.  Only seems to happen if select a single blue element.  Yes, it's because it isn't expected that added elements are already named (they aren't when adding track), so add a check in SearchForAndUpdateLocationName for the added element having a name and if so enter it -allows to pasted elements having a name.  done 24/10/20

/Check if conflict analysis ok with multiple station names - no, should be ok

/Change manual info to 2.6.0 in base program page

/also add tt error messages on same page

/change text on download/base program page to refer to latest version + mention the taskbar issue re flashing

/drop dropbox links

/Give warning if a paste area will overwrite existing track

/If lower barriers manually then stays red if any auto barrier changing open or close - ok, needed colour selection inside the for.. next.. loop done 30/10/20

/Add SetBarriersDownLCToManual, SetLinkedManualLCs, IsBarrierDownVectorAtHVManual & AnyLinkedBarrierDownVectorManual functions to CallerChecker

/if manually lower LC barriers have to manually raise them, even if set a route across

/ Try to expand on explanations of the 'core' classes in DeveloperGuide to give people a better starting point to explore the code.  maybe an overview flowchart.  [Added call and caller graphs + inheritance diagrams in doxygen html output]

/Added more detail to manual & help on braking force

/Added wording to timetable analyses to better explain use of asterisks - arrivals & departures don't have asterisks if total number of arrivals or departures exceed platforms, added that asterisks show in location analysis in these cases

/Extend error messages for name not being in the tt and name not being a valid location - suggest checking if there are named concourses without platforms. OK done 10/10/20

/Check if there's a way to see if a scrollbar is present in a panel and if so use that for HighlightPanel instead of > 46 entries - that's crude! Doesn't seem to be an easy way - use 47, that's more accurate - done 7/10/20

/Change manual:-
/- 2.3 mention config file & say what it stores, drop mention of signal.hnd & background.col
/- 3.4 1st para say can change location of railway files
/- 3.2 & 3.3 warned about windows fonts in both these paras, drop one
/- 5 include change of timetable location there as above
/- 6.3 mentions Sessions folder location

/Change help file as above

-----------------------

VERSION CHANGES AFTER v2.5.0 for v2.5.1

This is a relatively minor 'tidy up' release.  It adds a few features that improve usability and operation, and corrects a couple of bugs.

Functional changes:

When a train changes direction under timetable control at a location other than at buffers there is usually a redundant route left in the original direction. The program now removes these unwanted routes automatically up to the next facing signal.

All types of finish event are now permitted immediately after a new train is declared ('Snt') apart from Fns-sh & Frh-sh.

Facing signals can now be allowed next to bridges if the user chooses it - this is useful for working on old railways without having to change them or for new densely packed railways. A warning is given that such signals can't be used as route truncate points, but it is now up to the user to decide whether or not that risk matters.

The distance/speed selection warning that all track lengths will be set to the specified value is now only given once.

A few timetable error messages have been clarified.

Bug fixes:

For distance/speed setting the selected track length should show in magenta for easy identification, but prior to this release it was overridden by the normal colour when set.

Track information showed when the mouse was positioned over the timetable editor, this has now been corrected.

-----------------------

VERSION CHANGES AFTER v2.4.3 for v2.5.0

* = mentioned on website

Functional changes:

*Timetable conflict analysis added. This is too complex to explain here but it is described in detail in section 5.12 of the user manual and on-screen help.

*The warning that a session file hasn't been saved when a session is ended or the application closed is now only given if the timetable clock time is 5 minutes or more later than the last session save or later than a new session start time

*Signals immediately before bridges are now disallowed for new railways because the bridge prevents a route from being truncated to the signal (a bridge as a truncate point is ambiguous as it may contain two routes and is therefore not permitted). Existing railways with signals next to bridges will still work as normal, but if any changes are made to the layout then the restriction will apply.

*An option has been added to 'not show again' the warning when changing the timetable clock.

*Information is now provided for follow-on services in both the train status and timetable information windows when hovering the mouse over a train. It includes changes of direction, splits and joins, and departure times. This information helps in decision making for trains at and due to arrive at locations, especially in route setting for departures and platform selection for arrivals.

*The 'Actions Due' panel now shows trains requiring attention before operation is resumed when a session file is loaded. This only applies for sessions saved after operating the railway, it doesn't apply for pre-start sessions. This allows the state of play to be assessed before operation, and trains requiring the most urgent attention can be located ready for routes to be set as soon as operation begins.

*The ability to right-click the first letter of text to delete it has been re-established in 'AddText' mode. From v2.1.0 it was overridden by the screen move routine, but now text deletion takes precedence.

*In the timetable editor the selected entry following a cut or delete action is now the entry before the deleted entry rather than after it. This makes it easier to insert a new entry in place of the deleted entry.

*The keyboard shortcut keys for AddMins & SubMins in the timetable editor have been removed because when these are to be used the edit box has focus and a keypress is interpreted as a text entry rather than as a command to simulate a button click.

Operator action panel hint delay changed to 3 secs from 4, and update operator action panel changed to every second from every 2 seconds.

Bug fixes:

*It was noticed that the response to timetable editor keyboard shortcut keys didn't match button click behaviour accurately in all respects. The keys worked as they should but sometimes the selected entry reverted to the top of the list making it necessary to scroll down again for long timetables. This has now been corrected.

*An error discovered by Albie Vowles and reported via email on 14/08/20 was corrected. It was a fault that was present from the beginning involving locked routes, where all elements in the route normally stay locked until they time out at 2 minutes. In Albie's case a train ran past the signal at danger (with the locked route ahead of it) and cancelled two elements, leaving it shorter than it originally was. Periodically the program rebuilds the entire railway, for example when the viewpoint changes, but in rebuilding this locked route it assumed it was longer than it was, and when it came to the end sooner than expected the program crashed and generated an error file. Fortunately it was easily fixed. The program now checks whether the actual length of the locked route is shorter than expected, and if it is then the rebuilding stops when it reaches the real endpoint.

*An error discovered by JKWok and reported via discord on 9/7/20 was corrected. If separate locations were joined together by a new platform or concourse not all the earlier separate names were deleted. It was due to not ensuring that all elements had the chance to have an existing name erased, but now they do.

Delete own temporary timetable file on exiting the program so as to limit the build up of these unwanted files.

If tried to load a timetable for editing but failed for any reason, the timetable stays displayed with the signal hand image present & obscuring half the timetable.  Now the signal panel is blanked early in the 'edit timetable' function.

Notes about correcting shortcut key behaviour in the timetable editor - this was particularly problematic. After copy a timetable entry using shift c, (not when click button) the list starts again at the top where the top entry shows blue, even though the highlighted (orange) entry is as it was and still shows in the display panel. Spent a long time on this and can't make any headway.  Tried setting ...ListBox->Selected[index] to the highlighted entry in ClockTimer2 when HighlightPanel set but it altered the TopBox value and the highlighted entry for some unknown reason.  Tried lots of other things but none worked.  Found that if pressed C again it reverted to the correct position!  It also affected the other keyboard keys as well but not delete, presumably because had to click a message box button.
Progress!  When press a key it highlights the first entry it finds beginning with that letter - BEFORE the click function is called.  BUT, still can't override it, setting AutoComplete to false doesn't work, and changing ItemIndex, TopIndex and Selected[ItemIndex] in CopyTTEntryButtonClick affects behaviour but doesn't do what is needed.
If press 'c' on its own, goes up to first comment, then click copy button while 'c' held down, still reverts to proper position. Same if hold down shift c then click copy button. Tried setting focus on listbox, no effect, tried running through the copy routine twice (since when shift c pressed again it reverts to proper position) no effect, tried setting AutoComplete to false within the copy function, no effect.
Question is why does it behave differently when all executed code is the same?  And why does it revert to proper position on second keypress (only reverts ok with shift c, not with c on its own)?
Maybe flush the character buffer before the function executes? No effect.
Interesting: in monitoring AllEntriesTTListBox->TopIndex in copy function, in the first pass when shift c pressed it was 75 (as it should be), but when shift c pressed again it entered with the value 1, i.e. the true position, and was reset to 75 in the function, when it displayed correctly.  So it seems that it is reset outside my code by Windows, somehow.  But setting it to 1 initially inside the function had no effect.
Setting AllEntriesTTListBox->TopIndex to 75 in ClockTimer 2 worked ok, regardless of whether key down or not.
Set AutoCompleteDelay to 1mSec (from 500mSec) and added a delay before the copy function of 2 secs, interestingly the positioning of the selected entry to 1 occurred AFTER the 2 seconds, so the Windows function (whatever it is) occurs AFTER my code executes - didn't expect that!
Try flushing the input buffer before the delay before the copy function.  No good.
Seems that the only way to deal with the problem is to pass control back to ClockTimer2 so the function executes after the os does what it does with the key.  Set a flag in FormKeyDown and execute and reset it in ClockTimer2.
It works!!
But, problem with delete (shift e) because the confirm question box appears after the keypress but before the main part of the function call.  Reset AllEntriesTTListBox->TopIndex before the question, that works ok, but still have the selected entry showing in blue which might be confusing, so try selecting the same entry as TTCurrentEntry.  Yes this works ok, added new function SetTopIndex() & call for every keypress in timetable mode.
Problem when press page up or page down with selected entry changing.  Added AllEntriesTTListBox->Selected[TTCurrentEntryPtr - TimetableEditVector.begin()] = true; in ClockTimer2 whenever in TTMode so selected always same as TTCurrentryPtr.  Solves that problem but now when click mouse on one of the listed entries the entry chosen on MouseUp isn't always right.  It's because when scroll to a different position and click on an entry, the ...Selected[...] line immediately changes TopIndex so the entry where the mouse is down is different to the one chosen.  Hence only allow selected to be changed when both mouse buttons are up, to ensure that AllEntriesTTListBoxMouseUp runs first (uses either mouse button).  Yes that works OK.
But, still changes TopIndex on Copy using shift+ c, even though correct item highlighted. Cured it by setting AllEntriesTTListBoxTopPosition = AllEntriesTTListBox->TopIndex in FormKeyDown function for TTMode and restored it in ClockTimer2 if any key flag set.  Now at last all seem to work as the buttons - phew!!

-----------------------

VERSION CHANGES AFTER v2.4.2 Beta for v2.4.3

This is purely a bug-fix release to correct an error reported by Isglassen05 on 31/07/20.  When using 'Delete' in the edit menu in a railway that included one or more user graphics, where the selected area for deletion didn't include any graphics, the program would fail.  It was due to the variable used to search for included graphics being set wrongly.  This version corrects the error.  It is surprising that it hadn't been reported before as it was present from v2.4.0 onwards.

-----------------------

VERSION CHANGES AFTER v2.4.1 Beta for v2.4.2

* = mentioned on website

*Mention can put text on top of stations and non-station named locations (added for 2.4.0 but forgot to mention then).

Updated developerguide to mention the doxy files with more detailed descriptions.

Arranged comments better in header files so display better in Doxygen html.

*Added many more keyboard shortcut keys, most buttons now have a shortcut.  The button hint shows the shortcut and they are all listed in the manual and on-screen help

*Mention manual & on-screen help updated.

*Added points check in check for wrong end entry (Xeon error reported 30/05/20 - not a new fault).

Dropped 'save failed' message when click cancel in a timetable save dialogue and 'File not saved' message in smae circumstances for a railway file save

*Corrected SPAD error reported by Micke 02/06/20 when trains entered a continuation with zero (or very low) speed - see TrainUnit.cpp for explanation in SetTrainMovementValues (search on Micke).

Route locking required took no account of train direction. A train moving away from a set route within 1 element of route start still gave the lock message when attempted to cancel and caused locking. Modified RouteLockingRequired to correct this behaviour.

-----------------------

VERSION CHANGES AFTER v2.4.0 Beta for v2.4.1 Beta

* = mentioned on website

*The ‘Set mean time between failures’ menu option under the ‘Mode’ tag had been left in by mistake during development but did nothing.  This version removes it.  Thanks to Mark for reporting it.

*Inactive track elements such as concourses couldn’t be erased in v2.4.0 due to an error in the code which this version corrects.  Thanks to Krizar for reporting it.

*Mark sent in an error file generated when a train left at a continuation.  The file made it clear that just as the train left it had zero speed (ExitSpeed == 0) and OnelengthAccelDecel was true too for the continuation element.  The zero exit speed caused a divide by zero error that crashed the program.  This version ensures that the program won’t crash if the same thing happens again, but why it happened remains a mystery.

release wasn't "beta" in About box

-----------------------

VERSION CHANGES AFTER v2.3.1 for v2.4.0 Beta

all mentioned on website

Version 2.4.0 Beta incorporates several features, some of which have required significant code modification, so it is released as a 'Beta' because even after a lot of testing there may well remain some teething problems that will need early attention.  It has been compiled using Embarcadero's latest C++ compiler version 10.3, which is based on Windows 10 and generates code that doesn't need any changes to the compatibility mode, at least for normal Windows 10 settings.  A very welcome and surprising outcome was that the program also works on earlier Windows versions without the need for any changes to the settings.  It has been tested on an ancient notebook computer that runs Windows XP and it worked perfectly straight out of the box - that was really unexpected!  It should therefore work on any Windows operating system later than XP.

New features include:

-  Random train failures.

-  The ability to ad user-defined graphics (note that session files saved with failures or user graphics won't load in earlier versions).

-  Rotation by 90 degrees.

-  All pastes are now with attributes, although 'Copy' won't copy location names because these can't be duplicated.

-  Timetable listings can be sorted into alphabetical order for easier service location.

-  More keyboard shortcuts have been added.

-  All session files should load regardless of which decimal point character was used when saved (different countries use different characters) - thanks to Micke for helping me with this.

-  Platforms can now be any length equal to or greater than 20m, which is the minimum length for any track element.  Formerly they were fixed at 100m to prevent unrealistic scaling, but user pressure forced a rethink, especially when Discord member Xander with an X pointed out that ERTMS requires short platfrom lengths in order to display several train locations at each platform.

-  A number of error messages have been clarified.


Bug fixes:

-  The 'Submins' (subtract minutes) box had disappeared from the timetable editor in version 2.3.1.  It's a bit too easy to move buttons and other program features inadvertently when changing the user interface, and I must have moved that button behind one of the panels without realising it so it couldn't be used.  No-one reported it so it must not have been missed, but it's back now.

-  If there was an exit signal next to a level crossing and an autosignals route was set from that signal the train crashed into the crossing.  The reason was that as a train approached the crossing the single route element on the crossing was removed ahead of the train and the crossing started to close, causing the train to crash.  Exit signals now can't be placed next to a level crossing.  Thanks to Krizar for reporting it.

-  If the 'Actions due' panel was clicked before trains were listed, or a train was clicked after it had been removed by the signaller but before the panel updated then the program crashed.  This has now been fixed.  Thanks to Rokas and LiWinDom for reporting these errors.

-  The wrong colours were displayed for underpass lengths and speed limits.  These have now been fixed.  Thanks to Xeon for reporting it.

-  There was a lockup condition when the 'Actions due' panel was open and a train was in a loop. This has been fixed.  Thanks again to Xeon for reporting it.

-----------------------

VERSION CHANGES AFTER v2.3.0 for v2.3.1

* = mention on user website

Make all new signal glyphs consistent & have bot lh pixel in glyph itself white (affects diag sigs 73 & 74)

Made all bitmaps 8 bits per pixel using websafe colours.  Earlier HIDEOPACTIONPANEL, SHOWOPACTIONPANEL, SIGSONLEFT, SIGSONRIGHT and NEWHOME were 24 bits per pixel. Also DISTANCEKEY was 8 bits but not websafe.

*Added underpasses

*Expanded on a few messages to clarify

Updated help files & developer doc

*Note added about underpasses not loading in earlier versions

*Corrected Albie Vowles' error - crashed for very large repeat values.  Now a warning message is given.


-----------------------

VERSION CHANGES AFTER v2.2.0 for v2.3.0

* = mention on user website

*Modified the 'Actions Due' panel to prevent track and train information from being displayed when they lie behind the panel (Thanks to Xeon for spotting this)

*An error in the user manual and help files has been corrected.  'Paste with attributes' was claimed to retain preferred directions as well as track properties. In fact it doesn't retain preferred directions as these are not stored as track properties and keeping them would be a difficult programming task. Re-establishing them for a moved section of track is normally quite quick.

*Signals can now be displayed on the right hand side as well as the left hand side of the track. The setting is made before any railway is loaded so existing railways can be loaded with right hand signals where appropriate. Other than in appearance the signals work as before.

*Timetable clock speeds have been extended to include 1/8 and 1/16 real time. This is to make operation of very large railways easier. Also the time taken for points and level crossing barrier changing and route setting have been kept at their normal values for slower clock speeds, to prevent long waiting times for slower speed operation. At higher clock speeds these durations shorten in proportion.

*The user manual and help files have been updated in line with the above changes and the timetable error messages document has also been updated to correct a few errors and to make some explanations clearer.

*Changes made to text and graphics handling functions to make memory usage more efficient.  There had been failures when loading very large session files, especially those containing very many trains.  These changes provide more memory space for such files.

Message boxes added for failure to load a session file due to insufficient memory and also for failure to create very large bitmaps.


VERSION CHANGES AFTER v2.1.0 for v2.2.0

* = mention on user website

*Actions due panel added

*use of solid colours should avoid need to set 256 colour compatibility

*Paste-with-attributes feature added

*Level crossing excess barrier down time not saved on exit so start a new session with a clean slate! Change at next release.  ok corrected at v2.2.0 - 07/07/19. Added floating point value as a string after ***Interface***

*'End' key can now be used as a zoom toggle

Ctrl+S, A, W & Z disabled for screen moving. Ctrl+S conflicted with save in v2.1.0 but no-one reported this so these keys probably not used, especially since now (since v2.1.0) have ability to move using the right mouse key.

Used TPanel for the floating information label, with an automatic resizing TLabel on it containing the information.  TPanel is a TWinControl which can overlie other panels, whereas a TLabel (as before) isn't and TPanels always overlie it.  So now there is no need to remove the performance panel when it obscures a floating label as the floating label appears on top of it.

Had underlines in floating timetable for '&' character (used for hotkeys but applied in error here), corrected at this release

Program crash with error report when try to split at a named non-station location & there is a non-track element present (i.e. effectively a nonstation [blue] concourse) - discovered by Xeon & notified 14 July 2018.  Ordinary concourses are excluded but these aren't.  It's because the active track 'find' function fails as there isn't one for this type of element.  Keep the 'find' function but include a test if it fails where if due to one of these elements just 'continue', otherwise throw the error. OK corrected in v2.2.0


VERSION CHANGES AFTER v2.0.0 Beta for v2.1.0

* = mention on user website

*mention a) to l) as a group - good programming practice changes & improved readability (credit due to SS)
a) Change the way version info is retrieved (internal fix - no user-facing changes)
b) Remove beta tag (6 months have passed)
c) Change the version numbering format to use Semantic versioning (see https://semver.org/)
d) Add 'Build' keyword support to version for future Continuous Integration implementation
e) Menu improvements - Help and About submenus put in standard order, menu text changed to title case, added railway website link to help menu, added icons to menus
f) Add key modifiers to menus, and ellipses on dialog opening actions
g) Fix typo in Utilities::CallLogPop() comment
h) Add CONTRIBUTING.md file
i) Remove ambiguity from Clear All dialog by changing 'delete' to 'close'
j) Added icons to Timetable editor buttons, added two-way toggle buttons to Timetable conversion tools, and made Start Time edit box informational-only
k) 'Doxygen' file documentation added with corresponding header file comment changes
l) Menu icons added

m) Corrected Sam Wainwright error (reported 24/08/17):  Existing program sets track finished to !NeedToLink in cut, paste & delete, so if track not linked to begin with and no elements erased (say select a blank area of screen, just text or inactive elements & cut or copy it then paste it elsewhere or delete it), then !NeedToLink is true and TrackFinished becomes set to true also after the operation.  Changed all 'Track->SetTrackFinished(!NeedToLink);' in Interface.cpp to 'if(NeedToLink) Track->SetTrackFinished(false);' so only set it to false if NeedToLink is true.  Included for v2.1.0.  Same error occurred for Dennys Huang on 22/10/17.

n) Corrected Moric1998 error (sent in 24/03/16), corrected in TrainUnit at 'if(ContinuationExit(2, LagElement, LagExitPos))'

*o) Corrected mainform caption when creating or editing timetables.  Formerly the earlier loaded timetable name remained in the caption in error.

*p) Corrected the problem when presetting automatic signal routes, where a route could be set across a diagonal fouled by adjacent track (i.e. a track element with a diagonal link that touched another track element's diagonal link).  Added a new function to check for such conflicts - PresetAutoRouteDiagonalFouledByTrack

q) Corrected Jordy de Koning's error:
[Jordy de Koning reported a speed limit bug 27/12/16.  If a train is standing on a track element with a speed limit > 400kph and a session file saved, it fails on subsequent attempts to load.  The reason is that the train is limited to 400kph but not the track speed limit, and the session file checks the track speed limit where a train starts and fails if >400kph.  Need to add a limit and message when setting track speed limits.]
Track speed limits are now limited to the value in TTrain::MaximumSpeedLimit, which is 400km/h.  These are limited for new settings and when loading existing railway and session files where filed values are >400km/h

*r) Corrected signal clearing behaviour on locked autosignal routes exiting at a Continuation - signals continued to clear in sequence in spite of the route being locked.  Corrected so that all now remain at red.

*s) Allow route locking for occupied routes.  I had thought that this should be disallowed as SPADs are more likely in these circumstances, but it meant that long autosignal routes couldn't be removed when there was heavy traffic and the route was never free of trains.  One user, Brian Clancy, commented on this back in 2016, pointing out that it is allowed in real railway operation when circumstances require it, which common sense dictates that it has to be to avoid a 'no-way-out' situation.

*t) Allow railway dragging with rh mouse button in either zoom mode

*u) Resize form to suit user changes so still have complete interface at any size (so far as overall size allows)

*v) Updated help manual and on-screen help to reflect new capabilities

*w) Added more information and timetables for waiting trains


VERSION CHANGES AFTER v1.3.2 for v2.0.0 Beta

* = mention on user website

*a) Embarcadero changes.  General info on website, more details in Development.doc.

*b) Railway file loading - all files together rather than having to use drop-down box - makes loading quicker and easier.

*c) Added Fjo as an option after Snt to allow empty stock to be picked up. Richard Gaede asked about this some time ago and I hadn't until then realised that it wasn't possible.

*d) Brought help system up to date to use .chm files.  Had to change the main screen focus from restoring at each clock cycle to restoring when click the main screen - so the navigation keys change the display rather than cycling through active panel buttons.

*e) Made 'Show status' and 'Show timetable' for trains active on startup so don't have to select each time. 


VERSION CHANGES AFTER v1.3.1 for v1.3.2

* = mention on user website
	
*a)  See Glenn Mitchell error problem (14/04/13) & 2 required fixes in TrackUnit.cpp  Fails when try to set automatic signal routes prior to operation if there exists a junction where there's a preferred direction set on the through track but not on the diverging track, where the diverging track links to a signal.  [done for 1.3.2]

*b)  Noticed that can set a route across a fouled diagonal if the start element is adjacent to the diagonal.  Fouled diagonal checks not made for first element - include at start of each search (preferred & non-preferred routes) & disallow if fail [Done for v1.3.2]

*C)  See Ian Walker's email of 18/04/13.  Timetable edit screen stays up when click cancel on file open dialogue panel - should either go back to base mode (preferable) or at least keep File & Mode menus disabled so screen has to be exited before can do anything else. [Corrected at v1.3.2]

*d)  Found a problem in the v1.3.0 addition relating to resetting of signals when back out of an autosigs route under signaller control after changing direction (in UpdateTrain()).  Found that a signal that had reached double yellow in ContinuationAutoSigs was reset to red when a following train's lag element moved off a signal in the normal course of events [due to SkipContinuationAndBufferAttributeChange being set true in SetRearwardsSignalsReturnFalseForTrain when signals in an auto sigs route still timing out during resetting after a train has passed].  Hence introduce a new check that the train is in signaller mode and that the train's lead element isn't on the same route as the autosigs route before calling SetRouteSignals() [done for v1.3.2]

e)  Discovered odd behaviour during event logging for speedbuttons - see TInterface::SpeedButtonClick(TObject *Sender). Use modified version where CurrentSpeedButton->Tag is converted to an AnsiString + check if any other situations where LogEvent has values not converted to AnsiStrings.  Note that this may have something to do with Richard Gaede's error where a modified railway had the 'linked track' flag set and failed when setting a new location name due to program assuming track was linked when it wasn't. [done for v1.3.2]

*f)  John Phillipson's train split error report 09/04/15 - What happened was as follows.  All trains that are present on an operating railway are stored in an array, each train containing 416 bytes of data and the whole array containing (416 x number of trains) bytes.  When a new train is added, as it is when a train splits, it is added to the end of the array, but before that is done the system (i.e. the internal Borland system, not my program) checks to see that there is enough free space (i.e. unused memory) at the end of the array to accommodate the new train, and if there isn't then the whole array is moved to a new location where there is enough room.  Now that wouldn't normally be a problem to an application program because any train can still be accessed through the train's identifying address within the array and that doesn't change.  BUT, it was a problem to my program, because within the split routine itself the train (the one that is due to split) is accessed by a shorthand method that stores the original array address when the routine is entered and uses that for the duration of the routine, on the assumption that it won't change during the routine, but of course it will change if the array is re-allocated elsewhere, and that is the problem.  In fact much of the data at the original address stays the same, but since that area of memory is now 'unused' as far as the Borland system is concerned, it is liable to be overwritten by anything that needs it.  What was overwritten in this case was the train's headcode, so that when the program next attempted to write it to an area of memory that was only long enough for a proper headcode it was found to be too long, and the system rightly complained.  See notes in UpdateTrain after split functions & in the split functions themselves [done for 1.3.2 -  (sent as beta to John Phillipson initially)]

g)  Noticed after correcting the train split error that the level crossing in John Phillipson's railway closed immediately after train passed, & found delay time 0 rather than 10secs.  Traced to fact that delays only set in MainScreenMouseDown2, so after a session reload without clicking mouse on screen the delays are unspecified, though seem to be zero.  Added delay setting in LoadSession for v1.3.2

*h)  Carwyn Thomas error reported 24/05/15:  Incorrect SPAD when 6B35 passed last signal before continuation and error when tried to remove it manually when halfway through exit.  Found fault due to failure to remove - prog tried to access LeadElement when value was -1 (due to exit) in 'AbleToMoveButForSignal' and also in 'RemoveTrain1Click', these corrected for v1.3.2 Beta2 & sent to Carwyn to test 25/05/15.  SPAD error still under investigation at 27/05/15 - can't reproduce from session files.  Subsequently found that there were other errors related to signaller options - TimetableControl1Click, MoveForwards1Click and StepForward1Click, these corrected at Beta3 (StepForward1Click is now disallowed in these circumstances). SPAD error found to be similar to 'd' above, but here train is moving forwards and when its lag element passes a signal in the opposite direction then the autosigs signal is set to red, for the same reasons.  The existing correction at 'd' covers this situation, Carwyn was using v1.3.1, so that is why he reported it.
                    

VERSION CHANGES AFTER v1.3.0 for v1.3.1

* = mention on user website
	
*a) 1.3.0 allows letter keys in distance/speed boxes to move screen, all illegal except the 'd' in 'Mixed', though user doesn't normally enter this. Corrected in v1.3.1.

*b) the miles/chains & mph boxes stay visible after distance setting when another button is clicked. Corrected in v1.3.1.

c) Exception thrown in GetStartAndEndPrefDirElements(...) if NextElement not found, but could be a bridge where only the opposite track PrefDir is set, in which case 
won't find it.  Found with JK's DLR railway (17/11/12) where undertrack PrefDir not set just west of Poplar.  Hence first test if element is a bridge and if so set 
ContFlag to true & break (same as not finding PrefDir element at all).  Modified at version 1.3.1.  Note that it's not NextElement that is to be examined but 
NextTrackVectorPosition, which can be found easily by using PrefDirPos0 (there will be a PrefDirPos0 or would have exited earlier, and it doesn't matter that PrefDirPos0 
isn't on the route in question because only the TrackType is needed).

Two faults notified by Ian Walker in his email of 25/03/13:-

*d) Program locked up if points changing when deactivates [cancelled in deactivation function];

*e) MaxRunningSpeed set to other train's value for joins, but other train may be a service continuation in which case its MaxRunningSpeed is zero until it takes over 
during operation [tested & ignored if < 5km/h before setting other train's MaxRunningSpeed]. - mention in relation to Ian's railway - 1H27 falls foul of this error if 
earlier program versions used

2 other faults found while operating Ian Walker's Chiltern Railway:-

f) If a route is being created that extends an existing route, but before the flashing stops the existing route is deleted by a train moving on it in the wrong direction, 
then an error is thrown when GetFixedRouteAtIDNumber (caller 49) is called from ConvertAndAddNonPreferredRouteSearchVector with an invalid ID number.  It would also be 
thrown for ConvertAndAddPreferredRouteSearchVector. What is needed is a test to see whether the route exists just before the new route is created, and if it doesn't then 
StartSelectionRouteID is set to -1 and the 'if(StartSelectionRouteID > -1)' subfunction exited.  A suitable test function has been created called IsThereARouteAtIDNumber.

g) If try to end a route at an element that links to a trailing point or a crossover, when a non-autosig route extends an autosigs route beginning at that point, then the 
message 'can't end a route adjacent to the start of an existing route' is given - because the non-autosigs route has its first PrefDirElement at that point.  Need to 
check if the existing route actually uses the link that the element links to, and if it doesn't (i.e. crossover, points or bridge), then allow the route to complete.  
Added a condition that tests the link that connects to the end route element link (which must be a 1-track element because can't select 2-track elements) is in a route.


VERSION CHANGES AFTER v1.2.0 Beta for v1.3.0

*a) If a train enters the rear of an automatic signals route under signaller control, stops and reverses back out such that LeadElement isn't on route, the first signal stays red.  
Need to check when under signaller control during UpdateTrain whether LagElement on a signal on an automatic signal route and if so SetRouteSignals just after it moves off the LagElement.
*b) If remove a train from an automatic signals route then the signals behind it stay as they are.  Need to check if removed train on such a route & if so set all rearwards signals after removal as 
above from the first position in the route.
c) Note that ground signals display differently for proceed on call-ons depending on whether a route is set or not (see Mark Jones' session file of 28/06/12) - because if a new route is set then 
PlotSignal is called from ConvertAndAddNonPreferredRouteSearchVector in MouseDown2 for Level1Mode == OperMode, which plots correct aspect, otherwise the callon position lights are just superimposed.
Try using PlotSignal in place of just using position lights in MouseDown2 - OK, works providing Clearand... included to replot the routes.  Corrected in v1.3.0
d) If a route is attempted to be plotted to join an existing route when the element behind the destination signal is a bridge, and there's a route on the other bridge track, then the attempt fails,
because of an error in GetNextPreferredRouteElement and also in GetNextNonPreferredRouteElement.  Corrected in v1.3.0
*e) allow arrow & home keypresses to move screen - see forum comment 30/09/12
*f) change floating window to just give whole km/h - to cut down the flickering
/g) dropped InfoPanel->Visible = false at line 5648 in Interface.cpp, not sure why there but removed panel when shouldn't
*h) New manual/help changes to include arrow & home keys to move viewpoint (3.1.rtf & manual.pdf)
*i) mention access to older versions on source website & give link - on downloads page

VERSION CHANGES AFTER v1.1.4 for v1.2.0 Beta

*Keep existing information settings when load a new session
*Allow route or part route into platform for callons, so can set points by setting route
*Change manual & help relating to calling on
Change condition to release 'TimeTimeLocArrived'
If change first train (using timetable 1) to signaller control on Mile Oak railway then restore TT control when stopped in station, the train skips the stopped in station
event.  [OK, added 'Train.ActionVectorEntryPtr++' for TimeLoc format in 'TimetableControl1Click' in Interfact unit.]
*disallow creation of automatic signal route from buffers
change copyright notice to include current year
*if display 'About' box in pre-start mode when exit reverts to paused mode, should revert to pre-start.
*created a way of setting automatic signal routes automatically in pre-start mode
*Change the manual to add details of preset auto routes and when available
*Note that a route can be set across a diagonal that is fouled by a train (though not by a route): changed to prevent a route being set if a train 
	present without a route, also: (a) a train moving on a crossing diagonal now force cancels a route on the crossing diagonal, and a route will be force 
	cancelled if a train moves onto it while it is still flashing; and (b) trains now crash if meet on a crossing diagonal

Note for further development from Sam Wainwright: Allow route setting over shunt signals so they clear automatically without having to click directly on them.
Note for further development from Keith Hazelton: Allow random variable station delays, say between 30 secs & 3 minutes, to account for variable delaying effects caused by passengers etc.

VERSION CHANGES AFTER v1.1.3 for v1.1.4

	*error when have a location name for a single named element - if erase the name then the text is not erased, though it is if there is more than one linked named element - corrected
	*error in performance summary - if have derailment then overallscore (in TrainUnit.cpp) reduced from 100, TotArrDep stays 0, so report that no arrivals or departures when there likely are some - corrected
	*added file changed flag for new home button clicked in zoomed-in mode


VERSION CHANGES AFTER v1.1.2 for v1.1.3

*Added check for two adjacent level crossings on same track in TTrack::LinkTrack & TTrack::LinkTrackNoMessages after notification by Bjorn
Verzijlbergh.

VERSION CHANGES AFTER v1.1.1 for v1.1.2

added 'CtrlKey' & 'ShiftKey' booleans to the screen movement button logs & call stacks so can see how far moved
*Corrected the errors notified by Matt Blades on 28 & 30/06/11:-
    a) wouldn't allow an automatic signal or preferred direction route to be set into a continuation that was at TrackVectorPosition == 0 on v2 of
    his bus railway.  Due to a false positive in GetNextPreferredRouteElement at "else if(StartElement2.Conn[StartElement2.XLinkPos] == EndPosition)",
    with StartElement2 a blank element & StartElement2.XLinkPos == -1.  In some cases this matched EndPosition which was 0 and then failed during
    SearchForPreferredRoute.  Corrected by adding a check for StartElement1.XLinkPos > -1 & StartElement2.XLinkPos > -1 in both conditions.
    b) he discovered that if the user changed to a different application when a route was in course of being set then the program froze on
    reselection.  Due to the deactivation routine not detecting this situation and leaving RouteFlashFlag set (amongst other things).
    Corrected by checking for this situation in AppDeactivate and cancelling the route that is being set.

VERSION CHANGES AFTER v1.1.0 for v1.1.1

*sessions saved with one regional setting need to be reloaded in the same regional setting to load properly because of the different
    number formats.  Can change temporarily to load then change back to home settings & resave so don't need to reset again
*Level crossings displayed as always open horizontally on images regardless of track direction.  Corrected in this version.

Changed CheckFileDouble to check that represents a genuine double type number because of different regional settings
Changed help file & user manual to say that need same regional settings when loading session files


VERSION CHANGES AFTER v1.0.0 for v1.1.0 (level crossing version)

*level crossings added
*mention routes allowed to be cancelled without locking if first train behind signal stopped
*mention restricted screen grid & its extension
*tidied up location naming functions: when combining two named locations the second name stayed on screen, and could give a timetabled location the same
    name as a continuation
*explain that although barriers don't shut over the track the display does, to make clear that trains shouldn't pass
*improved appearance of diagonal ground signals, the sloping top didn't stand out well enough, better now
*for help manual: can't cancel a route when LCs changing, or set a new route through a flashing LC
*note, earlier versions will fail if try to load railways or sessions with LCs

[done] add new graphics in dev guide
[done] add SaveSessionBarriersDownVector, CheckBarriersDownVector & LoadBarriersDownVector to callerchecker list
[done] add LCs to help files
XMention in help no session save while LC changing - evident by button being blank
Xdon't think the barrier down time allows for barriers still down at finish - since don't know whether a train would pass or not give benefit of
    doubt & still give 3 mins allowance - no, won't make much difference so drop this
[done] need to save barrier down vectors in session files else barriers stay down after trains pass
Xmaybe also need to check for barriers down without being in vector & raise them, in case have overlooked any other circumstances? - maybe LoadTrack will
    load as closed to trains & set attribute correctly so that if not listed in BarriersDownVector then will be closed to trains? OK, att attrs set to
    0 on loading
[done] ALSO session files won't save the barrier vectors, should take account of barrier down times at session save to calc proper penalty
Xclear all flashing vectors at session load (no need, ResetAll does this as it calls case BaseMode)
[done] consider allowing routes to be cancelled without locking if first train behind signal stopped
[done] need to do a caller check after all complete for LCs
[done] screen grid only displays over original screen area
[done] check for any omitted logpops in changed .cpp files
[done] new callers for PlotAndOpenLevelCrossing, PlotAndCloseLevelCrossing, IsOpenLCAtHV, IsLCAtHV, OpenLCAtHV, CloseLCAtHV, ResetLevelCrossings,
[done] check for any additional functions as well as the above (do a .h comparison of all changed files since early development
[done] for 'not enough information' in perf summary say 'no timetable arrivals or departures...'
Xneed to check Interface.dfm, as changed at rev83 in trunk (probably just cosmetic)
[done] for eraselocationnametext just erase named loc name, not other text
[done] named locs that combine retain the 2nd name as text on screen when should be deleted automatically, check what happens with 3 or more
    OK, added text erase function in EnterLocationName (OK for 3 or more)
[done] check new text erases code extensively & only where needed
[done] check can't start a train on a LC
[done] don't allow a train to be created at a LC - need new condition in TTrainController::CheckStartPositionValidity
[done] platforms can be placed where there are LCs
[done] if set an autosigs route behind a route that is opening a barrier to trains then the signal behind the LC changes immediately - OK needed to check for
    an LC with barriers up or changing in FindForwardTargetSignalAttribute
[done] check code for only plotting items on the visible portion of the screen, ensure allows for different resolutions
[done] when crash into LC & remove train the graphic doesn't display correctly - set the rebuildrailwayflag after the crash in TrainController->Operate
    so that Clearand... is called to replot the LC correctly
[done] test crash & penalty
[done] check both route types for each type of track and for all types of LC - single, double & multiple in each track position + check all types of
    extended routes
[done] note: when extend a route, the points on the existing route flash white momentarily, but not if autosigs followed by non-autosigs - it's because
    points are replotted for the whole route during SetRoutePoints when a same-type route extended.  No need to change, doesn't affect anything.
[done] check all required LC vector values changed at each type of transition
[done] improve graphics - darker brown?  check with all backgrounds
[done] have a TrainPassed flag where any train passing sets it for the LC object, and if none passes the 3 mins allowance doesn't count
[done] check that only the latest LC flashes for an extended route - OK
[done] add a crash penalty + list in perf summary
Xmaybe drop all base graphic plotting, route covered by route setting - no, needed during flashing
[done] need to check correct penalties for excess barrier down time + correct perf file display
[done] note: when running Bjorn's railway some of the single route elements didn't cancel - due to StartSelectionRouteID staying set after it's
    cancelled - set back to -1 when cancelled (by either right or left mouse click) [maybe cancel in RevertToOriginalRouteSelector BUT
    ensure this OK for all calls of this function] - OK, corrected this in RevertToOriginalRouteSelector
[done] when select any area with LCs present the LCs vanish - due to Clearand...
[done] have routeflashflag & consecsignals in one of plotLC functions but not other yet
[done] for floating label - use clearand.. whenever label goes off & reset plotted flag
[done] changed flashing points/routes & LCs to use timetable clock rather than real time, so when have message the flashing continues after as normal
[done]     BUT need to stop flashing if pause
[done] Started developing level crossings - new speedtag 144
[done] review FirstUnusedSpeedTagNumber wherever appears & ensure all usages dealt with
[done] check for diff background colours
[done] try LCs with all background colours
[done] can't change a LC with a route through it
[done] need to check that LC attributes always as expected
[done] need to plot flashing LCs off-screen & plot as single assignment, else get screen flashing
[done] check all Sxx train starts & ensure 'Running' & TrainID set correctly for all (6 in all).

VERSION CHANGES AFTER BETA V0.6c for RELEASE VERSION 1.0.0

*Judged stable enough to come out of the beta testing phase, use GNU version numbering vX.Y.Z - Major/Minor/Patch
Changed derail score to 5% from 9% (as already done in lev cross branch)
Set RunningEntry to Exited for trains removed by signaller
*Added IncorrectExits to SPADRisks & MissedStops in perf review
*Added OtherMissedEvents & UnexpectedExits as equivalent to 15 mins late each in perf review


VERSION CHANGES AFTER BETA V0.6b for BETA v0.6c

*corrected the headcode validity checker - caused chronological timetables to be corrupted

VERSION CHANGES AFTER BETA V0.6a for BETA v0.6b

*added performance scoring system
Contents file recompiled because of 5.3 title change
When editing a tt the loaded tt is changed when validate the editing tt, so have reset the TimetableTitle to "", this is the marker for timetable loaded,
and also cleared the TrainDataVector.
*when pasting an entry into the timetable the current item is now advanced to the pasted entry (like insert new entry), formerly stayed on the earlier entry
*corrected Peter Ruddock's timetable error by ensuring that TTCurrentEntryPtr value valid after every erase, insert & CompileAllEntriesMemoAndSetPointers
*Added new TrainOperatingData values for RunningEntry & TrainID for new trains from fsp/rsp/Sns & all shuttle to shuttle links - this cures the error reported by Glenn Mitchell where repeat service trains failed to join
Added a raft of common system #include files before #pragma hdrstop in all source files - speeds up compile times considerably
*Added service information to the train status floating window - so can identify which a particular train is, useful for joins where repeat numbers have to match
*mention same h/c trains still look for correct repeat for linked services, e.g for Fjo/jbo
*Allowed unrestricted headcodes (any alphanumeric for the 4 characters) except for repeats with incremental digits, where must have last 2
    characters digits
*point out that new tts using non digit last characters won't load in old versions
added 'if not zoomed out' condition for PlotSignalBlank & PlotPointBlank
set 'TTClockAdjButton->Enabled = true' in 'paused' or 'prestart' in MainScreenMouseDown3 for zooming back in (had forgotten this in v0.6a)
dropped AnyHeadCodeValid flag + all references to it
Added Last2CharactersDigits + CalcOperatingAndNotStartedTrainLateness callers in callerchecker

VERSION CHANGES AFTER BETA V0.6 for BETA v0.6a

*added facilities for handling different screen resolutions, 1024 x 768 recommended minimum
amended manual/quick start guide/help file etc where resolution mentioned
*corrected error notified by NajamUddin 17/01/11 but email not seen until 31/01.  Coding error when calling on and element at platform is points.

Note:
Vertical pixel counts:
Screen title: 18 for classic style, 26 for xp style} part of Interface that isn't available to other components
Menu tabs: 20                                      }
Mode Buttons: 30
Track build panel/timetable clock panel: 65
MainScreen->Height ((Screen->Height - 192) / 16) * 16   (192 = 18+20+30+65+29+30) (in xp style screen will be 8 lower because its top is 8 lower)
Free area under MainScreen: 29 for classic style, 17 for XP style (any extra due to MainScreen->Height truncating down to a multiple of 16)
Windows taskbar 30 for classic style, 34 for XP style


VERSION CHANGES AFTER BETA V0.5 for Beta v0.6 (Major update)

*incorporated two and three-aspect signals and ground signals

*incorporated variable speed timetable clock + ability to increment the clock

*Added HP/KW converter to the timetable, and grouped each converter in its own panel + add & sub mins also in its own panel.  Then put conversion hints in the respective panels only.

*Najamuddin's error corrected re train creation during route building

*ask people to report any failures to load earlier files

*adding 1.5 mins to Format96... no good as adds it when displaying performance log, added ~0.5 secs for Format96HHMMSS & ~0.5min for Format96HHMM

*set minimum speed limit to 10km/h, else can have a divide by zero error during train speed calculation due to approximations made in that calculation

*set minimum value of 10km/h for max train speed (val of 1 gave divide by zero error in speed calc as above) - OK if start speed > max speed as set
down to max in PlotStartingPosition

*note that on loading railways saved in earlier versions speed limits will be set to a min of 10km/h & on loading earlier tts max train speeds will
be set to a min of 10km/h - may get warning messages

*note that railways saved in earlier versions will load with 4-aspect signals, and railways saved in this version then loaded into earlier versions will have all 4-aspect signals

*errors corrected in calculating speed limits & lengths for points in some circumstances during operation

*removed 'Location unnamed' from parapets

*Changed PlotAlternativeTrackRouteGraphic because it plotted a pref dir graphic for overbridge routes when train went underneath
    from   DestGraphic->Canvas->CopyRect(DestRect, RouteElement.GetEXGraphicPtr()->Canvas, SourceRect);
    to     DestGraphic->Canvas->CopyRect(DestRect, RouteElement.GetRouteEXGraphicPtr()->Canvas, SourceRect);

amended manual
amended all references to four aspect only on website (source & user)
checked all CallLogPops
moved PointFlashFlag to TTrack from TInterface so new trains can test
moved RouteFlashFlag to TTrack from TAllRoutes for consistency with above
dropped special signal platforms
moved Clearand... outside the for.. next.. loop in ClockTimer2 when removing single route elements to avoid multiple calls
checked for any more Clearand... in loops & move outside if possible - causes delays [only for locked route timeouts & callons - leave as they are]
tested non-special plats with signals, ensured always use PlotSignal whenever need to plot a signal, inc when lay down a new platform at a signal,
    ensured dbl yellow displays OK when changes to red or green
checked KCBridges that when train leaves an element it replots the train underneath OK
checked KCBridges that when train leaves an element it replots the locked route marker correctly
if a train on a bridge where other route locked the lock and route marker not plotted correctly - added PlotAlternativeRouteGraphic to UnplotTrain
added tt clock time to event log in error file
added more events to event log (e.g. train creation)
added new ground signal graphics to transparent colour change list for dark/light backgrounds
changed image displays for ground signals & checked all
operating image writing stops tt clock but not other images, corrected, now all stop the clock
when train passes ground sig it plots bottom half of normal sig, corrected
ensured train passing ground sig in opposite direction replots OK
checked ground sigs against platforms
tested all types of ground sigs for train passing
tested all types of ground sigs for autosig route
checked correct calling on for ground sigs
checked operating image for calling on for normal & ground sigs
checked callers & added new functions to the checker


VERSION CHANGES AFTER BETA V0.4e for Beta v0.5

For reselection added IsTrackFinished() condition before enabling SelectLengths1

*If start in wrong direction when finding pref dirs & reach TotalSearchCount limit then still won't find in right direction because doesn't reset, so add TotalSearchCount = 0 for each of the 4 exit directions in GetNextPrefDirElement. (Discovered when examining James Underwood's Slough IECC)

Also added above to route searches to be safe though no problems had been found for these

Quick start guide changed to include trains stopping for trains in front if at a timetabled location (p4)

*Rounded up the hours integer in Format96HHMMSS & Format96HHMM to avoid undershooting the hour for formatted tts (e.g. can get 07:00 when should be 08:00)

*added distance & speed converters for distance/speed setting, & speed converter for timetable compilation

VERSION CHANGES AFTER BETA V0.4d for Beta v0.4e

Added larger viewpoint movements when Shift key pressed (full screen width & height in both zoom in & out modes).  Also included this (along with
Ctrl key for small movement) information in the button hints.

Also changed the user manual (section 3.1) & help file to include this information.

VERSION CHANGES AFTER BETA V0.4c for Beta v0.4d

version number changed to 0.4d

*15/12/10: In light of Mark Jones' route setting problem removed the three instances of horizontal & vertical distamnce limits of 120 elements in
GetNextPrefDirElement & the 2 GetNext...RouteElement

*also discovered an error where if zoomout when moving to next PrefDir element get error where can't set focus for the AddPrefDirButton when click to
zoom back in again.  Introduced condition where doesn't try to set focus if zoomed out in SetLevel2PrefDirMode

also found missing possibility in GetNextPreferredRouteElement when trying to set route & best direction doesn't correspond to XLinkPos in StartElement1
 - added new search in non-best direction

*07/12/10: Section 6 of user manual & help file changed from "....but will only stop for trains in front if they are being called-on or under signaller
control (see later)." to "...but will only stop for trains in front if they are being called-on, under signaller control (see later), or at a timetabled
stop location."

TTextHandler::EnterAndDisplayNewText amended to strip leading & trailing spaces and control characters from entered text -
uses Text.TextString = Text.TextString.Trim()

TInterface::LocationNameKeyUp amended where entering a new name, or a changed name, to use the AnsiString Trim() function to strip leading & trailing
spaces & and control characters, instead of just stripping leading spaces longhand.  This also corrects an error whereby a location that has a name
allocated with a leading space isn't entered as visible text, because leading spaces are trimmed from LocStr, but the original LocationNameTextBox->Text
is used in AddLocationName, so FindHighestLowestAndLeftmostNamedElements returns false because the two names no longer match, and the text isn't added
to the text vector.


VERSION CHANGES AFTER BETA V0.4b for Beta v0.4c

changed version ref to v0.4c

*added HasTrainGone() condition in TrainController::Operate() to prevent 2 trains both having TrainGone set
at the same time.  That caused the error Craig Weekes reported in November 2010 where 2 trains exited at the same time, and later the TrainVector
iterates in reverse to erase the second train to have gone, but afterwards ReplotTrains iterates forwards and therefore replots the first train to
have gone and therefore sets the TrainIDOnElement value to the exited train, with nothing to reset it.  Hovering the mouse over that element with
train information enabled causes an error because the track element thinks the train is still there, whereas it is missing from the TrainVector.

in ConvertCRLFsToCommas, if Outstr = ',', then will have range error at last while(... - caused by having a crlf at end of a tt file (shouldn't have one in 
  a proper file but could have in a corrupted file - add a 'break' from the 'while' if string empty, also at end check if ConvStr == "" and if so make it     ',' to avoid returning a null which would fail.

added mousepos to error file

changed 'ShiftKey' to 'CtrlKey'

changed loaded tt routine in SaveErrorFile to use original tt session save, in order to include the tt train information to allow a session file to be extracted (formerly didn't save the tt train information)

corrected another while... Length() function to break if becomes null in SaveTTEntryButtonClick

tested works OK for Craig's error & for crlf at end of a tt file

added train text info after save loaded timetable to error file (or use existing savetimetable routine)

altered text in SaveErrorFile to cover requirements for extracting ssn file (need to change some of text & strip out editing tt)

added note that if extract a railway from an error file where had been operating then likely to have non-red signals, load tt, select operate, then exit     operation - resets all to red

checked that all error file extraction files described correctly

checked sig controlled trains work as described re starting with zero speed at a location

*changed railwayfeedback@googlemail.com in the quick start guide to ...gmail.com

*altered help file 5.11.rtf & manual to say that if a signaller controlled train starts at a location with zero speed then will stay located

created new pdfs for manual & quick start guide

recompiled the help file

deleted readme.txt file from Help-files folder (not needed as already included in the download)

deleted release v0.4b.zip in trunk (not needed as already included in the download)


VERSION CHANGES AFTER BETA V0.4a for Beta v0.4b


*changed email to 'gmail' - mention googlemail still works

changed readme files (& on web) to give 'gmail'


VERSION CHANGES AFTER BETA V0.4 for Beta v0.4a

*added GNU license screen at first startup, then adds empty file 'GNU' as marker that seen & doesn't show again

*note the use of American spelling for license

*fault: failed to allow for non-track named locations in setting default lengths, added test in PlotAndAdd...

added more try.. catch.. blocks in Interface.cpp as above fault not caught

*added new temp tt file creation & deletion, so can have multiple applics running in same directory & shouldn't interfere
    delete on exit via menu, exit via formclose, exit via errorlog, prior to loading new tt, prior to loading new session
    create on loading new tt & on loading session

remember to add the GNU license text file to the release files & mention in web news & changes


VERSION CHANGES AFTER BETA V0.3a for Beta v0.4

*corrected a fault in train split functions, could get a linking error with original code

*altered zoomout screen navigation to 60 elements from 30 - quicker vavigation with wide railways

allowed for points in PlotStartPosition as called for ChangeDirection & could be on points

moved getExitPos from TTrain to TTrack & renamed GetAnyElementOppositeLinkPos

changed linkpos from 2 to 0 for points & input link 3 in GetAnyElementOppositeLinkPos

*added condition in removing single route that only proceed with removal if RouteID not same as StartSelectionRouteID, otherwise
could select element (& not select finish element), then element removed, then select finish element, & would fail on convert because
StartSelectionRouteID would be set but there would be no corresponding route.  Also added condition in the callon single route
element removal as a precaution, though shouldn't be needed there

*changed route search algorithms to search in direction of 'set' leading points first

*changed route search algorithms to search in closest direction first

explain in manual that if can't find a route but know there is one, set some of the points manually in the required route direction

*changed conditions in CallingOnAllowed & set unrestricted route into station unless autosigs route already set
mention above in help/manual

added SearchVector.clear() to ClearPrefDir() function

added SearchVector saves to error log for ConstructRoute & ConstructPrefDir

changed name 'SavePrefDir' to 'SavePrefDirVector'

called ConstructRoute->ClearRoute() immediately after use so as not to clutter the errorlog

corrected setting of variable lengths where tracktype is points, test could be ambiguous before

corrected SetTrainMovementValues where should only add the cumulative length in if a station stop is required, was added if
    name in timetable before cdt regardless of stop requirement, although the StationStopFlag was only set (correctly) if a stop was
    required

changed signaller stopping behaviour so stops more rapidly (uses up to 3/4 braking rather than 1/2 braking)

*made named location track lengths 100m, could be anything before (though treated as 100m in dist calculation)

added a note in section 4 of manual re PD selection

moved the route element removal section in UpdateTrain() out of the (LagElement > -1) condition, still uses (Straddle == LeadMidLag)
    so now avoids the situation where a train entering at a continuation with signal next but one to continuation reaches signal
    but fails to cancel the 'single' route element because in reality it's 2 route elements - LeadElement didn't cancel it because
    LagElement is -1.  Now it's cancelled normally.

created new LogEvents: single route element removal in ClockTimer2; LockedRoute removal; StoreOneRoute; RouteRemoved;
added data to some event logs
dropped LogEvent for MouseDown (picked up by MouseDown 2 or 3)

added an extra 6 asterisks in SavePrefDir after late element saved (so can distinguish routes easier in error logs)


VERSION CHANGES AFTER BETA V0.3 for Beta v0.3a

changed (CumulativeLength < DistanceAtHalfBraking) to ((CumulativeLength - FrontElementLength) < DistanceAtHalfBraking) in the main loop
    test in SetTrainMovementValues, was an error, should check from AFTER the current element - caused a SPAD in Richard Standing's
    loft layout railway when the single new service was introduced

*changed RestoreTTButtonClick to 'TTBLFile.getline(TimetableEntryString, 10000, '\0')' from 'TTBLFile.getline(TimetableEntryString, 10000)'
    to reload tt's correctly (as in tt edit function); also changed the file open function to '....std::ios_base binary' (also as for the
    tt edit function) - hadn't changed these when changed the main tt edit loader similarly

added a new function 'ConvertCRLFsToCommas' in 'CompileAllEntriesMemoAndSetPointers' to ensure that all entries that are intended as
    services (i.e. appear after a valid start time and before the eof or a blank line) have CRLFs converted to commas so will be dealt
    with as services (syntax check will work OK etc).  Could bypass this if entered before the tt pointers were properly set up

dropped direct line searches for prefdirs & routes as not a good strategy because gaps interfere with direct line searches - instead
    introduced TotalSearchCount and now use that to limit searches. Leave the calcs in though in case rethink strategy later on

dropped the limit of 200 on prefdir length in prefdir searches

Xadded a note in section 4 of manual re PD selection (leave till there are more changes)

changed 'path' to 'route' in prefdir messages,for consistency with manual and other uses of the term

introduced static constants for PrefDir & Route search limits

introduced #defines for ScreenElementWidth & Height

corrected screen viewpoint movement limits (hadn't accounted for HLocMin & Max being 1 greater than actual limit)

added white (light grey) track section alongside black in prefdir key & distance key graphics

increased size of event log to 1000

*corrected the 'single route element deletion' error to prevent it when RouteFlashFlag set, i.e. when route building - this caused the
errors in Richard Standing's railway on 26/06/10


VERSION CHANGES AFTER BETA V0.2e for Beta v0.3

[done] dropped CurDir parameter from RailGraphics constructor (was used to locate the Bitmap directory but not needed now using the resource file
[done] corrected the route validation error (found by Richard Standing)
[done] removed routes of single elements in ClockTimer2
[done] locked up if tried to make a loop containing autosig & non-autosig routes - OK created new function to check for looping routes
[done] when started after new session loaded, could still operate the route buttons - added 'if(Level2OperMode == Paused) DisableRouteButtons(3);'
    in RestartSessionOperMode
Xconsider erasing route elements of pref dir routes back to valid signal (except from buffers or continuations) - no need with the below
[done] When train starts on a nonAutoSig route, erase all elements behind the train for that route, OK for AutoSig as no route elements removed
    by train & also OK if starts straddling autosig & non-autosig routes, as the signal is always in autosig & the element of non-autosig
    will be removed and will be in its own route anyway.  With this can leave the pref dir checks in ConvertAndAdd... for the full route
    as routes now won't have gaps in them
[done] checked & changed entry to event where necessary
[done] checked 'action' in tt messages & changed for 'event' where necessary
[done] altered the mouse pos values in the development panel to correspond to the mainscreen positions
[done] Manual /Help - need to explain moving & stationary tt entries better, + in the examples, OK in copy of manual
[done] Manual /Help - check index pages in manual
[done] Manual /Help - check that the new statement 'Note also that an 'Snt' event that is not at a location that is named in the timetable for
    that train is treated as moving, even if the start speed is zero.' in the manual is true - OK
[done] Manual /Help - check important point 6 in tt section of manual
[done] Manual /Help - add to manual + help - if have 2 or more tracks between start & end points for unrestricted route prog may choose any, make
    sure there's a non-crossing/points/bridge on track required so can select it - clearer wording needed
[done] Manual /Help - clarify in manual that the ONLY way to loop back to an EARLIER (i.e.first train earlier - not repeats) service is to use
    shuttles
[done] Manual /Help - add note about trains starting on routes - route behind train will be erased unless autosig
[done] Manual /Help - explain have to leave one mode before can enter another
[done] Manual /Help - add multiple references to important points in tt - before develop & during development of tts

[done] manual now 38 pages - include in both readme files
[done] mention on change page:-
[done]     removing routes of single elements in ClockTimer2 on change page
[done]     corrected the route validation error (found by Richard Standing)
[done]     locked up if tried to make a loop containing autosig & non-autosig routes - OK created new function to check for looping routes
[done]     number of changes to help files and user manual
[done] send Richard a copy of .exe + new manual & help files

VERSION CHANGES AFTER BETA V0.2d for Beta v0.2e

[done] change web news round so later entries appear higher

[done] add note to readme file on web page after '...slightly different.' 'Existing users should allow files in their existing 'Railway' folder
to be replaced with new ones from the new folder.'

[done] mention Ctrl key for 2-element moves in web news

[done] errors page:-
[done] menu Save error corrected, would fail integ check(any users with railways that won't load send to me)

[done] news page:-
[done] error corrected - repeat the error + users to send in any failed railways & I'll fix & return them, added Ctrl for 2-element moves

[done] add note to readme file in zip file after '...slightly different.' 'Existing users should allow files in their existing 'Railway' folder to be replaced
with new ones from the new folder.'

[done] still to change 'form' to 'from' on p36 of manual & corresponding /help file - 'heavy braking form 50% to 90%' section 6.5

[done] still to add note in manual & help file about other trains obstructing splits - see M2.doc - that alters only 5.2.3 & retains the page
numbering

[done] corrected error in Save1Click - failed to save program version & file integrity check failed on attempt to reload - OK now

[done] clarify TimeLoc entries in timetable guide (/manual + /help) & /help page in tt editor - arr or dep but not both, need TimeTimeLoc
for that - explain

[done] added ctrl + screen movement buttons -> 2 element moves only (for zoom in & out)
[done] mention in help

X No - still to add diagonal track (inc directional diagonals) & buffers & continuations to named location set (ensure diag continuations
excluded from timetabled locs) + mention in help & news

X No - add note in help files that non-station named locs not allowed on diags as would look untidy, suggest use straights instead if need
them

[done] session file didn't store the RestoreTimetableLocation, so a train that was taken under signaller control at a location
and then had a session saved didn't have that name set and timetable control could be restored without it being at the right location -
changed to use the end of train marker to store the name as well as the marker, this won't disturb existing session files saved by
earlier versions & is OK because '*' can't be a legitimate character in a name

[done] set RestoreTimetableLocation to "" when train created

[done] made SearchLimitLowH etc in TOnePrefDir protected rather than private, and deleted the same members from TOneRoute as they are now
accessible by inheritance

VERSION CHANGES AFTER BETA V0.2c for Beta v0.2d

altered gap flashing behaviour so that won't begin to flash if a train on either gap, and stops flashing if a train enters either gap
added checks for NextElementPosition & NextEntryPos being -1 in
    (a) UpdateTrain in signal check where start after stopped at location (line 884)
    (b) Signal checks in PlotStartPosition (line 316)

VERSION CHANGES AFTER BETA V0.2b for Beta v0.2c

Added Ctrl Alt 4 for add 2 to DisplayOffsetH; Ctrl Alt 5 for subtract 2 from DisplayOffsetH
    & Ctrl Alt 6 for add 2 to DisplayOffsetV; Ctrl Alt 6 for subtract 2 from DisplayOffsetV; (all providing zoomed in)
Set all new bitmaps to pf8bit except where loaded from resource file, had error on saving Slough image & this cured it - also now the
    image files are much smaller

VERSION CHANGES AFTER BETA V0.2a for Beta v0.2b

Added TTrainController::TTrainController to set all performance values to 0 (have odd values [incl 'NAN' in Michael Dennis log] in error
    log if not operating)
Changed error message in TInterface to dilute the request for additional information as well as the error file - error file is the most
    important thing to send
Dropped 'TTrackElement &TrackElement_at(int Pos) {return TrackVector.at(Pos);}' in TrackUnit (was only used in 3 places in
    'Build ContinuationNameMap' section of TryToConnectTrack) - now just use ...Trackvector.at...
Built in check for TrackElement being a footbridge in CheckFootbridgeLinks, returns false if not
New checks added in GetTrackVectorIteratorFromNamePosition
Added "CreateEditTTFileName = ""; in ExitTTModeButtonClick to allow a check during error file saving - if not null save the tt being
    edited to the file
Because of error discovered by Colin Lilley:-
    Added a lot more preliminary checks in SecondPassActions for tt validity checking,
    Changed 'throws' to messages in SecondPassActions that occurred prior to the bulk of the successor checks
    Prevent ability to select floating concourses & named non-station locs in drop down box + tt validity checker
    Added timetable being edited to error log file
    AnyHeadCodeValid set to true for the syntax check
    Put messages in CheckHeadCodeValidity & remove from outside - added 'GiveMessages' condition & ensure messages appropriate
Corresponding changes made to the manual and help files

VERSION CHANGES AFTER BETA V0.2 for Beta v0.2a

Was using Format96HHMMSS for session file names in save session and in save operating image name and failed because used ':' in the name.
    Changed these to use '.' instead of ':'

VERSION CHANGES AFTER BETA V0.1d for Beta v0.2

Added startspeed & entrytime for stepforwardonelement prior to setting movement values (had noticed train jumped on this command)
Added checks in LoadTimetableFromSessionFile that TrainDataVector & all TrainOperatingDataVector sizes correspond to the sizes
    saved in the session file.  This to cater for the problem noted in section 6.3 of the help file where if have >1 railway.exe
    program running session files can be saved wrongly.
Modded TrackPush to disallow same speedtags as already there - to stop multiple NamedNonStationLocs (Michael Dennis error)
Modded PlotAndAdd... to disallow multiple NamedNonStatLocs & to add map checks for plats & NamedNonStatLocs
Added test for FoundFlag in PickUpBackgroundBitmap for NamedNonStatLocs; and in CheckLocationNameMultiMap + new throw for no inactive
    element;
Added new check routine Utilities->CheckFileStringZeroDelimiter to replace CheckFileString for checking legitimate strings up to \0
    or end of file (now corresponds correctly to SaveFileString & LoadFileString), it now fails on \n and other special characters
    (used to ensure prog. version no. delimited by \0 in railways after Michael Dennis error).  Left CheckAndCompareFileString and
    CheckAndReadFileString because these checked in more detail so errors unlikely to be missed., also CheckAndReadFileString used
    for reading timetable which does have \n characters embedded.  Also left CheckFileDouble as this uses CheckAndReadFileString and
    checked in detail so errors unlikely to be missed.
Changed CheckTimeValidity to allow times up to 95h 59m
Changed all FormatString("hh:nn:ss") & FormatString("hh:nn") to new Format96HHMMSS & Format96HHMM respectively to display times up
    to 96 hours then reset
Changed timetable clock lable to run to 95:59:59 then reset to 00:00:00
Added check for repeat times exceeding 95h 59m in SecondPassActions

VERSION CHANGES AFTER BETA V0.1c for Beta v0.1d

Removed semicolon at end of 'if(....' in line 4525 of Interfaceunit.cpp
Made all mode panels 490 wide (TTpanel & PrefDir panel were 600)
Changed all TimeString()s to FormatString("hh:nn:ss") or FormatString("hh:nn") as appropriate (else defaults to regional settings &
    may not be UK)
Changed all DateTimeString()s to FormatString("dd-mm-yyyy hh:nn:ss") (else defaults to regional settings & may not be UK)
Also:  help file & manual updated to include a note about running >1 railway.exe progs in section 6.3

***remember to change ProgramVersion***  when make any code changes (OK for 0.1d)
***advise to delete existing version, just railway.exe, unless anything else changes too***

VERSION CHANGES AFTER BETA V0.1b for Beta v0.1c

Dropped swatchpanel display by key input
Changed HLocMin etc calculation to ensure capture start of text
Dropped TrackElementAt for TrackVector.at in DecrementValuesInGapsAndTrackAndNameMaps to speed up, but made little difference

VERSION CHANGES AFTER BETA V0.1a for Beta v0.1b

Hints for diagonal track with direction arrows corrected

VERSION CHANGES AFTER BETA V0.1 for Beta v0.1a

Caller duplicates corrected (original check file saved with v0.1 backups)

VERSION CHANGES AFTER BETA V0.0 for Beta v0.1

Added LogAction for stops by signaller when train stopped
Added lower case letters for letter in any headcode, & allowed xxNN where x=any alphanumeric if have ';0000' after tt start time
Prevented trains stopping on continuations in sig mode (won't stop otherwise anyway) [effects too difficult to control]
Prevented trains changing direction if any part on or next element a continuation, or next, lead or mid elements -1 in sig mode [effects
        too difficult to control]
Disallowed front of train starting on a continuation
Disallowed train creation or entry on a locked route
Corrected error where TimetableTitle overwritten with null during LoadSession
Altered zoomout movements to 1/8th screen from 1/4 screen
Added warning logs for failure to split for train and for platform too short
Dropped the 'throw' for colour allocation error, changed to StopTTClock message
Added 'left railway' log for train started under signaller control
Dropped permanent error for LocTooShort, now warning given & signaller able to reposition
Added perf log error message for route force cancellation (for route > 2 elements long)
Stop TT clock for force cancel route
Only allow Restore tt control if circumstances permit (back at orig location if StoppedAtLocation or stopped anywhere if not)
Dropped continuation names from drop-down box and simplified checks by introducing a permanent ContinuationNameMap
Now reject warnings for Frh or Fjo entries
Made signaller stopping steadier by not permitting brake rate to drop below signaller brakerate, whether or not SignallerStopRequired true
Corrected TimeTimeLoc floating 'next' & 'timetable' displays for suspended timetables in signaller mode
Added dark backgrounds
Added ability to step forward by one element under signaller control
Added program version number to railway & session files (old railways won't load as have new first line but old sessions OK as
    included in '***Interface*** line.  No change to timetable files as difficult to do, and always relate to a railway & that
    will have version number

PRE-v1.0 RELEASE

Remove all comment messages that say 'to be updated' or similar, just cover with a blanket warning for .cpp files

Perform a caller check and a CR check

Add caller checker to open source suite with ability to set path

Add 1 liner descriptions in header files for main functions and variables

Check all variable names before finish to ensure all used, & erase any that are redundant

Check if any functions examine all trackvector when could examine the map (& check if any do so during operation)

Consider setting default values for parameters.

Ensure all internal flags are set appropriately on program start - e.g. AllRoutes->RouteTruncateFlag wasn't & after
using program for a long time for some reason the start value became true & prevented continuation exit signals being set to
green

Make all comments accurate & comprehensive
Tidy all code, check & define all variables & functions, & improve layout

Consider what to do about map/route checks & other such development checks before issue (maybe leave in for early release or
have self-checking and normal release versions - if poss record the call stack)


5) Release & website reminders:

CHANGE OF VERSION: (updated November 2020 for the revised site)

Prior to uploading:

1 Increment version number & copyright year  (if required) in Project>Options & AboutUnit.cpp.  Do a final build & check.
2 Update manual & on-screen help if required
3 Create a new directory 'Release vx.x.x' from earlier release & replace files as follows:
	readme.txt (reference latest release & update user manual reference & no. of pages if required)
	Manual vx.x.x .pdf (if updated)
	Quick start.pdf (if updated)
	Railways>railway.exe
	Railway>Help.chm (if updated)
	In Railway, check have 5 x dlls and 3 x bpls & GNU licence, & that all directories contain the expected files & no extras created if had run from the release folder, especially NO config.txt
4 Zip the above as Release vx.x.x.zip

On website:

5 Upload new release version zip to 'Media'
6 Go to 'Base Program'  & edit product 'Railway Operation Simulator' (normally on last page of 'All Products')
	Update text of page iaw readme.txt (short & full)
	Category should already be 'Base Program & Documentation'
	Tag should already be 'Railway Operation Simulator'
	Image should already be in 'Product image'
	Product data should already be 'Simple product'
	TAuto Poster should be 'No', this a plugin that automatically posts to Twitter if set to 'Yes'
7 Under 'General' tab
	Click 'Add File' & "Choose file" to enter url of the new zip, give it the version number as its name
	Move it to the top of the list (need full window to move)
	Make latest release the current version & last one deprecated
	'Virtual' & 'Downloadable' boxes should already be ticked
	Price should be 0.00
	Download limit should be 'Unlimited'
	Download expiry should be 'Never'
	Tax status should be 'None'
	Tax class  should be 'Zero rate'
8 Under 'Inventory' tab
	SKU should be 'RailwayOS-Releases'
	Stock status should be 'In stock'
	Neither box should be ticked
9 Under 'Linked Products' tab Upsells should be empty & Cross sells should be ROS Manuals & TT tutorials
10 Should be nothing under 'Attributes' tab
11 Under 'Advanced' tab
	Purchase note should say 'Please read the included instructions included in the .zip file before contacting us for support. The manuals and tutorials are also available for free download.'
	Menu order should be 0
	Enable reviews should be ticked
12 Preview then update if all ok (best to select update first as otherwise preview shows last version)
13 If Manual or Quick start or any other file changed upload the new versions to 'Media' as above and add by editing product 'Railway Operation Simulator manuals' as above, SKU is RailwayOS-Manuals. Alter text (short & full) to refer to new version. Update & preview.
14 Go to 'Version Information' page (uses DiviBuilder), click 'settings' on 'Versions (Accordion)', copy last version then click 'settings' on it, add version number & date as title, then change all text to the new text.  Save the new addition, save changes then update the page & check ok.
15 Download & check the new release & anything else that's changed
16 Add a new post for the release with details of main changes - Categories: Railway Operation Simulator, news; Tags Railway Operation Simulator, year, v2x.x.x.  Add 'Download it here' with link to 'Railway Operation Simulator'. TAutoPost set to yes. Preview & schedule release or release immediately.

On GitHub:

17 Ensure references to new version are included in source files (instead of 'after last version').
18 Update Doxygen files (& Doxyfile itself with new version number) & include graph legend link in pages.html (do a 'diff' from previous version & copy across), make sure flowcharts are in files folder & work ok.  Add all new doxy files to local repo.
19 Copy DevHistoryPending.txt to DevHistory.txt & ensure all extra text removed & version info changes made
20 Update DevHistory.txt with relevant public information if not already done so & make read-only
21 Build & store to local Git repository tagged with latest release version
22 Pull latest commit from GitHub into GitHub clone 
23 Update all files on GitHub clone, ensuring that the .md files are ok and that all doxygen docs included - check unversioned files for possible inclusion
24 Commit the latest update locally & tag with release version & message 'Update for vx.x.x'
25 Push to GitHub with 'include tags' ticked
26 Create a new release on GitHub & include the new zip file

ADDING A NEW PROJECT TO THE USER WEBSITE: (updated November 2020 for the revised site)

1 Check works ok & no copyrighted information
2 Create a .jpg image of the railway & upload it to 'Media'
3 Upload original or modified (if required) zip file to 'Media'
[From here on it's easier to duplicate an earlier project then modify areas that need to be changed, but remember to reset the download count!]
4 Select 'Add new product'
	Add title from email form - just the railway name (author is in the tag)
	Add text from email description (required to be provided by form)
	Add short description from email (required to be provided by form)
	Add image in sidebar
	Tick Category Community Projects + appropriate location/fantasy or add a new category if required
	Add Tags Community Project, Community Projects, Author (use name from form), geographic information - same as category or additional - include anything people might search on
	TAuto Post -> 'No' (only set to yes for the news post)
	Page layout -> No Sidebar'
	Hide Nav Before Scroll -> 'Default'

5 Under 'Product data'
	Simple product, tick Virtual & Downloadable

6 Under 'Product data/General' tab
	Price 0.00
	Sale price blank
	Set the url for the new project in 'Downloadable files' & for name just give version, usually v1.0 but check email form
	Download limit 'Unlimited'
	Download expiry 'Never'
	Tax status 'None'
	Tax class  'Zero rate'
7 Under 'Inventory' tab
	SKU should be 'cp-xxx' where xxx = railway name (use lower case & dashes in place of blanks)
	Manage stock? box not ticked
	Stock status 'In stock'
	Tick Sold individually box
8 Under 'Linked Products' Upsells & Cross sells should be empty
9 Should be nothing under 'Attributes' tab
10 Under 'Advanced' tab
	Purchase note should be empty
	Menu order should be 0
	Enable reviews should be ticked
11 Save draft, preview, then publish if ok

12 Create new post, add title 'Railway name' by 'Author'
13 Add description text (not the image) and add 'Download it here' with 'here' linked to the product location
14 Add the image as the 'Featured Image' - don't include in the main description
15 Set TAuto Poster to 'Yes'
16 Categories: News & Railway Projects, Tags: year, author & Railway Projects
17 Make sure 'Allow comments' is ticked
18 Set sheduled date if not immediate
19 Save draft, preview, check & if ok check TAuto Post still 'yes' (oddly it sometimes reverts to 'no') then either publish or schedule
20 Final check that all links work (in preview if scheduled for future), including from home screen where this project should be the latest (unless scheduled), & that it downloads ok
21 Make user a contributor if not already
22 On Discord make author a creator if not already


6) Historic development notes

02/07/10: Transferred all files to 'railway.exe Work Files' to mirror the (experimental) Subversion working file folder
with local repository (on D: drive).  When familiar with Subversion just work in its working folder then transfer repository
to the open source website

LATER IMPROVEMENTS:

Variable speed clock

Allow option to use & display imperial units instead of metric units

Account for all screen resolutions by making screen geometry values variables, + buttons that are not on panels

Try to arrange replays, just using recorded route setting & callons etc, so can move about the screen & zoom etc independently -
need to record route type buttons, mousedowns for routes & points, call on button & signal, route cancelling, check others

Save event log in a form that will allow replays

Useful later additions:  Would be good if could record a session & replay it, preferably with ability
to bring up floating window during replay
Sound effects would be excellent - dial in a track ID & hear trains, station announcements etc at that loc
Would be good if could find a way to print out & display a formatted timetable from the
csv file, maybe by a separate program
Fully/semi-automatic signals, with option to set to red for fully-automatic - maybe do as
SigCent does & allow automatic routes with a different colour - prob easier, but ensure start & end at signals, but note
that SigCent doesn't allow auto routes where the route doesn't contain auto signals - but don't know how you can
tell the difference!  Maybe have an 'A' with a signal that can be made auto, but use auto route to set as auto?; allow
shunt routes, where start at a train & end somewhere else, & train moves there in spite of movement not being listed
in a timetable - change train headboard to lower case letter; position light & ground signals; level crossings;
approaching trains for continuations; manual point changing - if use this need to work in pairs where cross running lines;
failures; yard/single line acceptance queries (see PCRail Yard Exit Control); signal/point number display (maybe
not all the time - could use hover; lists of pre-defined routes; have 'Train on line - call on?' query where signal
protects a train in a platform or siding, here a position light gives the 'call-on', also need approach
control (see PCRail) - maybe have separate signal/position light graphic & automatically ask query when this selected
as end of a route, note also that before the call-on is given the exit signal to such a route must be red (or buffers),
ground signals are similar but there is no need for a query, since the train can only proceed as far as the line is
clear; TRS indicators at platform ends; have sidings where a train can disappear - i.e. gone somewhere in the sidings,
but make it clear that this will happen so user doesn't just use the location for temporary storage - this happens on
SigCent - maybe require a right click on train & offer disappear as an option; log all events with markers for errors &
delays etc;  allow simulation speed changes; give warning & option to cancel if truncating a route ahead of a train;
subpanels for track building - plain track, bridges, signals, points etc; ability to move/delete/copy/cut etc segments
of the display using rectangles; ability to split & join trains, manually or automatically as per timetable; user-settable
speed limits & lengths for each element; display of train speed; diff train colours for moving, held at signal, ready
to start, failed etc; allow to save colour scheme separately to railway, so any railway loads in scheme of user's
preference; road barriers; optimised for different screen resolutions & auto-detect; timetable generation & editing from
within program; timetable printing facility to facilitate operation

Arrange a points system with separate + & - scores, e.g. 10+ for on time, 11 for 2min early, 9+ & 1- for 1 min late etc, then
overall score is % of + over total.  Have separate scores for Punctuality, Effectiveness (arriving/missing locs regardless
of timing) & Safety (SPADs, crashes, derails & SPAD risks)

Allow users to have own bitmaps, say in directory UserBitmaps, preferably any size & resolution, but
load into 256 safe colour palette, with blhc pixel as transparent colour.  When save, retain filename
& location, but if when reload the files are absent, don't fail, just ignore.  Use findfirst & findnext
functions, & allow users to use own names for the files - abcd.bmp, where program uses abcd as internal
bitmap name.

Variable train lengths; ARS; Internet coupling of different sections (for linked power boxes); colour selector;
ability to introduce a train manually, diff speeds of simulation faster & slower, random train, points & signal failures, restricted routes
& specific train types (25kV, 3rd rail DC, restricted loading gauge (e.g. underground services) etc;


'36 opened after all basic functions except timetable done but not polished.  Location names included.
Added in all outstanding jobs from '35

INFORMATION:

External Colours:
Track B0G0R0; Parapets B0G3R0; Red Sig B0G0R5; Yell Sig B0G5R5; Green Sig B0G5R0; Plat/Conc B0G0R4;
Green Ellipse B0G3R0; Red Ellipse B0G0R5; Green Rect B0G3R0; Transparent/Blanks B5G5R5; Signal Surround B4G4R4;
TempBackground B5G5R0 (unused in programme); Code letters/numbers B0G0R0; Train front code number B0G0R5;


Internal Colours:
PrefDirs                                        Magenta

Non-auto, non-signal routes                     Red
Non-auto, signal routes                         Green
Autosig routes                                  Blue
Normal train background                         Caramel
Derail bgnd                                     Magenta
Crashed bgnd                                    Red
Stopped in station bgnd                         Pale green
Ready to depart bgnd                            Pink
Stopped at sigs bgnd                            Bright green
Callon available background                     Bluey purple
SPAD                                            Yellow
Stopped at buffers (no attention needed)        Grey
Stopped at buffers (attention needed)           Cyan

Route start marker                              Same as route colour
Point flash marker                              Green

Note:  Braking using constant deceleration (averaged from S Hall's signalling book for stopping distances) - k = s/v^2,
use k = 1.05 for max speed of 45m/s (~100mph) & 0.66 for >45m/s.  Corresponds to 0.476m/s/s for <=45m/s & 0.758 for >45m/s/s
Accelerating - use constant energy input, for reaching 50m/s in 200s have v = 3.68t^0.5; s = 2.4t^1.5; & a = 1.8t^-0.5,
where s = distance, t = time, v = velocity, a = acceleration.
Const energy equation derived as follows - dE = md(v^2)/2, & dE/dt = const, say c, so c = m/2 d(v^2)/dt = m/2 * 2v dv/dt,
so c/m = vdv/dt, so integrate from 0 to t have ct/m = v^2/2 for zero speed start, so v = (2ct/m)^0.5 = kt^0.5 for k = (2c/m)^0.5.
So ds/dt = kt^0.5, so ds = kt^0.5dt, & integrating from 0 to t have s = k2/3t^1.5 & similarly a = k/2t^-0.5
Note: AJM's HST book gives 1765m actual stopping distance from 125mph, & emgy brake at 127.6mph in 58secs and 1853m, permitted figure
was 2060m
Use train weight & power as separate properties & calc using 80% of power at rail, allow power input in kW or HP
Use braking force in tonnes force & calc using that

Note: from Google earth a train carriage = 20m, & a pair of crossover points = 40m, i.e. 20m per point.  Hence at max
scale single track length = 20m.

NOTES TO USER: (now all in help file & manual)

Mention zoomout movements 1/8 screen, not 1/4

Advise users that viewpoint buttons can be pressed multiple times so can go off edge of screen

Must have at least 256 colours (i.e 8 bits) or colours won't display properly

Trains won't stop on a continuation even though given command to stop as when reach edge of railway it has to leave (phrase better)
Trains can't change direction if any part or next element a continuation

Advise users of weight, speed, braking & power limits

Explain headcodes & ;0000 after start time for less restricted h/cs (NxNN restricted, aaNN unrestricted - N=number, x=upcase/lcase letter,
a=any alphanumeric

Explain possible use of lower case letter in restricted h/c - special use h/cs, AND - DIFFERENT to same h/c with upper case letter

Explain route setting with >1 route from start to finish, prog could choose any, need extra sig for sig routes & smaller steps for
non-sig routes

Callons are 'opportunities' for signaller, not driver

Don't confuse 'g' with '9' in h/c

Don't print out the tt

explain basis of named loc linkage - no diagonals but adj elements, even tho' doesn't seem so for platforms

explain default filenames for sessions & perf logs, can rename but keep extension

don't need to load a tt to edit it, but need to have rly loaded to validate it, loading & editing different, just because have
edited it still have to load it to use it

explain reason for show & hide for tt (+ in tt help box)

for trams use the description to indicate the route - for use in floating window instead of tt for full sig control

explain title bar @ top - rly + tt if loaded

trains don't have to run on routes, but unprotected if not - explain that if on a route then protected from other trains that are
on routes and from derailments

explain how tt validated, what permitted & what not - check is for viability with the loaded railway, not for logical operation, so
logical station order isn't checked

mention gap flashing - any mode, + in zoomout, any button in a blank area to cancel.  routes still show but not in area of flash,
until screen refreshed (viewpoint moved, zoomout & back & at other times during operation)

When erasing mixed routes (autosig & non-autosig), if erase an autosig route with non-auto behind or in front, it will take the signal
with it, so to erase the non-auto need to right click the start element, which isn't a signal but will still erase OK

For gap setting point out that colours show in zoomout mode for easy identification of gap connections in different zoomin screens, &
mention ability to find gaps by flashing in zoomin or out

If remove trains on a route then signals behind the removed train won't be reset - will stay at red.  Need to cancel & build a new route

Have all track etc built & located properly before name locations, as if cut locs they lose their names (prog doesn't know
whether only part being cut so plays safe)

Try to avoid putting signals immed before a bridge, as can't then truncate to that signal (can't truncate on a bridge as route
likely to be ambiguous)

Explain about missed logs, and why can't have same station in tt for same service with other stations between

If need to cancel an auto route with train ahead, take under sig control, change direction & move - will cancel all route behind it
but an unorthodox manoeuvre!

Explain that same service can't appear at same location twice without a cdt between - so L'pl loop has to change service at Central
(prob does anyway)

Although named location names change if re-entered with font changed, ordinary text doesn't.  Loc names usually need to be changed
together so all fonts identical, but not ordinary text with its individual fonts.

Try not to have text items same as location names - program will accept them but when a location name is erased (by erasing elements
or cutting etc) then one of the text names will be erased also, and it may not be the one you wanted to go!

Mention can have signals embedded in a platforms, but take care over splits

Mention Arial 7pt is clear & fits between tracks, apart from bottom of descenders;

If train being called on and train at station taken under signaller control and moved towards the oncoming train a crash is likely

If train fails to split because of another train, that train must move away sufficiently to allow the split as originally planned,
it won't split in a different position just because there's a train present

If start a train on a route (in right facing direction) then the signals behind will be set accordingly - may cause crash or SPAD if
approaching train too close, if start in wrong facing direction then route will be cancelled immediately

To set distance for a single element use edit - select - set dist

If under sig control need skill to stop at required positions - no automatic location stopping as under tt control.  Train(tram)
brakes at up to half its max (can be much less if a long element in front), and it takes effect when it reaches the end of the next
full element.  Always stops at a full element, so be aware of element lengths, and the speed (the higher the speed the more difficult
the judgement) and train(tram) position when the 'stop' command is given.  For regular stopping under sig control - as for tram
operation - best to experiment then mark the brake application positions using text.

When running off a route then not protected.  Can change signal directly in front of approaching train and route won't be locked
as the system doesn't know the train is there!

When a train has stopped because of a train in front, it won't move (unless instructed to by signaller) until forward train has passed
the next forward signal, or points direct it away from the forward train.

Trains won't crash in sig control providing facing in same direction, but if moving towards each other they may or may not crash

Explain about 'S' after Snt for sig control entry, if start a 'S' train at a location (other than continuation) with zero startspeed
then it's located, anything else (not at location regardless of startspeed, or >0 startspeed at a location) and it's not located

In saving sessions will save as prestart if saved during prestart (i.e. can set routes & change points etc before trains appear)
or as paused during operation

explain that disallow starting on diverging leg of points (simplifies the check for points set incorrectly)

explain warnings used if fail to create train or fails to enter

explain need to zoomout to find where train is a tsignal or any other flashing warning

explain that clock stops if hover over a warning & why - try not to leave mouse there or will stop everything

remember to set separate warnings where have different entries for similar services, e.g. feeder service then shuttle
if a singkle service has repeats, the warning is given for all repeats

if Warning set for TimeTimeLoc, warning given on arrival
no warnings given for Fjo or Frh
Warnings can only be cleared while operating

Route setting, 2.5sec for point changing, 0.5sec for not, but extra time taken if adding to tail of a route of the same type particularly
if the route is long - due to prog having to process the whole route (+ see below)

Hint:  when route building, if build in forward direction it's quicker (after the flash period) than in reverse direction, especially for
long routes - apparent most when building autosig routes prior to first operation

Moseley Tunnel included just as a passing location, not a stop point

Prestart mode allows quick points & route setting - no delays

If train runs wrong way on a route the route is cancelled immediately to protect approaching trains using the route

Take care with automatic signal routes, ensure trains can (& will - no Frh's in TT) always exit the automatic sections, else won't be
able to cancel the route if it's occupied by a train

Point out red hc segement = front tt mode, blue front sig mode

XMention the 10 secs delay for new trains, so can set routes before running

Tell user in error message that all files are plain text so can see not taking any info about computer

Explain why didn't have hierarchy of trackelements, should have done but worked so left as was, too deeply embedded in
rest of prog

Suggest renaming session, image & performance filenames if wish to keep.  + suggest deleting periodically to save space (esp image files)
Suggest converting image files to .jpg using an image editing program to reduce the size - bmp files very large - sample rly over 14Mb

Make sure room to split at stations, and that if front split the new train is created behind a signal - otherwise it won't see
the signal and will depart as soon as the departure time is reached, probably the protection of a route - rear splits are better from
this point of view NO NO, split not predictable, existing train likely to be repositioned, so allow signals for worst case split (see
later, if can explain logic then won't need to allow for worst case) If train split causes a resetting of signals behind the new train
(because straddles a rear signal) then may cause a SPAD for a following train.  Another reason to try to position signals so splits don't
straddle them.  Work out split positioning logic and explain so user can predict where the split will be & position signals accordingly

Explain how to construct pref dirs & routes when several ways from source to destination - pick next element (using unrestricted
if routes) until unambiguous, bearing in mind that when 2 or more in the direction is set, then OK.

Explain structure of filenames - perf logs, sessions, image files, railways, timetables, formatted tts

Explain how to plot a grid with no track - in 'Build/modify' mode draw the screen grid, then put a single track element in each corner
of rectangle of the size required (may have to include extra ones temporarily to extend beyond a single screen - these can be removed
later), exit Build/modify mode, then save the image with grid - and it's done.  Can print out to assist in developing a railway layout.
If you prefer nothing to show, do as above to mark the corners clearly, then put a text full stop in each corner then delete the track
elements and save as before.  If track elements aren't used then the full stops can easily be lost if the size extends beyond a single
screen.

Can change names of session files to more memorable ones, but keep the extension .ssn

Warn that callon only works up to 4km ahead of stop location, if no signal in this distance then will need to take sig control
to bring into station for a join

Advise user that if changed, have to save TT before can validate it, also have to have correct railway loaded
to validate it

Will need to cut & past the formatted tt in all but the simplest of cases, just provides a better format than the program-readable
version.  NB can't use this for the program even though still a .csv file

Explain how to use ctrl-c/x/v in tt, say for part of train needing diff times, cur it & insert at new pos, change times, copy then delete,
& past back into old position with new times

If click on 1st character in text in AddText mode, will lift the existing text back into the edit box for alteration

In tt editing, if want a separator line, just enter random text with no semicolons, will display as ####, but need to delete it later to
validate.  In .csv file can have * prefixes for intermediate text, but these don't show in tt editor

Don't use HH:MM anywhere other than in legitimate TT time locations (e.g. in loc names or descriptions), will be corrupted if use
add or sub minutes

Explain TT files, free text (ignored in TT) before start time - 1st 5 chars HH:MM then anything (usu commas if prepared using spreadsheet),
then trains, comments can be added between trains providing 1st char is '*' - these lines will be ignored.  TT ends at last train
or at a blank line, then free text after the blank line - will be ignored.  TT editor in prog ignores any free text lines but doesn't
alter them when TT resaved

Can use Ctrl-C & Ctrl-V to copy & paste sections of text in the OneTrainMemo

#### as HC in list of trains panel signifies not set yet (would be blank otherwise)

The csv files used for timetables don't support quoted strings, so don't use any commas within text (within a train entry - OK elsewhere
on an ignored line) or will fail as these are delimiters.  The same applies for semicolons, don't use these in train entry text either

Explain optional prefix to timetable headcodes, to ensure unique for comparison purposes regardless of actual headcode - so can use
same train headcode as much as wished.  If all HCs different then no need to use - OK for multiple services with route type HCs which
don't change train to train

NO - can't do this - Explain only TT situations where can reference self is for shuttle finishes to shuttle starts
Explain that a train can never reference itself in the TT, but if wish to, just set up a new service using Fns & Sns with same HC
but prefixed with something, then reference back to original shuttle when Sns finishes

Have just set distances for through lines on sample railway, left sidings etc as default.

Explain 80 element limit in prefdir & distance setting, can still add one at a time, but better to split the prefdir or distance into
smaller segments

Explain how to use distance setting to determine distance between 2 points

Explain adding, editing & removing text.  If change font while editing or adding text, the edit box won't change, but the added or
edited text will change to the selected font.  Beware, adding a location name will display the same text on the screen, but changing
or removing the screen text for a named location won't change the internal location name - use Information - Track to see what the
internal location name is.  Trains will still comply with TT entries regarding the location name, regardless of what text is on screen.
hence best not to alter text that corresponds to a loc name, other than to reposition it or change its font.  If the screen text is lost
or altered inadvertently for a loc name, press the LocationName button and select the location.  Its name will appear in the box and can
be re-entered, when it will reappear on the screen.  To change a locname font do as above and change the font while the box is showing,
then just press enter and the new font will appear on screen - reposition as necessary.
NB Easy way to change font is to left click the first character of an existing piece of text with the required font, remembering to press
enter to replace it as it was.  This changes the font.

In setting pref dirs if start on points & next selection is away from the leading edge, then the program uses the straight (or left hand
if both curved) trailing edge as the pref dir.  If the other is wanted then start on the element before the points.

Please don't give me a hard time over the example railway!  Every time I examine it I realise I've missed or badly positioned some points
or have missed some preferred directions.  Also the layout isn't exactly correct as I've had to use some artistic licence in translating
from Quail's excellent track diagrams.  Please feel free to improve it!  Also the timetable isn't intended to be realistic, it's just to
illustrate the kind of operation that is possible.  In some locations bidirectional tracks aren't set into & out of sidings - unrestricted
route setting (or signaller mode) is required in these situations to manoeuvre trains (equivalent to using ground frames).  Also some
tracks don't have any direction set - these are for non-planned movements.  + scale very variable - needed better planning!  Also should
have restricted more speeds on siding entries & tight junctions, but hopefully there's enough to show what's possible.  If you don't
like it then I wouldn't blame you, but I have given you all the tools to put it right!

Can have less detailed regions with long element lengths, e.g. extending to London, Crewe etc.  so can see what trains are approaching.
best not to have stations & stops on these extensions as running to the timetable will be difficult.  Just keep train speed constant
& know length, so can arrange to enter the controlled area at the required times

When adding pref dirs whenever AddprefDir key enabled it has focus set, so can just press 'Enter' key to add the selection - easier

Can use just to model layouts & set up 'Harry Beck' type diagrams

Explain can have zero as repeat digits & why

Ensure platform long enough if join required - explain stop link position for stations & nonstations, & need for both trains to be joined
to be at platform

Allow room for splits without causing signals to be passed if poss - else the signal won't hold the trains that has passed it - i.e have
one spare track element beyond end of platform before signal, as the split train has to have at least half on the platform

If a train not on a route then no route locking when route cancelled

If hover over continuation & see train (i.e. not 'expected' - a train has enterend but isn't showing yet

Text can overlap other text, so may need to move

Explain that can't allow continuation names to appear in TT, only for identification reporting of entry & exit, not stopping locations
For above reason avoid linking continuation names with track where required to stop, at TT check will disallow

Home & new home positions can be set independently for zoomed in & out displays

Zoomed in display home position saved with railway, but if change the home position for zoon in screen then 'save railway' won't be
available as for other changes, but if wish to save with this new 'home' position use 'save as' & original name.  The zoom out display
isn't saved with the railway, it is reset on loading to display centrally the home zoomed in position, same as it is when the zoom
button is pressed.  It can of course be changed later.

Can't change one of linked points if train on other

If select region and then 'cut', and choose another option before selecting paste, the selection will automatically
paste where it is, but if it encloses gaps then these will be unset.

Explain how text positioning works, so ensure don't have a block of concourses or named locations at the text position
or it will be obscured (placed 4 pixels higher than highest named element if on screen or 4 pixels lower than lowest,
if both off screen then placed in centre of screen, at horiz pos of leftmost named element).  If lose a location name
by erasing one of the named elements then the text name disappears too.  If erase the text name then can re-enter the
existing name to re apply it.  If location name re-entered then the text name will be positioned same as before but in a new
font if set.  If text set up to extend over 2 lines then won't find that when erase an element or change the name, it
will be entered again so may need to erase it.  If the font isn't right then set up a new font then re-enter the
existing name and the name will display in the new font.  Experiment a bit and you'll soon see how it works.
Avoid having same text as named locs more than once.  If do this then when change location name the other text is likely
to be changed instead of that displayed near the location.
Note that can have different text names to loc names if wish, by erasing the automatically entered text, but the loc
names have to be used in the TT & will display in the floating window so best to keep same else confusing.  Additional
text that doesn't correspond to any location can be added without affecting anything else.

Best to name continuations & buffers, but note that can't name diagonal ones

Can move performance panel out of the way & partially off screen if wish

Suggest deleting unwanted performance logs & sessions periodically, to save space

Explain that when stopped for train in front, remains stopped until clear to next signal, but in sig mode can
move forwards & will always stop for train in front in sig mode (since looking out for obstructions) but not in
timetable mode

Explain that enters pause mode if operating when de-activate - i.e. power down or select another application

In prestart can set & cancel routes, change points, & see train information for trains that are present at TT start
time.  Thereafter when pause, can't change railway state but can still see train info.  Can save session anytime when
operating

A named continuation must have adjacent element named so entering train required to stop doesn't stop on continuation
with half train still outside railway

Railway image always sent to Railway_Image.bmp, will only save track area, so if text extends further right or down
than the track then will be cut off at the end of the track.  Image contains the grid if selected.  Note that all
locations are sent with solid graphics whether named or not.  Note also that the files are large for large railways -
the Birmingham example is > 14Mb

Home button in zoom out mode initially sets view to same as provided when zoom button pressed in normal screen 'home'
position.  Thereafter sets to whatever was selected by the 'newhome' button.  When other than at normal 'home' position
the zoom out view always shows the normal screen, 'home' resets it to its own home position.

Screen view buttons move view half a screen in zoomed-in mode & quarter of a zoomed out screen (i.e. a full zoomed in
screen) in zoomed out mode

Note that can move to blank screens if the local screen still within the overall layout, 'home' will bring back to the
selected home position

Best to have location names same as text, so display correctly in floating windows & logs

For PrefDir building explain that 'PrefDir added' message given if last selection was a buffer or continuation and the PrefDir
is valid, otherwise can add manually or can continue building

Allow 'Edit' menu in all stages of Build/Modify, but return to AddTrack afterwards - advise user that returns here as
ususally need some adjustment afterwards

if need to set a single element's length or speedlimit, use 'select' and just select the one.

Named locations lose names when flipped, mirrored etc because would be difficult to deal with a selection that splits
a location.  Also, because of text being relocated vertically during flip, if subsequently use reselect may have text
duplicated.  Also, because TLHC being selected this may not be visible within the dotted rectangle but still be included,
so may copy or cut text when not expecting to so may need to delete or reposition afterwards - program does its best
but may not get it right every time!

Explain can only set lengths for joined up elements if track validated but can set individually whether validated or not

Set Home to desired display using NewHome if necessary then save the railway, & it will reload with that home display

Ensure the font type supports the size chosen or Windows will default to nearest

When cutting & copying can push selections off end of screen to move to other parts of railway

When select, flip & mirror areas with text the text may have to be adjusted afterwards, & may not go with selection, since
text datum is TLHC & that might be outside the selected region

In selection, moves overwrite existing elements, and explain that TLHC of text defines position wrt selecting etc, that
when cut the text moves with the selection but when copy only the track is copied, not the text, but everything, inc text
is erased from the region that is copied to due to being overwritten

Explain how ContinuationAutoSig delays work wrt distances & train speeds

Advise user not to name a location until finished building it, as if any part erased the whole name is erased & have to re-enter it (this
to save time as checking adjacent locations is a lengthy process if the station is large), and if any part added to a large named
location then can take a long time to add because of all the checking that is required

Explain performance panel movement limits

Explain train colours, inc black if sig stopped unless for some other reason, explain hierarchy of stopped colours, &
that can easily see if a train needs attention as will be flashing in overview mode, also if attention needed colour is
bolder &/or brighter

Say uses web safe colours so need to set screen to 256 colours or greater

Under sig control the moral is - get the train back to where it should be under sig control, and then restore TTControl.  If restore
beforehand, then out of sync & will cancel all earlier actions if reach an action location.

Prob don't need this now have Clearand...   If crash, sometimes a train digit is missing, because trains overlap an element, can still
remove by selecting the other element that the train fully occupies (i.e. first removed train removes other train presence on overlapped
element).  Also, if have a train in signaller mode adjacent to a crashed train, & remove crashed train, part of the signaller mode train
can be removed too - but not really gone, just select change direction twice and it will reappear as it was

Explain about train in front - once stopped will remain stopped until front train past next signal, but if in sig mode then
can still move unless front train on element immediately in front

Recommend user clears the session & performance file folders periodically as files can mount up quickly

When signal Attr set to 5 display the call-on so that if not reset it's evident to user, + point out that this done in
case train allowed to pass at danger, crashes before signal reset & removed, & succeeding trains can then re-accelerate
past the signal (will slow down while signal not immediately in front because Attr 0, 4 or 5 causes braking)

If removing crashed trains may need to position mouse over one or other elements to take sig control/remove
as other removed train can clear the TrainID on the overlapped element

Prevent session saving if locked routes or continuationautoroutes pending (just too complicated!)

After load a session status will be 'Paused'

If have a .rly loaded & make a major change (i.e. other than just PrefDirs) then will become a new railway under development
& will have to resave it as a .rly file to operate it again.  Note also that the tt may not work if incompatible.

Limit TT floating info to the next 15 entries max

When moving text select first character

Can't have continuous diagonal named locs, can name diagonal elements, but all names have to be different

If train goes off track then can correct it manually provided it stops at a signal, if stops at buffers or leaves railway
then missed action messages will be sent; can still manually control a train if had stopped at buffers but no longer
able to revert to timetable

If in signaller mode & train stopped by signals, will move when sigs clear unless told to 'remain here'

If in signaller mode a train will always stop for a stopped train in front, so won't crash, but other train may
crash into sig mode train, and even if 2 sig mode trains both moving then likely to crash

Explain tt entries, all starts start 'S', all finishes start 'F' etc

Advise 80% for ratio between power-at-rail and gross power

Explain about unset & set gap graphics, but not displayed as distinct in ZoomOut mode

Note (& for user) max running speed of joined trains is the min of the 2 trains

Avoid number of cars in descriptions of trains that split, as original description doesn't change

Should run without scrollbars, if they appear set taskbar to autohide - explain how to do this, should make it OK

Train floating label gives train track length & speed limit, if not on a train gives both tracks for 2-track

If train reaches buffers not at location will give error message, timetable can't permit this legitimately

Suggest to user that if changing named elements don't link until named, as will have to link again afterwards anyway

If have problem in creating an autosig or preferred direction route because an alternate route selected by railway then either
use a non sig-route & select in shorter segments, or add signal(s) to ensure only 1 route selectable (indicates short of signals)
anyway so this is best option

Warn about 30 sec between all actions, take acct in timetable or will likely run late

Warn about splits across signals - won't be heeded if overplot

Tell user to ensure entry points protected by signals to avoid crashing into existing trains (won't start on top of another train
but will start if one right in front!)

If train called on then can't restart after station stop until all clear to next signal in front (StoppedForTrainInFront), also
run at restricted speed (30kph) when called on

If allow user bitmaps advise not to extend over tracks as trains, signals & points etc will overwrite them.  Also for deleting,
selecting, & positioning etc only the top lh 16x16 part is recognised (treats like any other 16x16 graphic wrt these actions) Also
point out that tlhc 16x16 can't overlap anything else, but the rest can.  Also if the tlhc isn't visible then none of the image will be.

Tell user to ensure entry points protected by signals to avoid crashes

In using track idents can use leading zeroes if wish to

Timetable entries may seem a bit cryptic but can generate a great many trains with complex operations from relatively few commands

Warn user that very many ways in which an obscure tt could confuse the system that prob not checked all - try to defeat it & advise
    if succeed

Can add spaces before & after commas & semicolons to make file easier to read if not using Excel - will be stripped off

If user enters train data for SFS & SNS entries only the headcode & description will be used, rest taken from earlier train -
MaxRunningSpeed always same; Mass, MaxBrakeRate, PowerAtRail same for SNS & halved for SFS

Set out fully all the legal and illegal timetable conditions

XIn timetable info if wish to change some train data for a start continuation then have to enter it all or check will fail - can't do it

Advise restrictions on location names, + that will strip any leading spaces, + can erase by entering a CR on its own

Advise all limits for train but don't guarantee will work OK at the extremes! (no high speed limit for track, limited by train)

Avoid descriptions that include number of cars unless not splitting or joining

Ensure don't have any commas or semicolons in timetable files except as delimiters

Explain route cancelling, signals set rearwards only within the route - red, yellow etc - outside the route all red.

Allow users to have own bitmaps by changing bitmap in bitmaps file - warn about the safe pallette

Need to deal with situations where have ConsecSignals set but there are two or more possible routes between
signals.  Maybe allow manual point changing to cater for this, or maybe tell user to use non-preferred mode
& click on adjacent elements, or, tell user to create a list of predefined routes between the signals using
non-preferred mode.  May not need special treatment - can't find any other sims where this exists, user can
always select nonpreferred just for that bit.

Explain about screen resolution, optimised for 1024 x 768, change from desktop if necessary

Explain logic of station & named loc stop points

Autoroutes stand alone, so that if adjacent to a non-auto route & cancel the autoroute just the autoroute will cancel, other routes
combine, so that a consecsigs route coupled to s nonsigs route when cancelled will cancel all

Border buttons change the view of the railway, i.e. railway moves in opposite direction.  More useful for adding track & watching
trains etc - press the button nearest the edge of interest.

Note route truncation restrictions relate to route selection mode (except autosig routes, can't truncate them except at signal or
completely)

Explain PrefDirs & routes, pref dirs selected by auto & pref routes, non-pref lines only selectable by nonpref routes (avoided by
others).  Can have single & bi pref PrefDirs, equally selectable by pref routes if available.

Routes - SigPref will only find preferred routes, NonPref may find a non pref route

Warn about lockup when computer goes into standby mode

When paste a section elements have default settings, speed limits & lengths have to be set separately if required

XNote that erasing & pasting large selections, esp when have named elements, very slow.  Warn about erasing & pasting stations
especially - OK now, + have hourglass

XAlthough text appears to move when cutting/copying only track elements (inc plats etc) will paste - fixed

When pasting, pasted track will not overwrite existing track (just like trying to place track at each point)

If have text close to track, when erase elements will erase part of text on screen, but text still there & will appear when
screen next refreshed

ZoomOut button only relates to track, if have text & no track then only have centre screen, ZoomOut doesn't show text

Mention gap flashing in basic mode + display in ZoomOut in case widely separated, also gap selections show in ZoomOut when setting

Note that at present a train will try to stop at a red signal even if changed ahead of train, if within the stopping distance.
This is different than original intent, maybe keep though as more like real practice where driver sees a signal in advance
& if can stop then will do but if can't then won't - keep as a note to user.

Calling on signal selectable only when (a) approaching train has stopped at signal; b) train at station not facing
approaching train; c) at least 1 platform available for the approaching train; d) points (if any) set
for direct route into platform; e) approaching train is to stop at station; f) no more facing signals between train and
platform; and g) signal must be within 10 track elements of the stop platform

If allow calling on for a through station the train will stay stopped until there is a stop signal between it and the
preceding train

If have platform with points leading into it & need train to stop, ensure stop point accessible to train (explain how it is
calculated) since otherwise train may not stop if using points since stop positions set assuming straight
entry into platforms (from either end), but if terminal station then stop point is end of station for trains arriving away from
buffers

If have a single station with a split platform will be treated as two separate platforms by trains, but will only stop at first

Note that if trains not protected at stations then can crash as a train can't normally see a train in front, though if a train is
stopped in a station it won't start if there's a train directly in front of it.

If starting speed to high to stop at a near red signal will have a SPAD

Warn that if set points/crossovers to long lengths then will take a long time for train to clear.

If wish to set points & crossovers shorter to clear trains more quickly set elements on both sides to same short length
also as these used in calculation since train occupies 2 elements

Note platforms diagonally across track will take same name since on adjacent (non-diagonal) elements, but if diagonal
plats on diag elements then won't - need to explain how it works

Can't unlock a locked route, as all signals have changed back to red.  Have to wait for cancellation then reset.
(check if can in real world)

If lock a route or part of a route that is already partly locked further along, the lock time will restart from the second locking
and the whole will be unlocked & removed at the same time

Route cancelled immediately if train tries to run onto from wrong end, or from wrong track on a crossing or points

Can cancel a route completely regardless of selected route type by clicking on first element

If wish to truncate a non-autosig route to other than a signal then need to select NSR first

Only lock routes if train on route or a linked rear route & within 3 non-red signals of the truncate point, if no train on
route even if behind route then no locking, train should be under manual control under these circumstances so little benefit
in locking route

Can't truncate any routes if a route approach locked

Ellipse marks routes due for truncation but approach locked

If train runs onto a route in wrong direction entire route cancelled & all signals on the route turn red,
regardless of direction

When rebuild track, check PrefDirs, as all links to changed elements will be erased.

If cancel an autosig route with an non-autosig route next to it, can't immediately reinstate the autosig or any type
of route as it is trying to start and/or end next to an existing route.  Need to cancel the non autosig route first.

If train passing a signal when route extended the signal retains its aspect until the train has passed, then it
changes to red & ones behind it change in sequence as expected

Explain restrictions re no 2 signals together in same direction & buffers not next to signals, points or crossovers

If really need elements < 100m then put more adjacent to points & crossovers as these will then be 20m, but can't see why
this should be necessary.

Note:  Signals only become visible to a train when it enters the signal element, i.e. braking will not commence until this point
for a yellow or double yellow (or red, perish the thought!) signal.  So for realistic layouts need to put the signal
at the location on the layout corresponding to that at which it becomes visible in the real world, rather than at the position
corresponding to the signal's position in the real world. (duplicated above)

For distance setting, explain that Track 1 is always straight track for points, & set out what it is for crossovers so user can
work out overall distances - no need, label is now explicit

Can use rh mouse button to reset individual elements to default lengths & speed limits

If have two routes between points or crossovers then when select lengths, & select the points/crossovers, don't know which
the prog will pick first, so best to select the elements inside the points/crossovers so unambiguous.  Points/crossovers
are always set to 20m anyway so won't affect overall distance much, and if critical can take it into account - distance includes
both ends selected.

If prefer locations other than stations not to show select background colour for them, but keep text clear as not
transparent (though maybe they will be transparent, since transparency goes with the colour?) Though maybe have these
not showing anyway during operation

PrefDir recognition on leading points:  just look at the elements adjoining the two tails, one or both will have an entry
marker and that shows that there is a PrefDir.  Can't end a PrefDir on points so there will always be adjoining elements.

Only use fonts that others will have if exchanging layouts, else will default to nearest windows font

Have to select a platform or named non-station location for naming locations, footbridges or concourses no good

Location & timetable names case sensitive, King's Cross & KING'S CROSS are different locations!

Explain how to find connected gap - When mouse down over gap in UserMode == BasicMode (whether or not in DisplayMoveSelected)
the selected gap flashes red and the connected gap flashes green.  Flashing is cancelled on any mousedown event unless in
DisplayMoveSelected, and on a mousemove event if not in UserMode == BasicMode.

To clear a route directly in front of a train select the element immediately ahead of the train, because any element
train stands on is automatically cleared from the route

Reconsider adding messages to SearchForRoute (& maybe PrefDir), by passing in an AnsiString parameter, and only
setting it in the function for obstructions, not for just reaching ends of tracks.  Then examine if set on
returning to GetNext... & provide default message if not.  But, who's to say would reach selected position just
because reached an obstruction?  Need it for reaching an obstruction on a PrefDir that reaches the objective - just
include a note on this in the help file - i.e. reasons why a search can fail.

Don't allow text too close to signals & points as will be erased when track replotted - explain why

can alter bitmaps if wish to, tell how & mention glyph blhc pixel

hover over a gap to show connecting gap

Tell user that the track element positions reset whenever trackOK? pressed, as this will be noticeable if
retain the examination feature.

Can only select plats or named locs to name a location, not a footbridge (unless have plat at same loc) - don't want isolated
footbridges to have names on their own else complicates the search for existing location names

to delete a location name enter nothing in text box for the location

opposite plats for same track linked, but diagonally opp plats (i.e displaced by 1 or more) for same track not

When plotting PrefDirs, since only have one entry direction graphic, for leading point could mean that either trailing
exit is the PrefDir, and both may be coloured because a reverse PrefDir plotted from one or both.  However, since can't start or end a PrefDir on points
there will be at least one element beyond the point with the direction shown, so can work out.  Also if still in doubt can add
a PrefDir where required as duplicates don't matter.


CLEARED ERRORS etc:

/Can right-click a gap on a train - should this be prevented, only really matters if train stopped, and even then can
    still see it's there - keep for a later upgrade when other more important things being changed - don't allow
    right clicking on a train & stop flashing if train enters flashing gap

/CheckTimeValidity always reduces time to 0-24hrs, need to allow times up to 99hr 59m, also allow displayed clock to exceed 24hr
    add a check in checktimevalidity to prevent tt entries above 99h, maybe roll over at 96hr on clock & disallow any times > 95h 59m
    also include check in add & subtract mins within tt

Colin Lilley error changes:-
/a) can select named floating locations (namedlocs & concourses) in timetable, need to prevent these (maybe restrict to
    ActiveTrackElementNames - prob need to compile a list of ActiveTrackElementNames)
/b) change message "'name' not found in railway" to something that indicates may be text in rly but not a location valid for a tt
/c) add timetable being edited to error file, not just the loaded tt (use CreateEditTTFileName & similar function to loaded tt function)
/d) create a different error file tt saving routine instead of duplicating the sessionfile version, drop error messages from the
    error log version + only save either if they exist
/e) send message to error log if either of the tt files won't open
/f) change message for syntax check - emphasise very superficial
/g) update help files & manual to point out that must start with S entry, finish with F entry (apart from sig controlled trains) & that
    these can only be used for starts & finishes (but mention repeats which can come at the end) - but make sure there aren't any
    other exceptions!
/h) add note in manual & help that combo box only lists locations that trains can stop at, & any others used in tts will be rejected
/i) change message for rejection of names in tt - not that can'r find in railway but that trains can't stop there
/j) test new errorfile with & without loaded & editing tts, test sessionfile with changed session tt filing (not changed much)
/k) include continuation names if other track also included, earlier version would have excluded them
/l) in tt validate, use ActiveTrackElelemtNames rather than LocationNames
/m) add manual note that for validity all names in tt must be stop locations, even if only used as passing points
Xn) add manual note re max of 256 columns in excel for formatted tts with very many repeats, suggest amending to 'following minutes
    part each hour' (prog isn't clever enough to do that on its own!

/Won't allow a repeat after a signaller-controlled entry when try to validate tt (fault introduced at 0.2b)
    CHECK IF OTHER CHECKS COVER THIS, I.E. ALLOW A REPEAT ONLY AFTER A SIG-CONTROL ENTRY didn't seem to be checked
    CHECK BOTH MOVING & LOCATED SIG CONTROLLED ENTRY OK + THAT REPORTS CORRECTLY A LOCATED SIGNALLER CONTROLLED TRAIN
    Note: at line 7949 IsSNTEntryLocated allows a sig controlled train to have non zero start speed, but maybe any train at loc
        with non-zero start speed classed as moving? No, this is OK, any train that isn't listed as departing from a location
        is classed as moving.
/If have non-sig-controlled train at stop loc but moving an error message is given (why is this disallowed?) - this is OK as the check
    is that the train departs from the location that it starts at, only then is a moving start disallowed

/if tt allows unrestricted headcodes the syntax check still fails when check an unrestricted headcode - change message, no set
    AnyHeadCodeValid to true for the syntax check - done for v0.2b

XIn choosing colours, click on swatch panels directly, no need for buttons, & have 'undo last selection' and
'default colours' buttons

/put messages in CheckHeadCodeValidity & remove from outside - add 'GiveMessages' condition & ensure messages appropriate

/NextElementPos errors - TrainUnit L316; L345&6; L350&51; L883 (Slough error);

/Note, if have >1 application running then can have faulty sessions as only one .tmp timetable file saved, so second applic may
    change this so when 1st saves a session it saves the wrong .tmp timetable file.  Note added to help file

/Simon's session & perflog errors (OK, was due to DateTimeString() & TimeString() using Windows regional setting)

/if single step train forwards after a spad it jumps forward immediately (maybe at other times too, check when new values calculated)

/Make sure there are no semicolons after 'if' statements or will always evaluate the conditional statement
/display.cpp & /h; /graphicunit.cpp & /h; /interface.cpp & /h; /about.cpp & /h; /textunit.cpp & /h; /trackunit.cpp & /h;
/trainunit.cpp & /h; /utilities.cpp & /h, /railway.cpp

/algorithm: check every line, if 'if' appears check forwards, if find ')' before CR or before white space & '//' then OK, else print out
together with the line number

/Ensure all returns have popped calllogs where required
/display.cpp & /h; /graphicunit.cpp & /h; /interface.cpp & /h; /about.cpp & /h; /textunit.cpp & /h; /trackunit.cpp & /h;
/trainunit.cpp & /h; /utilities.cpp & /h, /railway.cpp - all OK

/Ensure all 'new' matched by 'delete'
/display.cpp & /h; /graphicunit.cpp & /h; /interface.cpp & /h; /about.cpp & /h; /textunit.cpp & /h; /trackunit.cpp & /h;
/trainunit.cpp & /h; /utilities.cpp & /h, /railway.cpp - all OK

/add +/-1 for HLocMax & Min for track & inactive track

/make train creation points same for performance log & chron tt (currently front for tt & rear for perf log) maybe same for
entry points where no name [use rear train point throughout, i.e. prob chron tt wrong - see line 10819 in trainunit.cpp]

/when done above alter chron tt in examples & on website (using text editor)

XInitialise arrays using pointer in header & values in definition

/Check graphic bitmaps, 474 'new', 432 transparent = true, 42 transparent = false, 474 delete i.e. all seem OK in
railway but 479 files in bitmaps exc 4 arrows & error message file (5 extra!)

?Mystery - if have 'AnsiString LoadString = "";' in a file then C++ Builder won't recognise it!

/NB:  Ensure that all basic bitmaps have the safe pallette then will be OK wrt above problem.

/Remove all unwanted bitmaps from the file

XWhen casting use safe casts wherever possible

XFind out why PlotTrain() listed as unknown function in Understand for C++, & called by some functions, whereas TTrain::PlotTrain()
is also listed as called by other functions - why the difference?  Also applies for other TTrain and GraphicForm functions

XProduce new pre-start Birm rly after sigs changed at Washwood Heath

XProduce sessions half hour in for b'ham rly

/Ensure tt correct before release:-
    no test trains,
    timings appropriate,
    all warnings set,
    1 or more pre-start time entries & post end entries to illustrate the principle

/make thorough check of all train starting positions & headcodes etc (see messages in AddTrain) for accuracy when check timetable,
don't leave errors until runtime

/drop the 2 signals @ LHS of Washwood Heath (top) & rebuild prefdirs & distances

/Add all bitmaps to a resource file for quicker loading (check for its presence instead of 'Bitmaps' unless embedded
in the .exe file)

/Provide a Manual.pdf file that is the 'help' file in printable format

/Add try - catch to all missing fastcalls - done where needed, + added event & call logging &

/Isolate help file from sample railways if possible

XCheck if can suppress windows paint messages - to stop flicker on mainscreen & on floating window

XSee if can have a 'Loading' screen by calling main prog as a DLL - not needed with quicker loading

/Drop Flashon & off, just use warning flash

/Need 'read-me' file

XCheck high speed running through b'ham - several trains @ 400kph

XCheck if need a footnote to access 'find' in help files

/Add button graphics for the installation file & structure better - more headings & better layout

/Make the installation & first use a pdf file.

/Reconsider inbuilt tt editor help in light of help file

/if train due to stop at station & train in front then will stop before it, but no need to mention except re callon (test in
SetTrainMovementValues doesn't need BeingCalledOn)

/white crosses for locked route if on dark background

/when remove train with cdt at for oaks have error

/find out why 1S14 stops for train in front at BNS - prob not a fault but not expected

/when train running on cleared locked route the track shows black regardless of background

/Image missed a bit of lh text in textonly file

/When print out 'x' with 2 named locs only one prints the name - later text has white colour & earlier black

/NB: When change the resource file need to comment it out from Raildev36.cpp, build, then put it back in & rebuild, else keeps
using the old version (somehow) with bits missing

/Investigate position of FlashingGraphics - causes blinking in zoomin & sometimes zoomout depending on
where called - it's in ClockTimer2  - Need Display->Update() whenever have changed any graphic, if wait for windows repaint then
repaints entire screen & seems to be that that causes the flicker

/Since putting all graphics in Graphics unit and assigning from Interface, sometimes lose a lot of the elements, but not always
Lose: 1,2,19,21,22,23,24,25,26,47,60,61,68,69,70,71,80,81,82,83,99,102,103,105,115,116,117,118,120,125,126,127,128,142,143
OK:  Assign seems to make the original bitmap transparent, works OK if not made transparent until after assigned to the glyph. Play safe
and load again from file

/Single 'save file' button stays on when edit timetable (was prob on before this build) OK used BringToFront

/When try to interrogate parameters in PlotAndAdd... C++ closes instantly (also when loaded old version before changed graphics, but
graphics worked OK with old version, but only tried once) OK - this is a C++ Builder fault, still occurs after cured Assign problem

/When AddTrack panel opens gl1 is already depressed - seems OK now have cured the Assign fault

/When created RailDev36.exe in BeforeDarkBackground folder it didn't show the icon - OK, need to load it directly under Project - Options

/When train runs past a signal & it reverts to red & in zoom-out mode, the signal location (in zoom-in) is blanked regardless
of the fact that in zoom-out mode

/Remove throw in CallLogPop for release version, just return without popping - don't want a user error because of a fault
in the error detection system! - No, but increase the number to say 50

/Only allow Restore tt control when at/in valid position/circumstances;
    Can only take sig control when stopped - enroute (@signals, buffers, i.e. when not at location) or when stopped at a location
    Stopped:- Crashed || Derailed || StoppedAtBuffers || StoppedAtSignal || StoppedAtLocation || SignallerStopped || StoppedAfterSPAD ||
    StoppedForTrainInFront || NotInService
    Hence key is StoppedAtLocation - only used when at a timetabled stop, so use this + LocationName to allow the restore

/Add distances for liv loop

XHave B'pool tram system with diff h/cs (a001, b001 etc with letter for route & number for tram number) & signaller only mode,
+ routes in description

/Ensure correct HELD & ERROR prefixes in LogActionError

/Test warnings for loc too short & train in way for split + repeated messages of these sorts for same split at diff plats

/Check starting facing buffers & taking sig control (MidLag), then changing direction (prob can't as lead = -1) NO, only MidLag
if start at continuation, so OK

/Add warnings for waiting to join (2 off)

/Only check train action functions (i.e. when TrainOperatingDataVector.EventReported != NoEvent) every ~5 secs - use new train int &
cycle round every 100 & take action when 0

/Drop FailNewService, (only applies for FailLocTooShort), & make warnings for FailLocTooShort, drop ActionVectorEntryPrt++ &
LastActionTime, so signaller can manoeuvre to longer platform, also check when message given & don't repeat, but allow
FailSplitDueToOtherTrain message if sig manoeuvres & another reason to fail split

/Try to find out why zoomout can display at half-normal offset, so can't regain normal zoomout display & fix it

/Add explanation about ;0000 in tt help window

/Test new h/c arrangements

/AbleToMove runs into error if leadelement = -1 for sig control & stop at half train over continuation - test ability to pull back
from that pos & to move fwds when corrected

/Test session save & load for all ten warnings

/Check if route cancels for continuation start at wrong-direction route

/Ensure sigs set correctly for rear split that spans signal

/Why does autosig route element in front of signal that goes to red behind JQ train lose its colour & also element in front
of train at WyldeGreen (that doesn't change colour) - NB OK when Clearand..., e.g. when move viewpoint then back again, will
prob be OK if call Clearand... after set signals etc but find out why it happens first - because replot points on the route,
so have to call Clearand... to recolour the route.  BUT, AddTrain is in TTrain, & Clearand... in Interface, & call AddTrain
from TrainController::Operate and from FrontTrainSplit & RearTrainSplit, which are called from UpdateTrain, but only interested here
in the Snt & Snt-sh part of Operate - need to set a flag in TTrainController & examine in ClockTimer2 after call Operate() - Yes, OK now

XTry to arrange all reference arguments at end of non-reference arguments, may be responsible for failing the debugger inspection
function (though doesn't seem to affect the code) (Maybe just do this if have more probs with debugger)

/Test Frh & Frh-sh terminate messages in both formatted tt & performance log, also for a repeating entry to ensure repeat times OK

/Consider including trackvector number with save track

/Ensure that whenever plot a route replot trains after else route will overwrite train - but, stop clock while do
all this so don't have updates interfering

/Ensure no PrefDir erase or insert called from TOneRoute, especially from other functions that Routes have access to, since
don't want routes interfering with PrefDirs

/Check have got rid of all PrefDir map accesses that assume a max content of 2, since can have up to 4, 2 each for 2 tracks

/Check all erase functions - ensure each done by separate calls unless unless guaranteed OK, to avoid interfering with
iterators

/Don't use any clColours if they need to be tested later unless sure that they correspond directly to safe colours,
else set to nearest colour which is different

/Note that the timer may trigger at any time (assume acts as a h/w interrupt), so disable it during any
tasks that shouldn't be interrupted.

XWhen allow changing colours ensure that where plot bmWhite, the colour is appropriate

/Check Unplot works OK when only part of a train plotted - as in a continuation, & if not alter it

/Remember to setallsignalsandpoints when drop clearanddisplay from route building mode - because of trains

/Make all usermodes button driven

XCheck display resolution & alter display area size accordingly, avoid having sidebars
(see help file under "Considerations when dynamically resizing forms and controls")

/Ensure that clock interrupt functions can't interfere with any variables used by other functions, since can occur
at any time.  Also check all other functions in case can't allow them to be interrupted and pause the clock
if so.

XUse a TGraphic for PrefDir start and end marking instead of using ClearandRebuildRailway

XWhen train starts, need to build in the delay corresponding to the two starting element lengths before moves off

/Test trains stopped on bridges & crossovers with attempted route setting on other track

/Test trains with routes that loop over and under bridges for right and wrong direction route behaviour (checked train on overbridge & OK)

XHaving TTrain access to TrainController is a bit incestuous - try to avoid if poss, or arrange a more legitimate way for
trains to have access to other trains, also for individual routes to have access to other routes instead of accessing
AllRoutes

XCalc actual speed when accelerating rather than linear interpolation (calc in normal way but limit value to MaxHalf
or MaxFull as appropriate

/If allow colour changes will need separate graphics for glyphs as these don't change colour - just load the glyph from
the bitmap before make the colour change for display use - no need for more bitmaps

/Update explanation for SetTrainMovementValues (+ many others)

/Need to consider how to deal with trains starting on elements that are in existing routes, both right & wrong way facing,
and on locked routes - dont permit

/When try to AddTrain & fails, don't then try to plot start position.  Will either replot an earlier train that is in the
vector or if no train then will fail

/Allow saving & loading at any time, but include a checksum for track & PrefDirs to ensure valid for railway.  Then if mod a
route can't load a saved game but can start with timetable providing valid enough - do enough consistency checks to make
sure it will work OK.

/Build without need for runtime packages as far as poss, to avoid need for dlls & vcl40.bpl

/check if any buttons other than routes should be disabled rather than invisible

/Take great care with using train vector positions to find a train as it changes as trains are removed and new ones added.
Just use TrainID for specific trains as that stays constant, OK to use train vectors where cycling through all the trains

/As above for route vector positions & locked route vector positions - check uses

/.dev file - all trackbuild & PrefDirplan functions, no operation
/.rly file operation only + save as .dev

/check .rly file for all set as expected & reject if not - or just load it as a .dev file & give message.
/allow .dev files to be saved as .rly & .rly files as .dev, + check for existing filenames

/Maybe no need to have separate load selections, just check type & 'try' to load as that type.  Reject non .dev or .rly files

/Ensure all proper error messages are covered by exceptions
/Ensure no user messages are covered by exceptions

/Only use CallLog if use a 'throw' in a function or a subroutine of it

XMake all passed TrackElements & PrefDirElements references to save stack, + make constant

/Ensure all 'while's' bound to terminate

/Need to test GetTrackVectorPositionFromString for negative ('N') values

/Simplify the mode clearandrebuildrailway calls, maybe only call when specifically needed, rather than
other way round

/Change all vector empty tests to use empty()

/For flashing graphics, link the flashtimer to the master operating clock, so that can only make
graphics changes - train plotting etc during the off flash period, so never any changes between
picking up the original graphic & replotting it.  Can vary relative on & off periods by use
of a counter within the flash timer

/Check Display->Update()s, may be able to dispense with some to prevent flicker

/Remove any data elements on heap for classes that themselves are on the heap

/Make functions const where don't modify class members

XIf have screen 'blinking' prob due to pending repaint messages when Clearand... called.  If happens ensure have
Display->Update() after screen operation preceding Clearand... (did this in ExitOperation due to plotting background
train graphics without an update before Clearand...

/When testing force lots of locked routes & continuation routes as well as constructroute while create & cancel others
(created earlier than locked etc) to test effectiveness of decrementing route numbers

/Consider making error a class containing the deques & timestamp calls

/if can't place a train because another is present arrange for later retries + message log that delayed, remove user
message

/include detailed information to user in ErrorLog()

/In release version have Application->Terminate after call errorlog in 'catch'

/Review other buttons for visibility/enabling (esp Routecancel)

/Just plot one platform for plotpoints, as can't have 2 platforms for points, but check still works OK

XIf diagonal track links to a straight track with a platform, a train will shave off some of platform.
Ensure replot original graphic as picked up. Maybe disallow platforms next to diagonals? - can't reproduce this, maybe
trains were different when this first occurred?

/test facing trains for call-ons

XLater - if allow user bitmaps try to squash image onto the glyph, by expanding horizontally the track element panel can accommodate ~ 24
user bitmaps - avoid transparent white as may have on screen & not be able to see them, make them another colour that's noticeable

/check if stopped at terminal station before trying to respond to inappropriate timetable followup actions, maybe would
ignore them anyway - probably

/if can't start a train because of another train just give one log entry then log the actual time of starting

/check all vectors to ensure that if elements contain heap items & the element constructor creates them (like TTrain &
TTextItem) then have explicit Delete functions rather than element destructors

/Check that wherever have a CallLog.push_back, have CallLogPop before every return inc non-explicit return at end of function

/Check use of all flags where need to reset after a new loop value, sometimes reset outside the loop so stays set inside
 - for 'for', 'while' & 'do'

/Drop capital letters in showmessage except at start

/Set up an explicit default font for use in text (initially) & floating labels

/Get rid of as many includes as possible from header files

/If probs in loading give message & try to load as a basic 'trk' file

/Have 'rly' files with full details for operation but no changes, 'dev' for development but no operation, and 'trk' for
basic track & text only, no location names, no PrefDirs, no links.  If can't load a rly file try to load as dev, & if that
fails, as trk.

/When join, add the mass, power & braking forces, when split, give half of each to each train, keep same max running speed

/Test at above max speed & 20m element distances

/Check all screen error messages & change to throws where appropriate

XWhen adding a train check if any trains in front before a red signal and defer addition until clear, say up to 15
elements

/Eventually create functions for sequences that are complex so that the object is clearer - esp in search
functions

/Check text of all messages, warnings, captions, panels, hints etc that only have first word with capital letter

/Check if there are any other messages (train approaching message wasn't protected) or whatever that can appear during
operation where need to stop master clock

/Add try.. to info menu
/Make info menu item visible if any track laid, not just for text

/Add CallLogs for all HeldAtLoc functions

/Recheck StoppedForTrainInFront conditions & proper behaviour for being called on & other train at station when stops &
not, and for SNT behind another train that moves off.

/Remember to use Repeat headcodes for FJO, JBO & FNS & their reports

/Remember to delete train for FJO at appropriate time

/Check have included CallLog for all significant functions & that all included in CallerHandler check program

/When above correct need to test behaviour for reaching buffers at station and also for reaching non-buffer station stop

/Test all missed actions for all types, for FER when expected & not expected, and not FER
/-done arrivals, cdt, terminate (FRH), FSP, RSP, unexpected buffers, unexpected exit, failed to exit
/-checked for IncNum -1, -2 & number
/still to do: JBO, FJO, missed new service

XWhen take manual control of train cancel EventReported flag

XNeed to sort out how the lone CRs appear in files - maybe due to using DEL to remove lines?

/Consider if require StoppedAtBuffers as well as StoppedAtThroughLocation, when the stop points coincide, at present
I think only the first to be detected is set.

XTry to diagnose route search failures better, use 2 passes, second for diagnosis

/Consider whether should pause if focus removed from railway

XAt each action screen blinks' try to eliminate

/Give error messages for missed actions when arrive at a station after other actions

/Need to test splits in as many diff circumstances as poss, front & rear, plats & namedlocs, long enough & not, diff train positions
wrt locations (esp for only 2 elements long)

/Ensure all uses of Event etc times + OtherHeadCodes adjusted for repeat usage

/Wherever have CallLog.push_back() ensure all returns & function end have CallLogPops - keep finding functions that dont!

/Arrange ActionVectorEntryPtr always to point to the NEXT action

/Test max speed & min lengths for several trains operating at once to see if can handle OK, also in ZoomOut mode when
keep plotting the whole track every 150mSec

/Remove CallLog size error in release version in case searches exceed limit, or have a different way of detecting
growth - check master clock stopped whenever any search function being used - PrefDirs & routes, in which case can
keep the size check BUT ensure it's after the stopped clock return

/Check all ifs, make sure multiple statements are bracketed = esp where have CallLogPops & returns

/Look for any trackvector.at & inactive...at & change to At with caller numbers

/SignallerControl jobs:-
Check for all route types
Check route locking & correct graphics behaviour when moving on locked route
check restoring to tt control when train immediately in front at station stop (should stay stopped)
no next stop in floating window if in signaller mode - no, keep this so know where to take the train
show sig mode in floating window

/NB A lot of caller functions don't have caller number in call log!! (Checked & corrected on 16/09/09)

Significant jobs still to do:-
/Signaller control of trains
/File saving & loading - trk, dev & rly + all assoc conditions
/Session saving & loading

/Remove caption from ShowMessage - can't, fixed as name of application's executable.  Consider whether should use
a different form (MessageDlg) or not worth it

/Test a tt with all kinds of entry included to verify all types set to something (combine with 'Next' test)
Test all 'Next' floating info for all diff action types (combine with TT test)

/Ensure all vectors, maps & multimaps are cleared when clear everything

/Remove 'throw Exception("Error - a train's EntryTime > TTClockTime");' before release

/Add mass & power (gross) to floating window & check work OK for splits & joins, with repeats & no repeats & shuttles

/Look for cases where create very large data structures on the stack & move them to the heap (e.g. char * in
Timetable loading)

/Need a new email address for railway messages + add to the memo box

/If change name from railway.exe change the logfile message accordingly

/When have pointers as parameters to functions, display in CallLog as a displacement from first pointer (as in
FloatingLabelNextString)

/Check all arrays have correct dimensions wherever used, inc headers (search files for each array name)

/Lot of 'at(' functions still present, consider changing to ...At for range checking - make sure all non-checked 'at('s
can't have an out-of-range value

/Keep checking - Make sure InfoPanel->Visible = true before each caption setting when need to display it

/Dont' pass classes as references - see help file - "The status of classes as pointers becomes important when you pass a
class as a parameter. In general, you should pass classes by value rather than by reference. The reason is that classes
are already pointers, which are references; passing a class by reference amounts to passing a reference to a reference."

/Need to test 'N' values in timetable for both H & V, for 1, 2 & 3 digit H & V values

/Test offset saving & loading in session files

/Don't have any track elements (or PrefDir elements etc) as parameters, use pointers or references (although see above,
such elements are classes so maybe OK)

/Check all implicit & explicit returns have CallLogPop()s

XRecheck execution times for with & without diagnostic data when run as stand alone .exe files

/Change all 'other class calls' of .at for At or _at (several trainvecor.ats in Interface)

/Add in new caller functions to CallerChecker (or devise an automatic reader?)

/Change TrackElementAt to .at() in ClearToNextSignal to save time

/Check all classes that use default constructors & copy constructors, that will work OK - these just copy the members

/Clearly the order of #include files is important, try to find best strategy for these & make consistent for each unit

/Ensure all class data members are intialised on construction.
/Make sure all bools set to something on startup

/Initialise all class data members on construction (done TTrain)

/Try to find out why output file creation fails prior to
ShowMessage("Failed to save temporary timetable file, sessions can't be saved - try a few more times, may only be a temporary problem");
Also fails to open sometimes -     ShowMessage("Failed to open timetable file (error " + AnsiString(InHandle) + "), make sure it's not open in another application");
Change SaveTimetableToSessionFile & SaveTempTimetableFile to avoid handle related file functions - seem to be unreliable, or, better, try to
find out why failures occur, even with 10 retries - maybe a windows problem?  No help from web.  Put delay of 50mSec between retries for
the 10 tries & seems to be OK - 22 consecutive attempts all OK.

/Ensure there aren't any full trackvector or path etc searches during operation

XCheck overall memory usage if poss during operation

XCheck size of trackvector (~500kb) & pathvector (when set) for b'ham railway

/Check for any dependence on container pointers where use 'insert' or other actions that can invalidate the pointers

/Check how trains join, always via callon or sig control?

/Ensure all throws use 'Exception'

/Test a train entering a locked route from the wrong end, Clearand... should erase it, see if it does

XMaybe drop the throw in ChangeBackgroundColour for release version? - No, keep it

/Carry out full code inspection prior to release + add comments & tidy - to minimise work after

/Test all service types for Bir rly, shorter distances & fewer repeats but same actions

XCheck which classes use pointers to objects & if so whether they should have the 'Big 3' (C++ FAQ Book) - maybe leave code as is but
point out in the writeup & say should have copy & assignment contructors & then would be OK, but only learned about such things later
- one of the probs of being self-taught!  Prob lots of other blunders in the code - please be tolerant!

/ODDITY:  If set interface form Visible = true using object inspector then stops with CPU window visible when returns from FormCreate.  If
press f9 a few times then continues normally.  No prob if run the .exe file outside C++Builder.  Visible always used to be set to true
until changed it and masterclock to prevent error memo being visible during startup.  But, if can crack this, then it seems that with
form visible ShowMessage works (tried with an earlier version where wasn't made invisible)
Note:  If Windowstate set to wsNormal then doesn't happen!  But set to wsMaximised or wsMinimised it does.  Hence set to wsNormal, but
keep Visible set to false, set to wsMaximised in the constructor, BUT has to be after Visible set to true, else ignored.
It seems that if WindowState is set to wsMaximised when Width & Height have conflicting values, the CPU window is shown when Visible
becomes true, OK if Width & Height set after wsMaximised set but before Visible becomes true, but then Width & Height overrule wsMaximised
and the form shows with those values.

/--re above, check if still happens with quad word boundaries - it does

/--re above, check an earlier version where Vis=true OK, by resetting to false then back to true again - tried this, when set to false
it was still visible!

/maybe use right clicking of a gap at any time to display the corresponding gap?

/Reset Lock delay to 120.0 secs

/Error:  cancelled a pref route in front of a train, in the middle of 2 auto routes.  Sig didn't change to red

/If cut named location along with the name, when paste the name is repasted even though should be deleted
/If copy named location with the name, copies the name even though the location is unnamed

/Add a very simple railway & tt for users to start with

/Ensure have time and ability to control all trains in sample railway, with auto routes set at beginning + appropriate warnings

/Provide a sample operating image with the invitation email

/Provide a 'raw' formatted tt + a tidied version for the Bir rly
Check if there's a .csv to .txt convertor on the internet for timetable display for people without Excel

XTry to come up with a more interesting first screen than just blank

/Need better icon - load icon directly into both Interface form & Application (via Project - Options - Application - Load Icon),
& for the desktop shortcut load the icon from the .exe file & not from the bitmap, else the transparent areas don't show properly

/Add warnings for junction approaches & entries where action needed on sample railway

XIn example layout have one or more signals embedded in a platform

/Arial 7pt is clear & fits between tracks, apart from bottom of descenders;

/Check sig control speed passed on for new services, splits & joins etc OK, new services keep value, splits take original value,
joins keep value of the train accepting the join

XCheck if any of the 'check' functions called during operation (would slow prog down)

/Include sig speed info & 'S' sig control (e.g. for tram ops) in tt help window

/Make max brake rate 0.1g in sample railway, that is HST brake rate so prob typical

/Any other data useful in floating window?
/Maybe spread speed etc data over 2 lines?

/Need hourglass for any TT functions?
/if start train on a route in wrong facing direction check that route will be cancelled immediately

XTry to find out why Clock2Stopped set without app activate & deactivate when first run prog
- discovered when trying to see where operation went after start, to detect parameters passed in
for running directly on clicking a .dev, .rly or .ssn file

/Need About box - use beta v0.00

/In sample rly ensure text not split by display divisions

/Need small 'about' box

/Need better icon & use in about box

/Add brake force to floating window + drop 'max' wording - try to simplify to make shorter

/I think that when files are loaded (except using a dialogue) only the first 6 characters are noted, so ensure that these are unique,
e.g. Lg0001 etc - check on this - no, everything is saved in the session file itself, the perf file name is for the new one,
check if the prog ever tries to open an existing file using a generated name rather than a dialog

/Actual time to change points, set signals - simsig - 2.5 sec if point changing needed, instant if points already set - OK incorporated

/Route setting, can signaller go from sig to sig to sig etc before route set, or just sig to sig in turn like here?
/Just sig to sig but note instant if no point changing

/After a call-on, if call-on cancelled, say by forward train exiting from station, then the stopped train reverts to normal background
colour, ensure has correct background colour for signal if still stopped (will be).

/Stop clock when cancelling a route & when waiting to complete a route after flashing (both can take a long time)
/Test clock stopped for route completion and for route cancelling

/Need to be able to load track & paths etc from errorfile, to recreate the railway, try to compromise & use same for both error &
normal - created new save, check & load track, Loadold uses old version, still to resave all railways & check all works OK

XBlack line round moving trains in overview mode - maybe with diff outlines for the different locations within the train

/Sample rly needs to include Witton, Perry Barr, Hamstead & Bescot Stadium + Water Orton, + a number of different speed freights

/Need to give headcode for all error messages in validate TT

/Have services use all lines and stations

/Add freight trains

/Ensure all loc names in sample railway properly associated with the location

/Change default font to MS Sans Serif

/Sample railway:
/Name all buffers & continuations;
/have continuations at depots & major sidings, call railway exit/entry
/continuations e.g Lichfield link,
/add arrows to all main track,
/add direction indicators on all main lines
/add all signals + platform end signals
/add distances & PrefDirs
/include splits & joins
/just set distances for through lines, leave sidings etc as default

/Remove testbutton from release version

/Add hints for all menu options

XDevise a nice splash screen & background to display while loading - maybe a track/train image with some signals
& routes set to show what's possible - can only do this when mainform loaded, and already started then

/performance summary at end, both on exit operation & formclose

/Add plenty of hints for all buttons & options

XTry to arrange that double clicking on a .trk file loads that file (& use for .dev etc in future)

/When display error screen get rid of all other screen displays, esp PerformancePanel (maybe ClearEverything() first)
& make it a read-only edit box

/Consider whether need a flasher for unable to enter - & how can user find it? - OK, give warning instead

/Add:  On-time, late & early arrivals & passtimes, & average lateness & earliness, On-time & late departures & average lateness,
missed stops, other missed events, spads, spad risks, crashed trains, derailments, unexpected exits, incorrect exits,

/If there are no trains ensure all warning flags reset (in case remove one by one & a flag left for last one)

/Add hint for warning labels - right click to erase

/Check a SPAD flash in zoomout (+ all others)

/Have a performance score based on minutes late wrt no of trains & duration of journey, errors, spads, crashes,
etc.  Need better TT handling functions - to set up within programme, to allow all times to be moved forward or back by
fixed amount for associated trains

/Need to amend save & load sessions to account for active warnings

/Add tick box for each warning & delete text - for acceptance, have ticks rise with warnings BUT care if tick when changing, maybe have a
single 'cancel warning' button that stops ttclock & is re-enabled when ticked (cumbersome!) - have fixed positions for warnings & tick
boxes, & when ticked warning is cancelled and its place becomes vacant - up to 10 places - have all in red No need for this, just
enable the boxes when paused - OK, pause when hover over a warning, & right click to erase

/Add the calllog ticker to 'alt del 2'

/ERROR:  When routes set at prestart, and then trains created on or partly on a route, signals don't change - need to set signals to
rear of created trains in same direction as route, and force cancel route if train in wrong direction   (test for both)

/Have a 'Warning' available for any action with a time Wbefore the time, (remember to allow for in CheckTimeValidity) & display in the
5 labels currently used for perf logs,  + double these to 10.  Roll up as before then -> 2nd 5

/Change points duration for points needing to be changed or not, & use 2.5 secs for change & 0.5 sec for not - just need to
examine SearchVector @ end of GetNext... for pref & nonpref routes
To do here:  /first ensure that SearchVector just contains the section of route to be added, doesn't matter about startpos
as can't be points; /drop #defines for points & sig durations; /set PointsDuration & SignalsDuration as const TAllRoutes values of 2.5
& 0.5 respectively; /return a bool in GetNext.... for duration - points or not points (i.e. signals);
/call PointsToBeChanged in GetNext... immed before CallLogPop before return true; /change SetRouteFlashValues to just alter RouteFlash;
/test for all route types & for points changed & not

/Train unable to enter railway not an 'ERROR'

/Add HELD at reports in perf log both for sigs & railway entries

/Close perf file if exit while operating + add summary

/Read screen width & height at start & if not 1024 x 768 explain won't be optimised, recommend resetting from desktop
 - Xexplain how

/Add own email address (create a new on just for this program) to errormessage & include in a message box with OK button
& centre message & button on display

XHave a template timetable for user to complete, preferably in csv format but preferably looking OK even in plain text

/Tie all timed events to a single timer, to avoid gate races & clashes

/Beware if use ShowMessage with timers, as different threads running & fails when press OK - as in
derail message during train movement

/Try to get rid of as many friend classes as possible

/If leave prog running for long period (inactive, maybe active too), get an error after a while - may be due to screen
saver need to investigate (check if does it without a layout loaded).  Seems to be when system goes into standby -
screensaver OK.  Check if only happens when running under C++ Builder.  Due to going on standby, if just run .exe file
get a Win32Error code 1813 - can't find resource in image file, & locks up apart from MousePos display, oddly that is OK.
Need further investigation, though if only happens when on standby then maybe can live with.  Also happens with no
railway loaded.  If not active application, when try to re-activate it have a whole load of Win32Error messages, both
code 1813 & Code 5 - Access Denied, if clear all these off then the program works OK!!  Check if still happens for a
default application with no code, if so probably a fix available by now.
XAsk user to send copy of full railway with error log files & timetable (if in use) - in screen error message

/Add program version number to stored information, maybe at start of call log

/Prob with excel formatted tts, can only manage up to 256 columns, but can manage up to 65536 rows, maybe try to drop down to a new row
for each new train?

/Swatch panel toggle - <Ctrl Alt 4>
/Development panel toggle - <Ctrl Alt 3>
/KeyPreview for the Interface form is set to true so these keys are responded to whatever control has focus

/Note: When enabled, the timer gives the first click after the delay, not immediately.

/Note: The access error was due to the masterclock becoming energised on Application->Activate.  When this made
conditional on there being no error all is OK.  If fails to find a specific bitmap then fails on LoadFromFile, &
when MasterClock called & tries to access TrainController, another error is detected & caught at the end of MasterClockTimer and
ErrorLog is again called, but fails when trying to save the track on SaveErrorTrack, when trying to construct a track element. On
this failure there is no exception catcher so the access violation message is given.

/Need to test whether directory creation has failed, maybe because trying to run applic from a read-only source.  If so need to
stop the prog with a message similarly to absence of Bitmaps

Xadded catch (EFOpenError &OE0), but access error given first when .exe is run

/Don't fail prog if session, perflog, formatted tt,  or image folders not present, just give message that won't be saved, essential
folders are bitmaps, railways & timetables -no, for all but bitmaps, if not present create them.

/Try to find out why have an access violation when missing folder or bitmap file & find a workaround

/Think about blank lines after start time, whether OK for TEVPtr to point to when TTHandler called

/Allow same HC (i.e. 0 for repeatdigits) in repeat services if poss - check joins OK with this

/When run prog outside C++Builder & have an essential directory missing, get an access error message, maybe because full diagnostics
is enabled?  Just want the user message & nothing else.

XDrop DevelopmentPanel & call ticker in release version

XRemove toggle swatch from release version

/Devise a formatted timetable .csv file that can be printed out via a .csv file reader

/Try to get rid of as many #include .h files in headers as possible - maybe have separate file for all track & PrefDirelements,
and /combine train & traincontroller, that should eliminate the need for headers to have access to other headers

/For exit railway, if all valid exit points have same location name quote it in the floating window

XHave a save operating image option, available when operating only

/Can a train under sig control join another or be joined by another? - no

/Check operating image with embedded signals in platforms - with diff colours

/Check operating image with locked routes

/-->>REMEMBER - Still set to FF22FF

/Make sure setlevel1mode for tt can't be recursive when finished TT editing functions

/Make sure spaces stripped from train entries in edit tt functions

/Have a drop down box with all names in loaded railway, & include at the cursor pos in OneTrain...memo
Try to make drop down box readonly, or if not reload proper name & items each time pass thro TTHandler

/Need to be able to insert & delete a train from TT, maybe allow to move entries one at a time

/Have separate new & edit timetable menu items eventually

/When validate OK include railway loc check if a railway is loaded

/Select allservices item by clicking on it

/Will it deal with an empty tt file?

/Remove enter start time button & function

/Check saved timetables for entries that end with a blank line (cursor at next line) or not (cursor at end of last line)

/Not true that all train links must be unique - find better way of explaining

/Allow tt editor to display the * & any other lines in a tt (except for before start time & after blank line),
to add & see comments & separate batches of trains

/Don't allow editor to save a blank line & cut off all that lies below it

XInclude TT name & 'under development' in form caption

XRemove old export timetable file menu item when TTmode function OK - no, keep both

/Have a save as button in TT panel

/Drop the PrefDir & Route length restrictions & change messages accordingly - not dropped, increased to 150, i.e. 2,5 horizontal screens

/Have a 'RestoreTT' button + give warning if changed, or only enable if changed + give 'will erase changes' warning

/See if TTStartTimeValidFlag is ever used & drop it if not

/Still to test AddMins + finish SubMins

/Consider TT mode as a mode within mode menu, maybe with buttons as for trackbuild?

/Include a check within timetable checking functions that don't exceed 99h in maximum no. of repeats
/Include a check within timetable checking functions that don't undershoot the TT start time - in 'validate tt

/Still to complete the 2 validates

/Point out in TT editor that validate train doesn't check linkages, just the train on its own

/When TT validated allow to create a formatted tt from tt edit panel & remove from file menu - leave in both

/Check if have to have a blank line at end of TT or if an eof OK - no blank line or no more lines both OK

/Check timetable editor with an empty file - should require start time entering but have filename set

/Worked OK on Windows Vista with cp3245mt.dll, borlndmm.dll & vcl40.bpl in railway.exe folder on memory stick

/Change perf log name from session log to just Log (confusion with sessions)

/When print images miss a bit of text at bottom (& prob rhs) - ensure extends to cover all

/Have an optional prefix to timetable headcodes, so ensure unique for comparison purposes regardless of actual headcode - so can use
same train headcode as much as wished

/Test new prefdir building starting on points & ending on leading & trailing points, & crossovers

/At end set to DoubleWord boundary

/In TrainUnit lines 7747 & 7869 say can allow up to 2 forward & reverse matches, yet the tests rule it out - need to sort out

/Check if CheckCrossReferencesAndSetData deals correctly with forward entry a shuttle, and reverse entry a nonrepeating link to
that shuttle - will be classed as a non-shuttle in that call - yes that function only takes the 'otherheadcode' in, not the non-repeating
headcode, so won't find the non-repeating match.  But, what if have same HC match between a non-repeating link and another link?
Current checks don't rule this out & need to.

/Remove the 'public' declarations in place of Private & Protected in TOnePrefDir

/Is it right to use LoadPrefDir during LoadRoutes?  There are differences between PrefDirs & routes, ensure will not compromise the built route

/Maybe drop extra spaces before (.rly) in open railway file

/Make simple diagrams of all TT entries & explain time requirements for shuttles & links to shuttles etc

/Change RouteID to recovered value in StoreOneRoute for SessionFile loading, but not otherwise

/Only allow basic & PrefDir railway images when not operating (& show hourglass), and stop clock + hourglass when save an operating image

Oddity:  With new element unit, & PrefDirUnit & TrackUnit .h files just having access to Element.h, wouldn't store anything in
AllRoutesVector (or any other route building) during session load of 30-11-09 11:50 session.  But, when gave PrefDirUnit.h acccess to
TrackUnit.h all OK!  Maybe it needs access to *Track since that declared as extern in TrackUnit.h  Note: latest session file fails
because changed Sns-fs to Sns-fsh.  When put #include TrackUnit.h before #include PrefDirUnit.h in PrefDirUnit.cpp it works OK! Maybe there's a
cyclic dependancy?, maybe a redefinition of something used in the standard files?
See if vector returns an error code to say why it didn't store it - no, apparently
Is it that *Track is inaccessible, or some other feature of TrackUnit? - try to give access to *Track by some other means
What does it mean that PrefDirUnit.cpp needs access to TrackUnit.h before PrefDirUnit.h and what are the implications?
Is the problem what I am adding - EmptyRoute, or what I am trying to add to - AllRoutesVector? - must be AllRoutesVector, since if try to
add 2 enpty routes, fails on an access violation on trying to add the second
Still fails if declare class TTrack; at head to PrefDirUnit.h.
Tried 'delete AllRoutes;' before access in correct version to see if same as fail version - different, failed at Route2Multimap access,
since AllRoutesVector.size(0) became 1 after the push_back, as opposed to staying at 0 in the fail version
Odd - when using correct version, after the push the storage used was 536 bytes (end - beginning), whereas for the incorrect version it
was 532 bytes.  i.e. as if an extra integer or address is stored for the correct version + confirmed by sizeof(EmptyRoute)
Now:  Found that the size difference was due to word boundaries being different in the two cases for some reason.  Changed the advanced
compiler setting to Word from QuadWord, and then both same size (510 bytes), AND - program worked OK!!  Changed back to QuadWord, rebuilt
& failed again, & worked with TrackUnit.h in front, i.e. same as before.  Also works OK using DoubleWord as the boundary.  But, why
is EmptyRoute, or whatever comes next, or AllRoutesvector, or whatever, not on a quad boundary?  Checked as far as possible & all seemed
to be on quad boundaries.  Probably won't be able to find out.  Have to put down to a C++Builder error.  Clean up all the code & see if
still persists, but at end set to DoubleWord boundary and combine Elements, TrackUnit & PrefDirUnit

/Warning that session will be lost doesn't stop the clock - try to find a way of stopping it

XShouln't need to have timetable loaded by a railway in order to save it to a .csv file
/test some trains with more actions than others
/Add BrakeRate in te

/in TT for unlocated Snt give front ID

/test all diff types of train:-
/HH:MM;Command (cdt)                                                    }TimeCmd                 }
/HH:MM;Fer;set of allowable IDs                                         }ExitRailway             }
/HH:MM;pas;Location                                                     }PassTime                }
/HH:MM;Snt;RearStartIdent FrontStartIdent                               }StartNew                }
/HH:MM;Command;HeadCode (/Sfs /Sns /jbo /fsp /rsp /Fns /Fjo /Frh-sh)    }TimeCmdHeadCode         }
/HH:MM;F-nshs;non-repeating headcode                                    }FNSNonRepeatToShuttle   }
/HH:MM;Sns-fsh;NonRepeatingShuttleLinkHeadCode                          }SNSNonRepeatFromShuttle }  Train action entries
/HH:MM;Snt-sh;RearStartIdent FrontStartIdent;FSH HeadCode               }SNTShuttle              }
/HH:MM;Sns-sh;Fxx-sh HeadCode;F-nshs HeadCode (non-repeating)              }SNSShuttle              }
/HH:MM;F-nshs;Details                                                   }FSHNewService           }
/HH:MM;Location (/arr & /dep)                                           }TimeLoc                 }
/HH:MM;HH:MM;Location                                                   }TimeTimeLoc             }
/Command   (Frh only)                                                   }FinRemHere              }
/+ exit at a named continuation

/Include description as well as HC for expected trains

/What is it that enforces all train info for a new train, & just HC + optional description for a continuing service (line 729 onwards)

XRemove if(ZoomoutFlag)... from PlotOutput for release version, or when understand why becomes set under some circumstances - no, need it

/Oddity:  When loaded KCBridges-Buffers9 then timetable5 (with 2F42 & 43 shuttle - 7th set down), had TrackElementAt error when selected
'operate'.  But didn't happed thereafter and can't reproduce.  Solved - due to accessing NewTrain->Leadlement in AddTrain, before it
had been set - TrackElementAt(520, .... .  When timetable attempted to load with first-pass error, corrected it and retried, LeadElement
took a very large out-of-range value, whereas normally its value was 47 (for some reason!), i.e. incorrect but within range.  Changed it
to FrontPosition & OK now.

/With development panel showing & track information set, get side bars sometimes when mouse at RHS of screen
may disappear when dev panel dropped, but try to find out why happening (try disabling scrollbars - yes, with
development panel placed too low the scrollbars show if visible, but not if not)  BUT, what about other resolutions?
- can't use other resolutions without scrollbars so need to keep visible

Recheck TT successors, fsp/rsp seem to allow other finishes except Fer - OK?   Maybe make all explicit (i.e. == xx for OK) rather than
negative (i.e. != xx for OK)

/Tidy all usermode settings after beta release (i.e. only the things needing setting/resetting to be included)

/Tried limiting max acceleration to 2m/s/s but normal acceleration with 100t & 1000kW & 20m track length only gave 2.57m/s/s
so dropped

/Check colour logic, normal & zoomout - all consistent & covered?  maybe test normal train background colour & display equivalent to that
& flash according to need for attention

/Floating window flashing is a nuisance, try to clear - still flickers even with a fixed caption - BUT, only flickers when operating,
not when paused, solid then, even though TrackTrainFloat still called repeatedly.  Caused by UpdateTrain() & before if(Stopped()),
due to PlotTrainWithNewBackgroundColour callers 37, 38 & 39 - keep being called unnecessarily - try to avoid repetition, or if can't
then make change off screen then upload as a complete assignment, like HiddenDisplay.  Just changed PlotTrainWithNewBackgroundColour
so that checked backgroundColour first, & if no change returned.  This cured the problem.

/Note:  If train stops at station after call on with a TimeTimeLoc loaded, and before the normal stop point, then when
SetTrainMovementValues called it assumes a stop at the stop point because the ActionVectorEntryPtr points to a name
when NameInTimetableBeforeCDT is called and the stop positions are valid.  So next element train movement is based on
this calculation.  However, when the departure time check is made (it is during this function when SetTrainMovementValues
is called), the ActionVectorEntryPtr is advanced at the end past the departure location, so at the next element when
SetTrainMovementValues is called again, all is normal, i.e. the train doesn't stop again at the location.  But to cure
the problem move the ActionVectorEntryPtr increment to before SetTrainMovementValues.

/Oddity:  When changed the set lengths button caption moved the Build track panel to the back to bring PrefDir panel to the
front to see where the Add PrefDir button was located, but when ran program & loaded a railway only the text was visible.
Could add a track element but not over other track, but only stayed visible a short time (maybe until Clearand... called).
When brought build track panel back to front again then OK, but couldn't reproduce the fault thereafter, & had only
changed the form, nothing else.  Note that when loaded a railway the track became visible momentarily (at that time had
RebuildTrack using Display after track loaded, later commented this out becasue Clearand... builds everything.  Since
tried all 6 top-down combinations of the three panels but failed to reproduce the fault.  Seems to be due to using
HiddenDisplay in Clearand..., each time was visible Display was used.
Further: when setting up to save railway image with PrefDirs, happened again, and ZoomOutFlag was set when the track was plotted
though it's only set when the zoom button is pressed.  Restarted computer and all OK!  Saved the files when went wrong, but when
ran railway.exe without cBuilder (after restart) all Ok - must be a glitch in the builder program that affects it when running
under builder, but not when not, since the .exe file would be the same in both cases.
Solved:  ZoomOutFlag is a member of TDisplay, so having 'if(ZoomOutFlag) return' in TDisplay's method PlotOutput, uses the member
value for the object at the time.  Now Clearand... uses HiddenDisplay, which is a separate object to Display, so although Display's
ZoomOutFlag is reset, HiddenDisplay's is set to whatever is in memory when the space is allocated - in most cases false, but sometimes,
especially when the computer has been on a while and memory has become used then released, the likelihood of it being true (i.e. 1)
increases.  Answer - initialise all class data members on construction, and drop the test in PlotOutput.

/Check all cases where release a train stop, and make sure SetTrainMovementValues called to set new times etc

/Use BitBtns & graphics, with comprehensive hints, and have all visible at same time

/Remove stoplinkpos's from floating window when no longer needed

/Oddity:  After manually changing form for calling on button, changed to BitBtn then changed back again,
program built OK but failed to run.  OK - somehow the interface unit had become lost from the project.  When it was
added back all worked OK.

/NOTE:  Check execution times for debug mode & release mode - 21 sec for 40 x TryToConnectTrack with B'ham 3 & full debug,
16.5 sec with release version - hence very little difference

/In infopanel begin with mode, e.g. ADD LOCATION NAMES:  xxxxx

/Change all . entries for CurDir when set for loading graphics from files (check all such cases search on .\\)

/Change BitBtn varying graphics for RailGraphics images rather than loading from file

/Try to get more colour into button graphics

XDisable the trackbuild button that has just been pressed during the mode case

/When set location name, create text entry of same name & position so appears above highest location element, or if at
top of screen position below lowest element, if name already in TextVector then amend it to the new location name & keep
at same position.  Use existing or default font.

/Check when another location name deleted, that erased from textvector

/When new buttons sorted consider widening the info panel (& moving clock leftwards)

/Try to set FontDialog selection same as default or existing font, keeps reverting to MSSansSerif

/Test stopped at location if find train in front before or at the stoplinkpos so approaching train stops early - are
stoppedatlocation & stoppedfortraininfront both set at same time? - if being called on then the train stops & doesn't
restart until clear to next signal.  If not being called on then crashes.  What about flashing in zoomout mode?
Should be OK even if both set as the train in front test is after the stoppedatlocation test Note:  Seems OK, if stop
behind train when being called on, count as stopped at loaction, and stay stopped at loc until clear to next signal.

/If train at red signal and have just taken signaller control, or changed direction etc, will train move when signal
changes? - No, as SignallerStopped.  If select move forwards then won't move if signal at red (but shouldn't have
this option when unable to move, but PassRedSignal is enabled. Why is there an error if !StoppedAtSignal for
PassRedSignal?  Should always have this set if at a red signal, but remove error in case there are circumstances
where not StoppedAtSignal even though behind a signal.

XInclude a 'Clear next trailing points' option when under signaller control.  But, what if stopped behind a red signal?

/On deactivate (or whatever is proper powerdown event) if operating enter pause mode so railway clock not updated,
and disable the master clock, then re-enable it on activate

/The standby error causes an errorlog to be issued, but no use user sending this in so try to find a way of bypassing it,
or, if can't then give an explanation to user both in help file and in the displayed error text.  NB doesn't happen for
CallerChecker, maybe something to do with timer (although there is a timer in CallerChecker but its function just
returns during operation).  Need more research on just what causes the problem. - yes, if keep Clock2Stopped = true
then seems OK!
Windows sends a message before powering down (see MSHelp - WM_POWERBROADCAST), but maybe C++ has a built-in handler
TApplication::OnDeactivate seems close.

/For leaving railway at Continuation use timetable name if present as well as ID - '...left at Snow Hill, element ID 57-N23'
/For entering railway at Continuation use timetable name if present as well as ID

/For selecting bidir PrefDirs have a new constructor to avoid all the special setting functions for the PrefDirelement

/If no track or text disallow edit menu

/Just allow bidir PrefDirs in PrefDirmode, not in trackbuild & don't allow bidir mode in track build

/For new PrefDir selection check reverting from zoom both screen & button (OK), & invoke clearand... while selection
up if poss (OK)

/Allow selection of bidirectional PrefDirs through edit menu

/In PrefDirMarker show bidirectional PrefDirs in a different colour

/Allow non-station named locs on blank elements, but don't allow track placement over one of these, have to apply track
first - check correct stoplinkposses, check floating window over blank name

/Need all same tests as in LinkTrack in LinkTrackNoMessages, but just return false without message

/Note:  When one of new points had wrong links, it failed to validate, was saved, then corrected and reloaded.  On
reloading it became automatically validated, because all links then matched.  BUT, the PrefDirvector hadn't been
rebuilt (only rebuilt when user validates, not when validated on loading), so there was a PrefDir clash when it was
compared with the trackvector, and all PrefDirs were cleared as a result.  Shouldn't ever happen in practice so no
need to change anything, and even if it did CheckPrefDirAgainstTrackVector should catch any discrepancies.

/If alter track when have PrefDirs, then revalidate, the trackvector positions will change, & the TrackVectorPosition
values for EveryPrefDir likely to be wrong.  Need to reset all these after a validate operation.  OK, already have
this with RebuildPrefDirVector.

/What if a signal embedded in platform at or before the stop point?  Need train to still stop at location and not be
stopped at signal until departure time.  OK added extra conditions in UpdateTrain() where deal with station stops
but still need to test it. OK this tested out OK.

/Check if the point gap is OK in new points wrt old ones

/Test new points for PrefDirs, routes & train travel etc

/Make space on element panel before adding the new points

/Plot both fillets for the image

/In load railway, have rebuildtrack & text, then 2x level1mode == basemode which calls clearand... -only need 1 surely

/TrackElementPanel - Left 32, Top 30, Width 960, Height 65, buttons 17x17, outer margins T5, B5, L5, R6, gap 2

/All points fail to display fillets after clearandrebuild...

/additional points, /need fillets + /fillet plotting, /check FouledDiagonal, /check PrefDirs & routes, train travel,
& add to arrays for /flip & /mirror, /track->CheckTrackElementsInFile, /matchingpoint, /plotpoints, /check where
existing point speedtag value appears in code for any others

/Array sizes in EnterLocationName different to array sizes as declared!

/Need button (or menu header) to save railway during building (more to do on setting visibility & caption for
SaveHeaderMenu

/Test the zoom out home, esp after loading with offsets set

/In error messages have Error for non-danger situations; SPAD Risk; SPAD; Derail; and Crash for buffers of trains

/Allow a save of the railway bitmap, with & without gridlines

/Check for & reject duplicates in Fer exit IDs

/Try to prevent error text showing during startup

/Disable MasterClockTimer until all properly set up

/Check if caller checker checks functions beginning with ! (left SplitEntry with 2x '0' callers as a check)

/Consider message for can't set PrefDir, like general can't set route message

/Need to define allowable 'Fer' exit IDs + check that they are all continuations
Give correct & incorrect messages depending on where exit

/Check that all required directories are present before program starts (esp Bitmaps), use opendir & check for
error then use closedir, need #include <dirent.h>

/Check missed action logs for passtime before a cdt that is reached before other entries

/Note:  StoppedAtLocation takes precedence over buffers & signal - so don't have 'needing attention' warnings when not
needed - include comment each time used in code - check for 'if(!StoppedAtLocation'

/Need a timetable 'Pass Time' for freights & non-stop trains, to have control over route - also send missed action logs
if reach a 'pas' before a 'cdt' - same as if reach a station

/Check missed action logs not sent for location after a cdt

/When stopped at buffers at station with actions after, have the turquoise 'attention' colour when should just be pale
green, also when change direction under cdt keeps the 'attention' colour even though doesn't need attention.  Also when
stopped not at buffers & changed direction ,waiting to change again, had pale green & 'stopped at Moorgate' in floating
label but still flashing in zoomout (this was next to a signal)
[added  && !StoppedAtLocation to StoppedAtSignal test at line 903, to StoppedAtBuffers test at line
537 & to at line 624 in TrainUnit.cpp, + included in PlotStartPosition since that used for many actions - cdt, fsp etc]

/When train left railway under Fer with missed actions before, failed to give missed action logs, but gave both
unexpected exit, and exit x mins late

/Check all cases where TrackElementAt used without a pre-test for value being -1

/A number of text functions don't have calllog protection

/Add call logs to all new saving & loading functions - check all functions & add calllogs where necessary

/Change layout of track elements in panel

/Make PrefDir select rectangles same as distance setting & location name (red rect)

XConsider dispensing with '&&' in captions (set ShowAccelChar to false, default is true)

/Need to be able to crash into buffers in case points changed into siding in front of fast train

XSend missed action logs if crash into buffers - no need, will be sent when train removed

/When zoom back in using click on screen, don't default to marked gap position when setting gaps

/Allow 'Edit' menu in all stages of Build/Modify, but return to AddTrack afterwards - advise user that returns here as
ususally need some adjustment afterwards

/Extended distances coming along well.  Need to deal with button pressing on length panel & calc ConstructPrefDir distances
& speedlimits

/Use extended distance setting function using same function as PrefDir setting - build ContructPrefDir in exactly the same way
& have a 'Check/set distance' button, as 'Add PrefDir', when distance box appears

/Note in existing distance setting mode can keep selecting elements & blue rectangle keeps appearing, & distance is
wrong - so will need amendment anyway

/Will need to be able to set a single element - can't set a single element PrefDir (maybe do by erasing extra(s)?)
/Advise user to use 'select' for a single element

/PrefDir too long message now inappropriate for distance setting

/No need to drop the screen movement buttons for distance setting

XGet rid of Zoomout returns (but check not needed) - no leave in as a precaution

/Whenever iterate a vector using begin() & end(), test first for empty() & skip the iteration, otherwise will
try to access the begin() element & won't be anything there [Done interface, text,

/When train runs over gap in Bham9 it shows as unconnected - maybe it's when train starts on it

/Need to add new Callers to list in check file & check - '0' entered as defaults in many cases

/Can use calllog for constructors, just can't use caller - check all significant ones - Train is only sig't one &
added for that

/Move complex functions from header files (>1 line)

/Drop Callers for simple data accesses

Xinclude a PrefDirVectorAt function with caller & range checks

/some functions in '.h' files with callers that have no checks made (e.g. GetHPos() )

/Make it clear for length setting that in selection it is each element that is set & in button click it is all linked
elements together

/Adding CallLogs: Done - Interface.cpp & h; Text.cpp & h; Track.cpp &h; TrainController.cpp & h; PrefDirUnit.cpp & .h;
  TrainUnit.cpp & .h; Display.cpp & h; GraphicUnit.cpp & h; Utilities (not used in utilities except for CallLogPop)
/Suggest adding Caller to all CallLog functions:  Done - Interface; Text; Track; PrefDir; Train; TrainController; Display;
    GraphicUnit; Utilities (not used in utilities except for CallLogPop)
/Find a way of allowing railway to load with user defined offsets, maybe store NewHome values (DisplayOffsetHHome & V)
with railway + add user note that will display the 'home' screen

/Test all edit menu options when offsets not zero

/need to avoid throws for file contents being out of range during loading - ensure all checked in FileIntegrityCheck

/when load a railway have a validity check of PrefDirs against track, & if invalid clear EveryPrefDir

/Set font when startup to basic form, currently set to last piece of text added during textbuild

/add in railway changed for mirror, flip & rotate

/add text to copy option
/add rotate 180deg
/check PrefDir erasing when erase track

/Perhaps can do away with storing default track elements in vector since any change makes Finished = false, so
connections invalid anyway.  Vector becomes extremely large if keep default elements as every time reposition
blocks using select have a lot of additional elements

/Make NonStationNamedLoc darker, both solid & striped

/Add Reselect, Mirror & Flip options in edit menu

/Check effects of zoom in for each track, selection, PrefDir & oper modes, and disable zoom out if there are problems (esp
set lengths)

/still to add text to flip & mirror & test

/When reselect, need to set SelectBitmap to reselected elements, else display still gives old elements if flip or mirror
had been used

/still to test all mirror elements

/Add ability to include comments in timetable during train entries, by starting line with '*' (with or without
leading spaces)

/CheckFileInts seem low for vector positions, check all & make large enough not to cause probs

/Is there any point saving modes in session files?  Set to 'pause' on restart so prob set there - check.

/Best to save offsets in sessions as likely to reset to TLH screen when linked as track numbered from top left.

/Add ConstructPrefDir & ConstructRoute to error log file

/Include an option in 'Edit' to select areas of track to change bulk lengths & speeds, maybe lengths & speeds separately

/Set a limit on how far forward a PrefDir or route can be set (e.g. 50 elements), else can search for a long time & extra
key presses can cause errors

XStop clock when searching for PrefDirs & routes

/Try to solve PrefDir error - log file in temp - caused by only checking for repeat elements in searchvector, rather than
also in ConctructPrefDir.  So, when building a PrefDir can have same element in ConstructPrefDir over and over again
(legitimately), but only 4 elements are checked in PrefDir4MultiMap, on the assumption that a max of 4 can be stored (2
track element with 2 PrefDirs per track), so any additional ones, although they exist in PrefDir4MultiMap, aren't checked,
and an error occurs.  Remedy is to check for repeats in PrefDirVector as well as SearchVector, and fail for these also -
added & checked OK.  But, still limit the number of elements permitted in PrefDirVector + SearchVector to (say) 70, then
should allow any reasonable search within a single screen.

/New problem after PrefDir & search vector size check, had ValidatePrefDir error on CheckCount at element 57 in PrefDirVector.
Maybe adding elements one at a time bypassing the vector size check responsible?  Not due to vector size check as still
happens without it.  OK, was an original fault, not due to later additions - when searches made from leading point in
GetNextPrefDirElement CheckCount is incremented to allow for XLinkPos & XLink as each are tested, but they are not
decremented for failure.  When decrements included all is OK.

/Check if above two problems can affect routes, and consider whether or not limit the number of elements in a search route
to 50 (for sig routes at 20m each corresponds to 1000m so sigs should be spaced closer than this).  But give a warning
so users know how to correct.  CheckCount treated differently so 2nd prob OK, & when setting routes can't end a route
within another route and can't cross or intercept another route so the danger of repeating elements doesn't arise.

/Change cursor to hourglass for PrefDir searches

/Change cursor to hourglass for route searches

/Rather than searching all trackvector in pasting, just use the H & V values

/Still to deal with ResetDefaultLengthButtonClick, & resetting SelectLengthsFlag + maybe others

/Drop SelectSpeed menu item

/Find out why distance squares dotted after selects has been used - PlotDashedRect set the Pen to psDot & not changed
afterwards - now set in each use & OK

/Add ContinuationAutoSig & LockedRoute vector clear() to ExitOperation as well as 'case OperMode'

/Include text in select cut, but not select copy, and show text in cut selection while moving

/In selection moves overwrite existing elements

/Include 'cancel' after selection made

/Have emgy braking at b'ham start, should be half braking

/Have diff colour for unnamed locs than named locs in zoomout mode

/When unvalidated, keep validate button visible, also set gaps button if gaps unset, while in track build mode

XStore offsets in sessionfiles

XDispense with TempBackground.bmp, use '0' instead - leave, useful as a marker for errors

/Transfer new PlatxxStriped.bmp & Platxx.bmp from laptop bitmap folder (on blue memstick in bitmap folder) to main computer, also
sm76striped.bmp 77, 78, 79, 96, 129, 130 & 131, also smName changed to make darker

XMaybe allow logfile generation anytime using a key combination

/Store operating modes in sessionfile,

/Check if any other values need storing in sessionfile

/Maybe have fixed IDs for routes (like trains) so when delete don't have to keep adjusting all route holder numbers

/In plot points arrange to replot any platforms to prevent a chunk being taken out by the point blank (similar to plot
signal)

/Change error message to a read-only text box, from a graphic

/When have a game saving method, using a single file for everything, use this also for errors, where include this and
the calllog etc files all as one file.  Then have the exact railway configuration when the error occurred.

XDeal with TrackSelectedFlag as condition in AddTrack - need to alter EditMenu states when flag changes outside the
setting function & maybe ONLY outside the setting function?

/In version copied to laptop when train stopped at signal & sig cleared, front character stays green - seems to change
briefly & then change back to green! - in fact the front may be pale green?  Also 2F49 at buffers has front character
still caramel!  All this seems to be new with laptop version - due to computer picking nearest colour - no good testing pixels
to determine the colour, as may well be different.  Use a different method.  But first find out why first char is different, &
eventually use change foreground colour & change background colour using base image where white is background & not white is
foreground.
Explanation:  FrontCodePtr is not set to a graphic initially, but should be set to HeadCodePosition[0] during UpdateTrain(), however
the background isn't set to the background colour of HeadCodePosition[0], it is set to a near value, 10276863 (9CCFFF) instead of
10079487 (99CCFF).  This is because the graphic setting of the laptop is 16 bit, i.e 65536 colours.  When FrontCodePtr set to same
graphic as HeadCodeGrPtr values (TempBackground) and its Transparent value set to
false, like the others, then all works OK - due to existing graphics being set to the same safe pallette. But, still change colour
changes as above, then if any user computer changes the graphic
colour then won't matter, since it is never tested, only ever test for white.  OK because the only graphics that have their colour
changed (using ChangeForegroundColour & ChangeBackgroundColour) have single foreground colours (signals have 3 foreground colours, and footbridges
two, but these are plotted differently).  No need for this, just ensure that all basic bitmaps have the safe pallette then will be OK

/In session load, stopped at buffers with timetable left has correct background while paused, then changes to grey
when run, though zoomout flashes correctly

/Avoid having to validate just because location names added (but check extra time for adding to EnterLocationName - OK, not significant)

/Return to same level mode after overview selected

/Stay at same sub level state until quit or exit, sometimes state changes when selections change, esp during track build

XAllow a 'nudge' facility in track build where change display (i.e. offset + Clearand...) by one up, down, right or left - no, can use
cut & paste for this, don't want to encourage easy changes as timetables won't work thereafter

/Change Consolidate to Validate

/Arrange for performance panel to stay on screen, but can use all screen, not just the display area, but avoid scrollbars

/Test a calling on signal embedded in a platform

/Check plotsignal, does double yellow cover platform?  Could arrange where plot platform first, then signal, & could use
the normal platform, but wouldn't work for first platform plot when signal present, so use the cutout platform
but ensure whenever signal plotted the platform is plotted forst, because of the double yellow.

/Check callon signal with platform also

XTry to allow a description for user bitmaps - save for later

XTry to find out why floating lable flashes & background shows through & stop if poss - it's not as bad with no trains
& just track showing, prob due to caption changing while visible, use separate ansistring & change all at once; changed as much as
poss but still does it slightly, but only when trains are moving - prob due to screen updating, happens to the mousepos label also,
maybe a feature of labels? - just have to live with it.

/Make ContinuationAutoSig delay depend on speed at exit.  Make FirstDelay, SecondDelay & ThirdDelay integer members of ContinuationAutoSig
class.  Use 1200m (WCML average - see below), for FirstDelay, calc from distance inc last signal to
end of continuation, & use 1300 - that (1200 + 100 for next signal immediately after continuation), else if already > 1300 use 100m for
signal immed after continuation.  For SecondDelay & ThirdDelay calc from FirstDelay + time to cover an additional 1200m for each

/Include extra ContinuationAutoSig members for Session saves

/Test new ContinuationAutoSig delays for trains at diff speeds & hot on each other's heels (to ensure cancels earlier values for later
trains)  With 30kph & 500m to go had 108s, 252s & 396s, 108 should have been 60 for 500m but others OK.  Cleared that
prob but still to test at diff train speeds & with 2 trains close together
/Probs here - get sig passed at danger on autosig routes when train close behind another that is just accelerating
past a sig that has just changed to yellow, that prob OK, but when try to remove train have throw error - can't identify
the train

/Sessionfile of 061009 18:25 has one of crashed trains without appropriate background bitmaps - included MidLag but still not right

/Crashed trains loaded from session files don't have front character showing - will still be red on red bgnd, also
when taken under sig control doesn't change to blue

/Test all modes for return from zoomout, also for other case where assume same Level2Mode (i.e. success after Validate)
/zoom - Level2TrackMode:-
/NoTrackMode
/case LayoutMode:
/case TextMode:
/case AddTrack:
/case GapSetting:
/case AddText:
/case MoveText:
/case AddLocationName:
/case DistanceStart:
/case DistanceContinuing:
Xcase Selecting:     can't zoom in these modes
Xcase CopyMoving:
Xcase CutMoving:
Xcase Pasting:
Xcase Deleting:

/success after Validate - Level2TrackMode:-
/case LayoutMode
/case AddTrack

/Level2PrefDirMode:-
/NoPrefDirMode
/case PrefDirContinuing:  (also OK for PrefDir not started - just returns with no action)

/Level2OperMode:-
XNoOperMode never enter SetLevel2OperMode with Level2OperMode set to NoOperMode
/case Operating:
/case Paused:

/When distance panel visible disable all view' home & zoom buttons

/If change the external timetable while still operating with an earlier version, then will store the changed version
during savesession, and will fail when trying to reload the session as it won't match the trains etc.  Need to save the
timetable when first load it for operation, maybe as a temporary external file, so the actual operating TT is saved
during save session.

XDelete the temp TTfile when exit operation

/test tempttfile with exact multiple of 10000 bytes

/Check behaviour if temp tt file doesn't exist

/Maybe have flashing trains in ZoomOut mode where need attention - e.g. stopped at signals, under manual control

/Need to allow 'N's in GetTrackVectorPositionFromString for negative values

/Can't save as .rly file until all locations named

/Have solid colour small train graphics

/Remove excess info in floating labels but make easily addable again if required (but keep anything remotely useful to user)

/Include train descriptor & add to floating label as well as headcode (restrict no of chars & warn if go over or limit)

/Sort out better ZoomOut train colours when final colours decided upon

/If hover over a continuation in Operate mode show next train (if any) and its arrival time

/No need to save station stop points, recalculate when load - perform: If(IsTrackLinked) {SetStationEntryStopLinkPosses();
SetTrackFinished(true);} else SetTrackFinished(false);

/Before load, clear or exit ask if want to save track if it's changed

/Give station departure time (TTClockTime) in train floating window

/Try to find a way to display a message that will disappear within say 2 secs without pressing a button - something like
a floating label will be ok with a different background and centred on screen, time it to disappear after few seconds - no,
use a TT clock stopping function

/Set up a Utilities unit with all common items in one place - prog-wide enums etc & functions

/Consider a running background for trains to make them stand out more

/Consider adding (Development) or (Operational) after railway name in form caption

/Add mass, power & description (any more?) to train floating window - or maybe just description

/Think about order of stop information when there are > 1 stop conditions - Interface.cpp lines 4711 onwards, lower ones
override higher ones

/Have different train background colours for stopped in station, ready to depart station (within 30secs), stopped at
signals, derailed, crashed, - no bgnd for in motion

/Allow direction of train to be changed (only when stopped, but not derailed or crashed), & move wrt
new direction immediately or under user's control - possible because driver would have been in contact with signaller

/Add 'information' mode in build & PrefDir modes (&maybe others), where floating boxes give all relevant
element information for user to use elsewhere

/Allow user to reposition display layout - ensure ALL relevant vectors changed, maybe select TLHC, BLHC, TRHC or BRHC
for the currently displayed page

/Allow corresponding gaps to be found that extend across pages

/Need to research different resolutions and graphics card effects wrt mouse positions - using 38 top offset &
0 left offset currently, but these may not always be valid.  Check internet.

/Signaller Train Control:
Use popup menu for options.  Can only bring under control when stopped (menu won't appear else), & only control permitted
is to bring under sig control, others disabled.  When under sig control can popup menu only when stopped.  Available
options depend on conditions.  Speed limited to 30kph in
sig control, & never crashes - will always stop when encounters a train immediately in front.  Station stops ignored
while in sig control.  All red signals will be stopped at, but when stopped can be instructed to pass a red signal -
doesn't count as a SPAD.

/Check track modes other than GapSetting where don't want floating labels

XEventually try using rbegin & rend (remembering to increment the iterator) for reverse searches, except where use erase,
because erase doesn't work with reverse iterators

/Find a way of checking whether any Callers are duplicated

XIf SignallerStopped not used remove it - no, use it for train floating window

XHave a diff train colour in OV mode for signaller controlled trains, + /use solid squares rather than circles

/Add other stopped messages in train floating window (StoppedUnderSignallerControl)

/Think about when need floating labels, esp track, can be a nuisance when building

/Check platform long enough for split at runtime & refuse if not (will have checked at least one plat long enough during tt checks)

/Drop all Conns & ConnLinks in track loading
XLoad TrackFinished flag so know if 'supposed' to be linked, & if true try - try to link anyway

/In checking if a location is in a train's timetable start from the beginning & accept first entry, as same train can
now change direction & call at same stations maybe several times - but what if don't intend to stop on way out but stop
on way back? - with current basis will stop on way out and report that missed all intermediate stations! In this
situation only check stations from current pointer but don't pass a CDT entry since in effect that is a new service.

/Use LH mouse button over train to give timetable for that train from next action onwards, say for 10 actions

/Drop as many parameter loads as poss - e.g. only need EntryPos & ExitPos in PrefDirs, don't need Links also, can get these
from the track element

XAllow station stops when in signaller control & behaviour as under tt control, maybe by having option to carry out next
action if the conditions are right.  Yes, with this + option to delete next tt action can step through & select action
required, also have a return to service option

/In floating label give next action in tt, also when in sig control

/Check whether need Mass etc in timetable vector at all.  Splits & joins have mass etc set at the time of new train
creation & know what that is from the other train. + check if MaxRunningSpeed & maxBrakeRate needed similarly

/No good changing mass etc in operating vector for joins - see TrainControllerUnit line 2942 et seq.  Need to keep original
mass & calc new joined train mass when the trains join.  But, make both the mass of the train and the operatingdatavector
values at the appropriate repeatnumber equal to the new masses etc (since the train at that repeatnumber has now joined
so its mass etc change so future splits & joins will be calculated correctly.

/Check if AValue is recalculated after a train split or join - needs to be as mass & power changed + calc in session
loading for each train when have current mass & power values

XInclude offsets in session saving & loading (as part of interface) - no, no harm in restarting with zero offsets

/Add train clear & any other train controller clears to ClearEverything();

XWhen have a .rly file loaded have default save filter as .rly - no, need to offer both & .dev always comes first

/Use TrainVectorAt() instead of .at() with range checking & Caller

/Make bgnd grey for stopped at buffers (but only if not stopped at location) - corresponds to black in zoomout mode

/When zoomed out disable operational buttons (& others if necessary in other modes), at present can click but do nothing
apart from show log

/Test zoomout mode for train leaving at a continuation

/Need to unplot joining train in zoom out mode when removed from railway

/Only the rear half of the train flashes in zoom out mode when stopped at signals

/Problem: 38mS for each plot of overview for normal KC layout, & 240mS for KC*8, need to speed up train plotting or use
something different to flashing if have to replot the whole railway each time.  Need to just plot the basic track where
the train was at the last plot - store the values for lead, mid & lag (as part of Train) each time it is plotted in
zoomout mode (kept at -1 if not plotted - no doesn't matter, will just plot track over existing track, just store when
plotted on normal track), so before train plotted the track and inactive track at the lead etc positions is plotted
(get inactive from the map using HLoc & VLoc from lead etc). Don't use lead etc, use the PlotElement values for each of 4
array values - OldPlotElement[4].  BUT, need to unplot the zoomed out train before these values are updated, remeber that
train plotting & zoomed out plotting done at different times, so may have replotted train normally before unplotted
from zoomed out mode.  Remember to plot the blank first - in fact only plot blank & track where new train NOT to be
plotted.

/When altered PlotTrainsInZoomoutMode to unplot trains remove the plotsmallrailway section from it & retime the plotting
for 1000 trainplots - gives ~5Sec for 9 trains on KCBridges & .8Sec for 1 train on KC*8, so for 150mSec per cycle may
still have probs for ~150 trains.  Try to alter flash period - made this ~500mSec so now can have at least 500 trains
& probably many more so OK;

XTry colours with screen set to 256 & then 16 colours - can't on mine, modern computers prob don't have these low resolutions,
even if did then would make the best of the colours

/Prob:  when trains crash in OV mode part of one train keeps the green signal waiting colour

/Make track unit format same as train in floating label

/Make trains in zoomout mode flash if need attention & change to squares from circles

/Change background colours to final values & make zoomed out trains compatible

XDrop need to change front code colour for crashed background - no, added the same change for derailed also

XUse InterfaceUnit.cpp line 2274 for the call-on signal plotting segment - extract to separate function, no need, only
used once

XWhen signal Attr set to 5 display the call-on so that if not reset it's evident to user, + point out that this done in
case train allowed to pass at danger, crashes before signal reset & removed, & succeeding trains can then re-accelerate
past the signal (will slow down while signal not immediately in front because Attr 0, 4 or 5 causes braking) - changed callon
arrangement

/Check what happens with a Snt-sh starting at a continuation where the adjoining element is a location - OK, rear element
has to be a location for Snt-sh starts

/Complete the continuation expectation vector function, implement & test

XMaybe just use attr of 4 for both callon and signaller pass red signal

XInclude TrainIDOnElement + 01 & 23 (just for bridges) in track saving - no need, done when train plotted

/Prob with TTClock in session saving - only saves 6 digits to the file for a double - yes this is a feature of
that way the << operator works, translating a double into a (truncated) string

/Need to save performance file as part of session save

/Reconsider session saving including locked routes & continuationautoroutes

/For AbleToMove(), allow to move if train in front in sig mode, providing have space to move, but take account of element being a bridge
in front in checking for TrainID

/Probs in clearing callon signal:  Why isn't SignallerStopped not set after taking sig control with train at callon
point? See CallOnAllowed @ train.cpp line 2731 - because only called in timetable mode.  Check why call on blanked when call plot signal,
are the blanks big enough for the call ons, for all sig types? - yes they are.  Seems to clear OK when remove train with additions in
interface.cpp line 3653

/Try switching to sig mode for trains waiting to join, during the 30s; seems that will still join if fjo trian in sig mode provided
it's in the correct position, but not if the jbo train is in sig mode.  Try making both meet & 30s start to time out, then taking one
& then other into sig mode, moving and then returning & reestablishing tt mode (prob don't need to reestablish tt mode for the fjo
train - yes do need to, because StoppedAtLocation needs to be set & was reset when sig mode taken up)

/Change condition from Fjo to JoinedOtherTrainFlag (new flag) for sending missed action logs in line 106 in traincontroller.cpp so will
give missed messages for signaller Fer before had chance to join other

/All train actions when stopped 30s apart, so when stopped & terminated at Frh, if take signaller control within 30s of arrival, then
TimetableFinished won't be set (while still in sig mode), so can still return to TT control anytime after, but as soon as do so & assuming
30s has elapsed since arrival then TimetableFinished will be set and if retake sign control, won't thereafter be able to return to
TT control.    But, doesn't happen, provided have moved past the stop location when TTControl resumed, HoldAtLocationInTTMode is reset
and the Frh check that sets TimetableFinished therefore doesn't get called.  Also check what happens if take sig control when trains
waiting to join or split, within the 30s that they wait to do so.  Need a way of
allowing the respective actions to take place if the trains realigned properly & restored to TT control - would HoldAtLocation be set
again to allow the action to take place - yes it would, StoppedAtLocation is set when TTControl restored provided that the train is at
the right location, then HoldAtLocationInTTMode is set next time UpdateTrain() is called.  Prob OK for above situation also, if under
sig control if manage to get the train back to its Frh location then restore TTControl, stoppedatlocation reset & also HoldAt... so that
TimetableFinished is then reset.  Also will plot green again if at right location, so all OK - leave as is. The moral is - get the train
back to where it should be under sig control, and then restore TTControl.  If restore beforehand, then out of sync & will cancel all
earlier actions if reach an action location.

/when callon button pressed & train at callon signal crashes, can still set callon!

/Check both train-in-front checks in SetTrainMovementValues where have changed test to include bridges

/On slower m/cs like laptop floating window flashes as plotted & unplotted, try to keep it plotted while mouse over train, even though
the data displayed changes.  Corrected, but still have some flickering, must be due to display mechanism itself.

/Still have Attribute == 4 in PlotSignal - check when used, maybe Clearand...?  Use a separate bool - CallingOnSet,
set when used to set Attr = 4 & tested in PlotSignal.  Remember to reset it in UpdateTrain

/When remove a train clear CallingOnSet for its LeadElement, LeadElement Conn & MidElement

/Remember to save, load & check CallingOnSet in track saving - will need OldLoad to retain railways

/When change normal background train doesn't plot correctly, at least when entering at a continuation - try to resolve
the plotbackground mode so always plots correct background if poss & maybe incorporate in PlotTrain or in each
PlotGraphic...    It's because the basic headcode graphic has a white background, so when apply ChangeForegroundColour in PlotStartPosition all
non-BackgroundColour (including the white, since it's not now the BackgroundColour), changes to red.  Fixed by checking in
SetHeadCodeGraphics & changing background there if not white

/If a train expected at a continuation but can't enter because another train obstructing, then won't show as
expected because the time has passed its expectation time - show expectation time if poss even though past

/Add train max speed (the actual max speed, not MaxRunningSpeed) to train floating label

/Need to test session files with trains on leadmid, leadmidlag & midlag - continuation entry + all stages of partial
entry & departure at continuations

/Consider whether want locked route save/load/check in AllRoutes - make consistent with others

/Disable all signaller control actions when paused

/Find out why session info for 2F46 in last but one session file gives *0 odd kph when loaded speeds 70 odd - when
zoom back in the TTClock is reset

/After a SPAD can take signaller control, but stays stopped even if select MoveForwards - cancel stopped for SPAD
when select move forwards & allow to move.  Can keep while stopped, inc change direction, restore tt control etc,
but don't allow anything but removal for derails & crashes

/Check SPADs, what if EntrySpeed is 0.9? - OK added new stop condition for EntrySpeed less than would cause a SPAD

/Add 'Are you sure?' message to delete selection

/Check RevertToOriginalRouteSelector, doesn't seem to do much, maybe can validate with
SetRouteButtonsInfoCaptionAndRouteNotStarted()? - no, this just reinstates the original type of route selector & cancels all
route selected elements, leave as is

XTry saving session in zoomout mode

/When zoomed out disable editmenu, but re-enable if zoom in & in AddTrack mode (level setting should take care of this)

/Sort out the zoom & pause functions - add new usermode functions that are in ZoomButtonClick (when all working
OK) to MouseDown3

/Probs in loading sessions:  25/08 18:42 - OG29 has 0 speed & 2F48 has neg speed & emgy braking, + displays all digits,
others seem OK (but on other loadings have different trains with emgy braking etC

/Include a SetTrainMovementValues in RestoreTimetableControl providing AbleToMove() so that MaxRunningSpeed reset to
timetable value & applied prior to moving, else stays at 30kph until reaches next end element and SetTrainMovementValues
called

/Only permit route setting/cancelling etc when running

/CallLog etc files saved in default directory, change to CurDir directory

/Check repeats not permitted for shuttle feeders, both to & from

/When under signaller control include this in floating window (keep Next as indicator of what is expected)

/Still to add Utilities->CheckPerformanceFile(InFile) to SessionFileIntegrityCheck

/Get rid of all tellg & seekg functions - sometimes tellg gives the wrong results, most likely due to a compiler error

/Improve train plotting, try to ensure background colour doesn't spoil the leading (coloured) character under any
circumstances

/remove all getline error messages before release

XIf keep the old fstream.h make a note about why in the comments, + check whether std still needed

/Don't give error message if cancel the session file loading, + check any others like this

/Note - premature end of file caused by writing text information to file in binary mode (i.e. using << ).  Caused just
an '0A' character instead of '0D0A' for newlines.

XEnsure all files created on the heap & not on the stack

/Problems with ifstream reading:-
[The functions saved in OldFiles\Backups220809Duringifstream testing were used for testing the odd behaviour where the
ifstream pointer gave different characters using get() and getline(), when reading the timetable entries in the session
file for 20/08/09 at 18:45 (saved).  All was well until point 48677 in the session file, when for some reason the
getline(0 & get(0 gave different results.  Many earlier timetable strings had been read OK before that, and it wasn't
clear what was special about this particular string.
Later more detailed study found that on reading the string beginning at point 48605 (i.e. the one earlier than above),
within function CheckNoNewLineAtStartNonZeroTerminatedFileString the file pointer (using tellg()) reduced from 48606 to
48604 after reading the 'F' character.  Thereafter characters were read correctly but the pointer remained 2 too low.
This is thought to be a flaw in the compiler.
Later again additional tellg()s and a seekg()s were included in CheckNoNewLineAtStartNonZeroTerminatedFileString, and
though these should have had no effect they somehow caused the next getline() within CheckTimetableFromSessionFile to
read a null, even though the pointer had been reset to its value before the call to
CheckNoNewLineAtStartNonZeroTerminatedFileString.  Again this seems to be a flaw in the compiler, where the pointer
that is indicated by tellg and the true pointer within the system can be different.
Tried the old c++ stream library to see if that worked but it was exactly the same.  Probably because the same code is
used for both with the new library just defined within the std namespace.
Success!!  Traced to the putback function failing.  It (apparently) can't be used if the file pointer has been altered
after the last read that is to be put back.  Corrected that & the most recent session file checked out & loaded OK.
(note - don't need the ifstream file to be open in output mode for the putback to work)
But:  the earlier file - 18:45 as above - still fails to advance the file pointer in the middle of checking the
timetable, it sticks at position 48601.  This position points to 'r' in 'Frh' just before a newline.  Also the file
integrity is OK up to and after this sticking point.  Oddly though the loading function works fine (i.e. by bypassing
the integrity check function), though the timetable isn't read directly, it is copied to a new stand-alone timetable
file and that read by the program.
Created a new version of CheckNoNewLineAtStartNonZeroTerminatedFileString with 'New' at end, & got rid of all the
internal digressions & getlines.  This passed the earlier sticking point, but stuck later at 48677, i.e. the 'h' from
'Frh' at the end of the entry following that for the earlier sticking point.  Here
CheckNoNewLineAtStartNonZeroTerminatedFileStringNew works fine, with end pointer correctly set at 48680, i.e. after the
newline, but the subsequent getline() function, although it retrieves the line correctly, the file pointer is set to
48677, i.e. before the newline, so getline seems to fail to extract the newline character.  Still to check - why doesn't
CheckNoNewLineAtStartNonZeroTerminatedFileStringNew see 'h' instead of '0' in the subsequent read?  If it did the two
would tally, though would still be wrong.
Further investigation:-  CheckNoNewLineAtStartNonZeroTerminatedFileStringNew doesn't seem to recognize the file pointer
as set by seekg at 48677.  It continues to read at the point it left off earlier, whereas getline() does read at 48677
& recovers 'h'.  Continuing to apply getline() after the above effect it is found that it doesn't extract newlines after
reading further lines, but extracts them when read alone i.e. it reads a line then a null in succession, although the
lines are only separated by single newline characters.

Need to check:
1. Does the file read correctly if only get() functions used without getline() and without resetting the file pointer?
2. Does the file read correctly if only getline() functions used without get() and without resetting the file pointer?
3.  Does the file read correctly if get() functions alternated with getline() but without resetting the file pointer?

For 1:  Still goes wrong at usual place, reads 'h' at the same point.  Try not resetting the file pointer with seekg.
Tried this - got past the earlier point but failed later with a reduction in file pointer after a character read.  In
fact the reduction was by 40 bytes for reading a single comma!  Try without any tellg's - yes, that got past all the
timetable OK.  So, works OK with just get() providing no tellg's (& no seekg's).

For 2:  Works OK using getline().

For 3:  Gets to end of timetable OK but the next tellg gives a wrong value.  Check if using getline() alone gives a
wrong tellg.  Tried getline() alone, reached end of TT as before, but gave the same wrong file pos on using tellg.
Try continuing to see if works OK in spite of tellg giving wrong result.  Yes it works OK.  Hence the problem seems to
be tellg, which sometimes returns wrong results, and thay corrupt things when used in seekg.

Overall:  Avoid all tellg's & seekg's.  If need to reset the file to the start close it and reopen it.]

/Prevent session saving if locked routes or continuationautoroutes pending

/For saving & loading functions, save actual number of track, text & PrefDir elements first so on reloading can drop
the markers

/bring CallLog, EventLog, DateTimeStamp() & TimeStamp() into TUtilities class

XCheck save session for routes in various stages of locking & continuationautoroutes in various stages of timeout

/Consider stopping clock for all messages, or maybe just allow clock to run during operation, & have special form of
message during operation that stops the clock automatically.  Or find a way to overload the ShowMessage function.

/Stop clock to prevent any train being updated whenever carrying out any controls - should be able to do this from the interface unit.  See
if any way of stopping except when quiescent.  maybe have 2 flags, stopclock to stop time elapsing, and stoptick to prevent
a tick but still allow time to elapse

/Ensure can't use any controls if RouteFlashFlag or PointFlashFlag set

/Calc actual speed when accel & brake over a single element & say accelerating/braking as appropriate

XFor train responses to timetable times add the vector number (not ID as can go very high) * 50mS to prevent a lot of trains all wanting attention during
the same clock cycle.

XConsider using fixed acceleration of say 0.1g until reach max power input then using power input, should be more realistic
XCalc what the initial acceleration is at max power, may be ridiculous!

/Maybe have 2 floating windows in train mode, 1 for trains & one for track, use right mouse button for track but don't
interfere with stopped train manual options, maybe give train info if over train & track info if not (no mouse button
needed then) or maybe keep as now with all non-essential info removed, may still look OK

/When stop trains operating (prior to restart, not when exit operation) need to stop the updating of ContinuationAutoSigVector,
retain the value of 'Now' in the InterfaceUnit until the trains are restarted, i.e.stopclock & not just stoptick

/Add option to disable floating windows

/Make bottom buttons smaller or move to top to avoid interfering with taskbar

XTimetableFinished() not right - ActionVectorEntryptr not advanced beyond finish entries, check if should be or if other
way of performing TimetableFinished check.  Altered to bool, but shouldn't need at all - remove the need for it - no,
need it to determine whether to display option to revert to TT mode when in sig mode

/Signaller control:
can only select popup when train stopped, in either mode
if in auto only available option is 'select manual'
in manual have all options except 'select manual' available
when start in manual mode remain stopped until have another command (i.e. even if at red signal will remain stopped)
if when moving reaches red signal and signal changes, will continue to move
give timed messages for all actions

SignallerControl1
TimetableControl1
Changediraction1
MoveForwards1
RemoveTrain1
PassRedSignal1

XMessages during operation - ShowMessage stops operation, so use a separate box that has no button & disappears after
a preset time, say 5 seconds, or sooner if user presses mouse button.  ShowMessage OK for other modes when time not
critical - stop TT clock if time critical

/Don't make screen buttons invisible, just disable

/Maybe stop timetable clock when have message displayed, then doesn't matter about time to click OK:-
when wish to pause set RestartTime to Timetable->TTClockTime, when restart set BaseTime to CurrentDateTime()
use for popup menu also - can't use for session end message but that OK, trains & TTClock still operate, but
can't press any mouse buttons so OK

/SignallerControl jobs:-
XUse separate function for updating train under signaller control, very much simpler
/Check whether if after stopped at loc & moves forward slightly (say to red sig) but still at loc & restored to TTControl,
    b'gnd colour goes back to green
/Check crashes & derails
/always stops for train in front if in signaller mode, except when moving
/test 2 stopped trains at bridge, ensure get the disallowed message

/Need to ensure SignallerStopped true whenever stops in signaller mode, or find a way of recognising when removed
& use in response to HasTrainGone() in TrainController, + gives proper messages, maybe have a special SignallerRemoved
flag just for this purpose - prob better

/Change train display frequency in zoomout mode (more frequent as delay noticeable when switch to zoomout), or, better,
call PlotTrainsInZoomOutMode() whenever select zoomout to plot immediately & replot at 1 sec frequency

/Limit TT floating info to the next 15 entries max (so window not too high)

/File saving & loading:  Just have two forms - .dev & .rly.  .rly is when gaps set, track linked & all names set, doesn't
matter whether PrefDirs are set or not as can still run railway without PrefDirs.  When save a file, only choice is as a .dev
if anything unset, else have choice of .dev or .rly.  Can't operate a railway until it has been saved & has
a name, otherwise 'Under development (unsaved)' or '*filename* - under development' appears in the main form caption.
Have 'save' and 'save as' options for existing name or new name, if unsaved the 'save as' request a
filename ('save' blanked out).  If have a .rly file & alter anything major (i.e. not just PrefDirs), it becomes unnamed
again, so need to resave it in order to operate it.  Whenever changes made a FileChangeFlag is set so a warning can be
given.  Whenever a major change is made the timetable is unloaded.

/When load a railway file, link track from scratch (only save track locations, lengths & speed limits, not connections,
except for gaps).

/If a .rly file but can't link track give a message & load as an unnamed .dev file, in message tell them to try to
validate & that will give an error message that allows correction.

/Note, when try to load a file, if have errors that would cause 'throws' in GapsUnset(), TryToConnectTrack(), LinkTrack()
or elsewhere, don't throw an error, just report that the file is corrupt & don't continue with the load.  Keep the end
checks & throws in LinkTrack because if fails then it is a fault in LinkTrack, not the file being loaded

/NB  Has to be saved as a .rly file before can load a tt, so if loaded a rly file then changed it other than just
PrefDirs then need to resave it - so, use a flag for RlyFile, set when loaded as a .rly file but reset whenever
!IsReadyForOperation().  Ensure that the form caption reverts to 'under development' whenever becomes
!IsReadyForOperation().  Need to adjust SetCaption accordingly. - don't use SavedFileName[SavedFileName.Length()] == 'y',
that only tells us that the file was originally loaded as a .rly file, may well not be if track etc changed.

/A file changes whenever add or erase track, text, location name, PrefDir, validate, set gaps, change track lengths or
speed limits

/Improve buttons in Track Mode, just use Build instead of Track Build & Layout for all track & location sub-modes so
just have Layout & Text, + have 3 warning symbols for gaps unset, track unlinked & locations unnamed

/Don't need to reset HoldAtLocation or BeingCalledOn for SignallerMode, leave as are so can take up where left off
when revert to TT mode (If BeingCalledOn set then must be in station with not ClearToNextSignal, & in Sig mode still
need to wait until ClearToNextSignal before can move and at that time BeingCalledOn is reset anyway, so add Signaller
condition to set StoppedForTrainInFront if beingCalledOn is set, this forces a wait until ClearToNextSignal to move)
- change & see if any effect - make it HoldAtLocationInTTMode

XConsider subroutines for accel & braking times for varying cumulative element lengths & entry speeds, so
    can use each time needed (including the one element accel & decel) instead of calculating separately
    each time

/Need to allow a train to be selected on points/crossover etc if crashed or derailed else can't remove it - maybe
    allow anyway as could be stuck at signal with both halves on points etc & then be stuck, maybe just disallow on
    bridges as could have 2 trains & selection be ambiguous (best to disallow only if there are two stopped trains at
    that point when a message can be given explaining why not allowed)

/Change tt Command names to something more meaningful, maybe use small letters for less sig't letters & keep S & F
for start & finish

/Remove Timetable name from title bar when exit operation, & say No Timetable Loaded when not loaded + No Railway Loaded when none

/Change Power input to gross power, & convert to PowerAtRail at 80% gross

/Dont' give messages 'failed to stop at X' then 'failed to terminate at X', test for terminate immediately after an
arrival and just give terminate message, has to be immediate so CDT etc messages given correctly, if there are CDTs
etc then can give the terminate message at the end as well as failure to arrive message earlier

Xwork out how to deal with splits if have a red signal in middle of split - if anomalies warn user about them & to avoid if poss
- if a split train faces direction of signal try to split behind signal with both trains still at least partially at platform,
- if can't then log a message that need to clear the signal before can split - think about (this prob OK as a poor design if this is needed)

/Check can set routes under & over bridges occupied by trains on opposite track

/Check several trains weaving under & over bridges

/NB can be in base mode with tt loaded & can only load tt in base mode, if enter track or PrefDir build tt unloaded,
if save railway tt not unloaded

/Probs:
/with KCBridges & tt5 caption is 'no tt loaded'
/trains crash when should cross - had 'int LeadExitPos' in TTrain::Update() by mistake, so existing value overrode
the (correctly updated) value set in GetLeadElement()
/Selection has stopped working - no dotted line shown & pastes at tlhc - OK, had removed MouseMove as thought
only needed for moving the screen display - reintroduced & now OK
/end train accelerates then brakes over last element - used 'if(MaxHalfSpeedAtHalfBraking > (2 * EntrySpeed))',
added 2x condition to prevent kangarooing at last element when had been braking smoothly at less that 50% braking
rate, 2x should prevent all but extreme cases

XShow all set gaps as green when GapSetting in normal and ZoomOut - show in normal as full if set & hollow if unset,
no distinction in ZoomOut mode

/Add unset gap graphic

/When go to set gaps in KC By Three all location names vanish! - but if set one after all gone and then set gaps
the name stays - prob something to do with the form of names in the early saved version - no display duplicated -
working correctly

/don't allow a SNT into a SPAD, force stop at signal - note may be a few elements ahead of start point - if start new train
before a signal already at stop then will adjust speed accordingly during PlotStartPosition, but if start and then cancel
a route in fornt of train than can have a SPAD

XFor manual joins both trains need to be in manual mode - no manual joining

/Need to permit shuttle workings, + start from depot to station then form shuttle, with repeats for shuttle but not for
depot to station

/add the repeat time check for shuttle links, see TrainController.cpp ~line 2582 (allow 10sec each side as it's a double)

/Allow SNT located start entries to be followed immediately by FRH entries - for keeping spare trains for manual use

/Note (& for user) max running speed of joined trains is the min of the 2 trains

/Timetable jobs:-

/Handle one TT entry per train update, even if times same, if have several commands then will be stopped so will be able to handle
    them all
/Overwrite train data with that in TrainDataVector except where there are default entries, in which case keep the original data (at
    FinalCall all unused entries set to default values).
/For joins the first train (could be either) waits for the other
/Have all joins instigated by 'joined by' train
/Remember to halve the mass etc of trains that split when they split (new train info already compiled during TT checks)
/Remember to add in the mass etc of joining trains
/Send log for missed actions (TrainUnit Line ~1096)

/Clarification of timetable entry types:-
/SequenceType - NoSequence, Start, Finish, Intermediate, SequTypeForRepeatEntry
/LocationType - NoLocation, AtLocation, EnRoute, LocTypeForRepeatEntry
/MovingStart (use SNT & !Located)
/FormatType - NoFormat, TimeLoc, TimeTimeLoc, TimeCmd, StartNew, TimeCmdHeadCode, FRH, FNSNonRepeatToShuttle, SNTShuttle,
        SNSShuttle, SNSNonRepeatFromShuttle, FSHNewService, Repeat

/Have prohibited references to own headcode, check where this being allowed is mentioned in comments & alter

/Check all tt types set to something
/Remember to set SNT LocationType when known (outside SplitEntry - do in SecondPassActions)

/Check shuttle that links back to own headcode, both for SNT-SH & SNS-SH
/Check rejects a FNS linked to a shuttle

XDo a search on TimeCmdHeadCode as may need to add FNSShuttle as this now a separate type - added many new types to cover all situations

XClick route cancel when already down to deselect it

XRemove the centre diagonal from the digit 0 for headcodes, but make different from letter O - maybe leave in to distinguish?

/If reach buffers check if expected to & give error message if not (other than at a station stop)

/Raise all components below infobar by 15 & drop one of report labels - to avoid scroll bars in new windows setup

/For missed timetable action reports - include for arrival at unexpected station, unexpected buffers, and unexpected FER

/Test missed actions for unexpected exit when proper end is an FER

/Error - need missed action logs only when stop in station, not when at station but before stop (as now) - tried to
correct but when MissedActions set it goes round loop again and when stops TTVPos == 0!  Hence not a solution

/Add track element length & speed limit to train floating window

/Retain ability to link track without locations named, to allow users to check for errors, but suggest to user that if
changing named elements don't link until named, as will have to link again afterwards

/If alter track (i.e. if Linking required) ensure have to reload timetable before can operate as may have changed
validities - yes, can't operate in track mode, have to reload finished railway so then have to load timetable

/Give name of railway & timetable somewhere, preferably in title bar at top

/Give error message for facing buffers when unexpected, may not need an exception

/Give error message for arrival at a terminal station when expecting a departure

/Use LastActionTime instead of ActualArrivalTime and check for all actions - to ensure at least 30sec between consecutive actions
apart from between departures & arrivals

/If train crashed or derailed don't let it split, change direction, or any other change of state

/After an error is reported for a train & EventReported flag set, need to clear it when fault clears, so next error can be
reported

/If press call-on deselect any route start markers

/Need error logs for crash & derail

/Tidy up TrainID checks in split functions

XAllow FRH after SFS (+ as many other as poss as for located SNT) - no, no point starting a train to finish it immediately, also
need at least one TimeLoc to allow location to be set (checks same as split loc but doesn't use that to set it)

/What purpose does the event time serve in FRH? - OK, dropped it

/Try with FRH the unexpected buffers fault not reported

/Reconsider logic for setting StoppedAtTerminalLocation, can be set with StoppedAtThroughLocation - when SNT places train at
buffers in a station but followed by actions (no, on rechecking at line 217 in TrainController unit the through location stop is
in the else condition, so not sure what's happening!), but here need both, since error message not given when train stops, but when
tries to restart, and wouldn't if StoppedAtThroughLocation wasn't set, also wouldn't if HoldAtLocation was set, but this is released
after the action immediately prior to the departure.  BUT - StoppedAtThroughLocation doesn't seem to be set if train arrives at buffers
at a stop station - see TrainUnit line 1135, since ThroughLoc is in the else condition, but nevertherless it tries to restart at
TrainUnit line 610 but not immediately clear why.  Clearly need to sort all this out logically.
Added fron hard-copy note:  When SNT at buffers at loc StoppedAtthrough... not set, but not wanted as error message given during SNT proc
& don't want one in TrainUnit at line ~610, but HoldAtLoc set so wouldn't be anyway.

Station stops:
/Drop StoppedAtTerminalLocation, just have StoppedAtLocation
/SNT starts facing buffers with actions afterwards - OK. set StoppedAtLocation, no message
/SNT starts facing buffers with departure afterwards - Not OK set StoppedAtLocation, can't depart message
/Train facing buffers when depart action encountered (after SNT or otherwise) - Not OK, can't depart message
/Train arrives in stop station at buffers with actions afterwards - OK set StoppedAtLocation, no message
/Train arrives in stop station at buffers with departure afterwards - Not OK, set StoppedAtLocation, can't start message
/Train stops at buffers in a non-stop location: give error message 'stopped at buffers unexpectedly' (can't ever intend this, FRH only valid for locations)

/Set or reset StoppedAtBuffers in UpdateTrain() depending on position of LeadElement
/Just give can't depart message during UpdateTrain() if StoppedAtBuffers when the departure action reached, whatever the circumstances - covers all above requirements
/Give UnexpectedBuffers message if train arrives at buffers when not at stop location

/Train floating window is behind log - should be in front.  Can't make non-windowed controls (e.g. labels) appear in front of
windowed controls (e.g. memos).  Hence check if log visible & obscuring the floating label, and if so hide the log temporarily.

/Consider a moveable window displaying all log messages, scrollable & hideable but not writeable

/Need to check for conditions where don't add next track length to cumulative length before those that do in SetTrainMovementValues
else can postpone braking eg for station stop at next where buffers at next but one

/Problem with FrontSplit() repeatedly being called after successful split, even though ActionVectorEntryPtr incremented to next (after
split) command.  Then for no apparent reason the problem disappeared!  Solved:  it was due to the addition of another train while the first
was still being accessed via a reference.  The new addition caused a reallocation, where all contents of the vector were moved to new
storage, and the original reference(s) thereby invalidated.  The ActionVectorEntryPtr was incremented, but only in the (by then)
invalidated reference, the TrainVector still contained the original version (now moved to a different location), so in the next cycle
it accessed the original ActionVectorEntryPtr.  It kept repeating not because new trains were repeatedly added, but because by then
the new train was obstructing another addition, and in such circumstances the attempt to split does repeat - waiting for the obstructing
train to move out of the way.

/Train Running:  /Set train ident number in TrainOnElement (use a static function) so can right click element
for more info.  XNeed to start trains from descriptions rather than positions, since positions change - maybe have
3 section descriptor - Location, Platform, Element.  XIf train on a route store routenumber in train, if no route
use -1, so can release elements from front of route (use vector erase technique).  /Plot signals as red when pass
in same direction of travel, else Xplot as already are.  XUse a small overplot of buffers so still see them when
train present - prob not, too lttle space available.

/Need to check headcode validity when create a train

/Check if train attempting to start on points & give error message if so

XAllow bi-directional PrefDirs

XWhen a train passes an unnamed location the graphic replotted is the full grey colour, though the striped edges still show OK,
also replots correctly at next clearand..., i.e. when route next plotted so prob OK - No problem, can't operate with unnamed locs

XAllow double route button click for 'stay set'

/Have a (temporary) diagnostic logfile that writes info on all calls & relevant data (trainID making the call etc) for debugging
purposes, flush at every write (try to find a quick way of doing this instead of having to write into every call individually)

/Find a way of saving all nested calls including parameters.  Push and pop from the deque as they are called & return, and write to a file
in a catch block. (test system in displayunit.cpp icw test button in interfaceunit & trackunit).  Maybe store addresses of items whose
values can't be displayed, e.g. graphics

/Reconsider whether should use route ident numbers as for trains, so don't have to worry about decrementing etc in vector - problem with
locked route thought to be due to this but was due to train only removing lead route element if buffers - removed that condition & OK,
but caused a worry as would likely have been too complex to solve otherwise

/Check all 'at' & 'At' functions & ensure include test for -1 or that -1 can't occur

/Think about NamedLocations, not needed now for distance setting, maybe have in timetable for timed non-station
locations (will need only front part of train to reach rather than both segments of the train).

/See whether can drop GraphicForm as a separate form now that no objects on it.

/Make the headcode graphics bolder

/Ensure user sets non-zero values for train constants - MaxBrakeRate, Power, Mass etc (else could get a divide by zero)

XHave timetable specify if station is terminal as well as detecting by buffers or last name in list to allow for train change of direction
with same headcode

/Consider allowing trains to be added facing buffers, realistic as trains will be in such positions at arbitrary start, will change
direction later & maybe headcode for new working.

/set stopping points for namednonstation locs as extreme ends to allow stacking up

/Need to find a way to stop the simulated clock & to time train half & full movements to the simulated clock (currently jumps a full
element after a stop & restart)

/Use the modern <fstream> rather than the old <fstream.h> for file purposes

/Allow a split train to start on points but check set in correct direction (straight), delay & give warning to logfile if not

/Dont have separate tt for trains, have pointer to position in the ActionVector, & increment values for repeats on the fly (controller
    keeps a record of the relevant repeat number.

/Controller also keeps a flag for all trains - use enum - NotStarted, Running & Exited.

XCheck behaviour if split a train with no room at station for one of trains - reject if no room

/Check for duplicate & unmatched headcodes in timetable

/Set update rate so that half minimum element distance - 10m - covered in more time at max possible speed - say 250mph (400kph) than
the update time (90ms for 10m at 400kph, so use 50ms & restrict speeds to a max of 400kph)

/Allow to start facing buffers & continuations, & check this OK

/Add checks in LocationName setting function - don't start location names with numbers, & don't use 'CDT' or 'FRH' as names, or will
confuse the timetable + strip leading spaces

XMaybe make the default departure time user-settable?

Xdon't allow an unlocated SNT if there's a train within say 5 elements in front + tell user to ensure entry points protected by signals
    to avoid crashes - No, just warn user to be careful

/There's room for another 2 labels for outputlog

Xmaybe if stop at a signal within a platform but still partially at stop station, should count as a stop? - no, again a poor design

/Timetable jobs:-

/Insist on a start and finish entry for all services, add FER - finish exit railway
/For starts from splits & changed headcodes don't need any more info on mass etc, only needed for SNTs, have HeadCode + optional
    new description
/Add location data member to each command entry (automatically, not by user) including SNT if at a location
/Check platform long enough for a split (only need 2 lengths) & disallow if not, need length of 2 & 1 extra element at each end, or
    length of 3 & 1 extra element at either end (if another train in the way wait for it to move before the split occurs)
XAdd absolute station stops at last point in station for both front & rear elements as could start after stop point but still at
    station & moving.  If had stopped normally then the station would have been erased from the TT vector so wouldn't stop again. -
    covered by below
XAny train that is at a stop location with speed 0 counts as stopped, regardless of where the train actually is - useful for starting
    at a stop location but not exactly at correct stop point - maybe covers below situation? - covered by below
/Force a station stop (outside Train->Update()) when SNT element is at a location (i.e. LocationName set), regardless of whether
    at a legitimate stop point or after - ensure that when starts doesn't restop if start pos was before the legitimate stop point
    (Stopped = zero start speed, either element at a location, and location listed in the next TimeLoc entry)
/Test above new station stops
/Check that all times increase for services & split trains etc & that no time is earlier than the tt start time
XCheck all finish splits matched by a LATER entry
/Maybe allow anything after TT start time entry, then can use same time validity check as others & drop original one
/Check appropriate non-default train data entered preceding each type of start entry
/Check all joins matched by joined by's
/Add FER to location name check
/Check all arr & dep locations correspond
/Try not to insist on A & D for arrival & departure
/Deal with headcode & optional desc. for continuing services
/Allow repeats with minute (any no > 0) & digit (any 1 or 2 digit number > 0) increments + no of repeats (any number > 0): R;min;digits;no.
XAfter loaded all repeats recheck (or only check then) for duplicated entries as no. of repeats and digit increment could cause overlaps
XIf splits & joins don't need same repeats, will be assumed but if include & different will stop & query (1 prob wrong)
/Check split train starts at same time as split time
/Ensure all times for joins & splits same

/Note: have added platforms to allowed list for signals, but since clearand... called for named elements the sig plots afterwards &
blanks the normal platform, hence need to alter plotsignal to plot revised type of platform after the blank plotted but before the
signal plotted (so double yellow overwrites the platform that needs to be overwritten)

/Sort out session font colours, don't display as yet - changed all text font, so when changed back to black after writing text
it all changed back

/Put sessionlog in a panel & add label to it to say moveable & make appearance better, will prob need to make drag arrangements
apply to panel rather than sessionbox

/Try to find out why session log box moves more jerkily in ZoomOut mode than normal mode - because plotted small trains every cycle.
Changed to once every second & now box moves same in both modes.

/Try to find out why mins late was so high when had break in program at TrainID check for crash for correcting the error below,
& not otherwise - because Minslate is only tested for > & < 0, not 0, so if is 0 then IntMinsLate is indeterminate.  Checked by
repeating the condition which only happens rarely, but does happen.  Corrected by presetting IntMinsLate to 0.

/When enter at a continuation, as soon as entry accepted & before train moves onto the continuation entry set the TrainID for the
continuation entry element in order to 'claim' it.  Otherwise other waiting trains will also have permission to enter & will crash
when do so.

XAllow calling on only if front train is stopped in station
/After being called on don't let train restart from called on station until clear to next signal (at present only applies if stops
    behind train)
XCheck if calling on button disppears after being pressed if front train starts to move + if it does see if can still select signal
    for calling on
/Make calling on button visible but disabled, so users can see it exists
/Restrict speed when being called on
XCheck if signal attr of 4 resets when train passes it if there's a train immediately behind it - train seemed to pass red signal
    during testing & this may have been the reason - no reset same as all signals when Straddle == LeadMidLag & moving off forward signal
/Reset signal attibute to 0 after LeadElement moves off the signal & replot it - because
    if a new train appears immediately behind signal before LagElement of train in front moves off the signal, it (the behind train)
    will see a non-zero attribute & SetTrainMovementValues will set values to allow it to move - past a red signal! This explains
    what happened above

XConsider adding '&& (Straddle == LeadMidLag)' to 'if(Stopped()' in UpdateTrain() to ensure only stops when fully on 2 elements.  Need to
work out exactly whay happening for both crashed trains as it is probably only these that will be affected - and maybe leave as is.
Test effect if change, & ensure that when stopped both crashed trains are adjacent to each other - don't want a gap between two crashed
trains!

/Check whether line in TTrain re crashing 'if((Track->TrackElementAt(246, LeadElement).TrackType != Bridge) || (LeadEntryPos == OtherTrainEntryPos))'
should also include || (LeadExitPos == OtherTrainEntryPos) to account for trains crashing head-on on a bridge, seems that as is will only
cover trains crashing into the back of another.  Test head on crashes to see what happens.  Yes it did need this adding.

/Change most error messages for throws with last Log entry "Throw - Error Message"

/Remove all //test from CallLog pushes & pops

/Caller functions:  done TrackElementAt, BlankElementAt, InactiveTrackElementAt, all TextUnit, none in Display or Graphics, all TrackUnit h
&cpp done; done GetFixedPrefDirElementAt, GetModifiablePrefDirElementAt, all PrefDirUnit done, TrainController done, TrainUnit done,
InterfaceUnit done,  All done

/For approach locking need to include a train on element before start of route since train now removes all route elements that it
touches

/If cancel a nonsig route at a signal, the trucated signal counts as the red signal so that all rear signals set relative to that - sure
this wasn't intended, but maybe doesn't matter, if truncate anywhere behind the signal the first rearwards red signal is the next
one.  Doesn't affect any other route types as can only truncate to a signal.  Maybe point this out to users so not surprised.  Fixed

/If have a route set from Dalston to the right, and set a route from FP up to signal the protects the dalston junction, the signals are
set green!  OK had line 3819 in PrefDirUnit.cpp -     if(AllRoutes->GetRouteTypeAndNumber(LastElement.Conn[LastElement.XLinkPos],
Track->GetOppositeLinkPos(LastElement.ConnLinkPos[LastElement.XLinkPos]), ForwardLinkedRouteNumber) != TAllRoutes::NoRoute), so that
the linked points connlinkpos was 0 when should have been 1.  Changed segment Track->GetOppositeLinkPos(LastElement.ConnLinkPos[LastElement.XLinkPos])
to LastElement.ConnLinkPos[LastElement.XLinkPos] to stop the double reversal & seems OK now.

/Check size of eventlog file after hour or so's session & if too big consider keeping only say last 200 events

XHave locking feature so that can save railways with signal only routes locked on loading

/Need to test operation at different screen resolutions & optimise for each

/Consider removing many of the retained features if move screen during a particular operation, just revert
to the basic operating mode & make user start the operation again - like have done with use of description
memo in track descriptions.

XAllow user to click on a train in timetable window to centre display on that train (or similar easy locator)

XSeparate the elements of ClearandRebuildRailway eventually & only call the ones needed rather than all - to speed program up

XTry to load hand cursor from bitmap file for consistency with bitmaps - no, drop this form of
variable display eventually for a variable scale smaller display window, with screen selected based on
moving a variable size rectangle within this area.  Can just replot screen when rectangle stops moving,
use mouse up.

/Allow LH mouse button applied to points when in operate & routenotstarted mode to
change the points (can't start or end a route on points).

/Don't allow train to start on points (either of two locations)

/Have a replot function where whenever plot a temporary element such as a rectangle, save the H & V values
in a table (there may be > 1), and when want to remove it just replot the original track + any inactive
elements, rather than replotting everything - should be able to dispense with most ClearandRebuildRailway
calls this way.  In this way can plot & replot using the flashing function, also can delay operation
of route setting.  Also need to check and replot any text that lies behind these elements before the track
elements are replotted - no, would then have to replot all the track that lay over the text.  User needs to
be aware of this danger - unless can make text transparent, then can plot it after the track - no, even that
won't work, as the opaque parts would obscure the track, if occupy same area.  Just plot text first, & all
else over it, then doesn't obscure anything.

XNote:  Passing by pointer considered bad (C++ FAQ 2.11), try to pass by reference or by
auto_ptr if really need a pointer

/Lot of ClearandRebuilds when in PrefDir mode, maybe bypass the full setting procedure & just set the buttons etc
directly.  Check other modes as well, to try to minimise full mode setting when only need a few things changed

/Consider a different mode selecting system, maybe with database of o/p's for each input, or, a better way of
diagramming the 'case' system so easier to understand and modify - note the book - Principles of OO Analysis &
Design says that CASE statements shouldn't be needed in OO designs - use a class instead (page 276)

XDeal with platform lengths & train lengths, - e.g. short platforms that allow just 1 long train or 2 short ones

/If route set into buffers with exiting train in platform leave signal at red until train adjacent
then change to yellow, or apply calling on signal if one present (ensure get diagonal direction for signal right)

XConsider a tree of some sort to manage usermodes

XMaybe just have Location & Platform strings for platforms rather than track - but consider how will be used
during operation before commit to this

/ & XHave default element IDs for all elements, changeable by user, but check that all unique, use AnsiStrings,
and can prefix with type SIG, PNT, XVR, BR, BUF etc with unique number based on order of contruction

/Eventually allow a 'rubber-banding' facility to move, copy, cut & paste tracks (& text if poss) during building

XAdd a border round all pages to display say 32 pixels overlap

/Try to give inverted element during build if put sigs/points/crossovers next to buffers

XNote:  Signals only become visible to a train when it enters the signal element, i.e. braking will not commence until this point
for a yellow or double yellow (or red, perish the thought!) signal.  So for realistic layouts need to put the signal
at the location on the layout corresponding to that at which it becomes visible in the real world, rather than at the position
corresponding to the signal's position in the real world. (duplicated in notes to user)

XConsider dropping ClearandRebuildRailway after create a route

XTry to drop ClearandRebuildRailway after set a new PrefDir & after select PrefDir start position & after cancel PrefDir start

/For route cancelling enable via a special button so can right click on train without
cancelling route, & if train anywhere on route ask if sure - use AllRoutes->TrackIsInARoute

/Use timetable entry as terminal or last station in list of stations to determine terminal status (so train doesn't try to restart)

/Disallow calling on if points set against entry into relevant platform

/For route buttons just use disabled rather than invisible

/Check all call-on signals for acceptable appearance

/Explain all the selection functions, esp wrt SelectBitmap, SelectPickedUp flag & SelectBitmapHLoc & NewSelectBitmapHLoc etc & the Xs & Ys
for movement.

/Allow a grid display during track build (use TCanvas::LineTo method, using Pen style for a dashed or dotted line & black colour)
this will avoid need for cut & paste, at least for the first release

/Derail if foul a wrongly set trailing point (but check if this really happens or can normally survive).
Have speeds depend on train type and track, so can derail if go over a turning point too fast etc.

/Change all TImages in GraphicForm to TBitmaps - very much quicker drawing.  Transparent & TransparentColor can remain the same

/Note that erasing & pasting (plotandadd) large selections with large railways, esp when have named elements, very slow - fixed,
was due to multiple checks + name selections

/When setting gaps need to set offsets to show the selected gap

/When click on ZoomOut it doesn't set correctly to normal view - should centralise the click point - due to rounding error, when negative need to subtract the rounding value not add it!

/V slow when pasting large areas, prob all the mapchecks in plot&add, try to reduce the number of these, maybe one after all plots

/Maybe try to plot track only in selection, so text not moved
/-->BUT - need a way to plot point fillets!!! (in MouseUp function)

/Find out why scroll bars appear as soon as mouse down after copy selected - the development panel extended too low & bars appeared
whenever development panel became visible
/Find out why sometimes after selecting Copy & click outside rectangle, won't move when later click inside rectangle (must have clicked
'cut' by mistake - easily done)

/Have striped graphics for unnamed locations to make easily visible.  If delete a name revert to striped

/For non-station names treat exactly as stations (inc Timetable name for assoc track), with stops if required & call ons.  BUT, don't link
to stations, just link to other non-station locations, otherwise can have train stopping at a non-station with no way to tell that
it's not at a station.  For both these and stations allow 'pass' times without stopping, & test for these when deciding whether to stop
(need to change AddName in TrackUnit to set timetable name for non-station location names as well as platforms. NB need to change
stopped message - 'Stopped at Location' more appropriate, also need to set stop points for locations as well as stations, though
maybe done for elements with TimetableName set in which case will be OK

/Ensure always have a Level2Mode set for every non-basic Level1, & that other Level2s are set to NoMode

/Check throughout all mode changes for dependence on a condition, and when that condition changes during operation make sure the mode
is set appropriately

XCalculate auto sig continuation time values eventually from actual train speed etc - or just use a fixed time for average block
passage time

XUse a formal iterator for TrainVector - perhaps not, would need too many changes

/When in operate mode maybe could plot trains (solid colour & full 8x4 size) & update periodically while selected via HiddenScreen so reflects movement

/In ZoomOut mode when left click on screen show the normal view that is closest to the arrow centre

/Can probably drop train checks in gap flashing as only displays in basic mode

/Drop 'Length' as a train paramenter, leave for later development

/Examine SetUserMode calls & avoid unless need to change the top screen - all usermodes changed

/If no preferred directions allow only NSR routes

/use overwrite prompt in save dialogue

/Ensure no ZoomOut button if no track, text not relevant here

/For later ModeControl if no PrefDirs defined no point in displaying any route buttons - have to be non-standard

/Add gapmarker in ZoomOutmode

/Consider whether need to allow clicking on concourses to set location name (to make the infopanel message simpler)

/Drop 'Save Failed' message if cancel save request

/Recalc HLocMin etc when erase an element or text (check if its values same as any limit first & if so recalc, maybe just those limits
that were equal - maybe map checks quicker than vector checks) OK - brute force recalc as checking for mins & maxs could be problematic
with having inactive & active vectors

XWhen erase anything check if screen completely blank & if so set for blank screen (maybe force a mode/stage reset) - takes care of itself

/Try to find out why all screen blinks if SetUserMode(SetAddTrackStage) present after have added a track element, only happens as
starkly as it does if Clearand... present in the SetUserMode function - odd! (& not due to the assign statement in Clearand... either)
- due to big screen update at end of SetUserMode, much better if update screen before call Clearand..., but cured completely if
don't call SetUserMode except when need to change the top screen

/Try longer points/routes times - say 5s for points & 2s for signals?  See ig more realistic

/Check route flashing when change between ZoomOut mode & normal during flashing, esp if move to OV mode after flashing starts
need to ensure train will respond to changed signal (still in OV mode) but that when revert to normal all buttons are
in appropriate state, since RevertToNormalRouteSelector() only called when not in OV mode & EnablePanelsRestoreMainMenuStates(),
which is called when revert to normal, doesn't make the same changes wrt buttons, only panels

/Check point flashing, should behave like route flashing when sorted (see above), at present if change a point in normal mode
but change to OV before changes it's likely that the point won't change (since disabled in OV mode even when times out)

/Need to show flashing gaps in ZoomOut mode (& drop the flashing when select any other mode of operation than basic)

/NOTE:  LockedRoute check in RouteLockingRequired sets buffers as locked route - need to change for operation
/NOTE:  No current stop at signals in UpdateTrain - need to change for operation (no, signals now checked in
TTrain::SetTrainMovementValues as may run past (SPAD) & still need to update

/Consider whether default track length should be 100m,
/Consider whether can allow <100m lengths, say to >=20m to be set
XConsider having defined train lengths, & how could work with platforms - train length later development

XMaybe have separate categories of lines - 3rd rail, 4th rail, 750v, 650v, 25kV, 6.25kV, non-electric, + corresponding types of train
(later)

XMaybe have 2 speedlimits, 1 for freight & 1 for passenger, + trains to be set accordingly (later)

XMaybe have named sections of track between points for unique identification for ARS, e.g. York South US, or,
ident automatically as track elements at each end (e.g. 14-N6:18-N8) but allow user to pick an alias.  Need to think about
how these will be used (maybe later on when develop ARS)

XSimSig has 5 categories of accel/brake rates - v low (slow freight); low (standard freight); medium (intercity);
high (commuter); & v high (light engine).  Best to allow user to pick own rates for each, or tie together since
both related to weight & performance, prob easiest to let user pick

XSimSig has 4 power types for Stafford - 3rd rail; 4th rail; overhead (25kv); & Diesel (i.e. non-electric)

XPerhaps eventually include position light signals for reversing at junctions [later]

/Eventually change all eXit names to Exit

/Have a separate image (HiddenScreen) for Clearand... to write to, then copy it whole to the display

/Make all speeds km/h & alter formuli to suit, change default speed limit to 200 km/h

/If no use for NonStationLocationNames just remove the element graphic, leave code as is

/Info panel caption becomes blank in PrefDirmode - prob due to clearing at clock update

/Test all track elements for smaller display appearance

/are 2 x //'s needed in LoadFromFile? - yes, because they are quoted special characters!

/Have a 'Home' button in view and ZoomOut to reset the original view, or the original ZoomOut (i.e. as was set when change from normal
to ZoomOut), so can relocate if get lost

/In ZoomOut show as much of railway as possible while including the normal view, but if can't show all make the normal view the centre
of the display unless there would be blank areas, in which case show more railway and don't have blank areas

/Load boundary arrows from file, as other bitmaps

/Remove all duplicate small graphics & set pointers for all individual small graphic names

/Only show boundary arrow buttons if stay within the railway boundaries, but also have a 'home' button to reset the offsets to 0

/When show incomplete element ensure visible on display & give warniong that may be behind the message

/Change boundary arrows round so reflect the viewpoint, not the screen

/Major changes still to do:
/1.  Timetable
X2.  Colour selector [Later Development]
/3.  Layout for ZoomOut
/4.  Automatic signals (+show automatic on layout using different colour marker)
/5.  Approach locking
/6.  Linking timetable to a valid track, but allowing track to be modified without necessarily invalidating timetable
/7.  Event logging for display, filing & maybe performance marking (give erroneous actions in bold, don't mark performance - let others do
that)
/8.  Signaller control of trains (signaller mode) - have a limited max speed - say 30km/h (as per ERTMS limit) == 8.333m/s or 18.75 mph
(BR-ATP uses 20mph so should be OK) + XAllow manual joining of trains for breakdown recovery purposes
/9.  Clearand... to use off-line drawing screen
/10.  Saving & loading a session (maybe save & load complete railway?) - have .trk files for railways in build - track & PrefDirs, where
can't operate, and convert to .rly files for operation, where can load timetables, operate & save sessions, but can't alter track or
PrefDirs without converting back to a .trk file first.

XIf train has to accelerate & brake within a single element give indicated movement as Slow Approach

/Get rid of all permanent train data members currently used for development purposes in floating label (just make temporary)

/For calling on signal, allow user to select only when (a) approaching train has stopped; b) train at station not facing
approaching train; c) at least 1 platform available for the approaching train; d) points (if any) set
for direct route into platform; e) approaching train is to stop at station; f) no more facing signals between train and
platform; and g) signal must be within 10 track elements of the stop platform

/After train passes a calling on signal it reverts to red as normal

/Called-on train stays stopped at station until there is a red signal between it and the train in front

XMaybe have a train background colour for awaiting clear route to a red signal behind a preceding train? - No, see below

/In status display give reason for being stopped, then not as many background colours needed

/Test CallingOn for all conditions

/Trains available for call on should have a distinctive background colour

XIf allow colour changing need to fix calling on colour as white, not background colour as at present

/For station stops, examine all timetable for the train, not just the next station, but if skip a station log it and delete it
when the station that is stopped at is deleted (i.e. delete all in timetable up to & including the station now stopped at).

XConsider how to allow user to set position of arrival at a platform (maybe specify element ID of front of train, used if
reaches station at that platform, but uses default if arrives at a different platform - but still counts as arrived OK)
[Later development]

/When stopped at a station (or anywhere else for that matter0 don't let a train start if there's a train immediately in front

/Allow trains to be plotted stopped at a signal

/Update save, load & check for StationStop positions

/For terminal station set free end as stop element for arriving trains away from buffers - to allow for arrival via points

/Need to stop train 'trying to proceed past buffers' when in a terminal station - use last entry in timetable as termination
station, whether or not at buffers, and also a terminal station, whether or not last entry in timetable.

XLog any speedlimit excesses, but allow ~ 5m/s leeway - maybe caused by starting speed too high - though probably best
to limit this during start calcs if possible - yes this allowed for in PlotStartPosition function

/When plot train check SPADFlag & set background if so

/Sort out the 'while' loop for excess initial train speeds

/When train stops at station the 3rd element doesn't get the green background colour, but gets the pink colour prior to moving off,
but when moves off it keeps the pink background colour. (was due to 'x' values being different in the loop, one for GrPtrs &
other for Plotting)

/Include appropriate SetTrainMovementValues for initial starting + starting after station & signal stops

/Check train behaviour for exiting at continuations, and stopping & restarting after signals & stations

/Add floating info box for trains

/Amend replotting of trains during clearand... when entering or leaving a continuation when nonly part of train visible

/Consider making all default lengths 100m, but allow user to set lengths shorter if wishes, with min of 20m

XShould have shorter lengths for diagonal crossovers as for points & ordinary crossovers

/Adjust clock frequency so that short train movements evenly spaced, i.e. clock frequ fast cf movement intervals

/Check single buffer platform for train stop
/Check moving down to buffers in terminal station

XNB At KC the footbridges not directly attached to platforms don't have location names - should they have?

/Need to deal with locking end element(s) of a route then locking earlier elements - prevent somehow, unless can't
happen without the test mode set up (?)

/Test train entering an existing route on a crossover from non-route direction - should cancel

/In all modes trains ONLY respond to signals & station stops - i.e as driver would - don't stop at end of a route without
a signal or station.  Routes just set the points (& signals) as required, they don't stop trains.
Trains run on after a set route in absence of a red signal, & points are set as for the last route or at random (set when
application opens).

XNote to user:  When using ConsecSignalsRoute, if selecting routes where first element in an existing route is a
signal, and start before the route, then can select any valid signal or buffer/continuation in the route and
it will be accepted and the route extended.

/Will need to add a signal check & function to pick up diff coloured signals in opposite direction of travel
during train movement, in same direction need to change to red & attribute to be reset

/Allow autosig routes only for preferred routes & consec signals, & keep flag with the route, test when train
leaves the Lag element (or earlier) & deal with appropriately + allow automatic & manual routes to be combined as
single routes so setting easier, but deal with differently

/For autosig routes, when train leaves LagElement (or earlier) check & reset all signals for the route

XMake sure a train can't be stopped at a station or signal (& preferably anytime) while straddling 3 elements, as
can then select route start & half a route element would show behind the train - not valid now that can't start a route
on a train

/Change route selection - default = non-autosig consecsigs, 3 buttons for (a) autosig; (b) non-auto, nonpref & non consecsigs; (c) normal.
When press button just affects the next route, then reverts to default after route created.  Or can revert to default anytime by
pressing normal route button

/NB:  For non-autosigs routes, when train fully on 2 elements then both removed from route & hence no locked route - only remove
LeadElement if buffers

/In truncating routes where remove several elements don't use position in routevector as trains may have removed elements from the
front.  Instead work back to a TrackVectorPosition - as in InterfaceUnit line 1520 et seq. (/ForceCancelRoute, /GetRouteTruncateElement,
& /ClearRouteDuringRouteBuildingAt + check for any others.  Develop a separate function that can call in each function. No - just stop the clock for
any route removal function before set the truncate point until after finished truncating.

/Consider whether should have a locked route vector so can have several locked routes at same time - do after other major parts done

/Use a red square for route start element then not same colour as specific route

/Test > 1 continuation exit

/Check why train replots marker at first route position in KC with bridge, but doesn't plot the route colour for a non-autosig route

/Test locked marker for train using bridge with same track on both bridge tracks

/Add locked marker to plotting of signals in train unit (facing & back)

/Approach locking:
(a) Ideal:
Check for a train anywhere in any linked rear routes behind the truncate position & lock sufficient of the
route(s) to include 3 signals in front of the train (lock all the route(s) if not enough signals) for a period of time.  All signals in
front of the truncate point and the first one behind it become red, with others in rear set accordingly.  The locked section flashes
using RouteFlash for the lock period before being cancelled.  Hence no locking occurs if the signal in front of a train changes
from green to double yellow, but if the signal in front of a train changes from green to any other aspect, or from any other aspect to
a more restrictive aspect, then the route is locked.
(b) Practical - Use this:
Check for a train anywhere within 3 signals in rear of the truncate point, and if so lock all the forward route for the time period.
Again all signals within the route that are in front of the truncate point, and the first one behind it, become red, with others in
rear set accordingly.  The locked section is marked with an ellipse at the truncate point.

/Provide full explanations for all route setting, rear signal setting, forward signal attribute finding,
continuation & route truncate behaviour etc etc as may well be future problems & need as sound a base as possible for solving them.
Explain why each special (i.e. included to solve a discovered problem) function segment is present and the problems that arise if
they aren't included.  Also test again with several trains all following each other along a single autosig route - this will test the
new recursive SetAllRearwardsSignals function.

/Problem:  When add an autosig route between 2 autosig routes where a non-autosig route was, after a train has
passed the non-autosig route, the rear signals aren't set properly (doesn't seem to find proper forward signal value),
but when the train passes an other-direction signal all become OK

/Think about trains running against existing routes, need signals to behave as would the track circuits - i.e. if a train
ahead of a signal then would be red & rearwards signals set accordingly.  So, once passed the outer red (opposing) signal,
or entered an opposing continuation, the opposing route signals are reset backwards, should be able to use existing
SetAllRearwardsSignals function for the route concerned.  Also appropriate for the train to remove the route elements from the front
for non-autosigs.  Test for both non-autosigs & autosigs.  OK - set all signals in route whatever direction they face to red,
then cancel the route, then set all rearwards signals for linked rear routes starting with a red signal an end of nearest rear
linked route.

/Don't allow autosigs routes into buffers else can't cancel them to allow train out - can allow out of buffers though would need
to be cancelled after train gone to let another in, but then just a user problem not a system problem & can solve easily. 

/If during route flashing a train lands on the route, cancel it - stops the risk of a train moving so fast as to
go past the early elements in a new route leaving them stranded when elements are removed by the train itself.

/Need to set signals for autosig routes after train has left a continuation, say at minute (check reasonable time) intervals -
on WCML average block (signal) spacing is 0.75miles = 1200m, so use time interval determined from last train speed &
assumes continues at that speed, & distance from the last signal.  Have a new container, consisting of RouteNumber,
TrainID (or speed, or time interval between signal changes), & time of passing out of continuation - add to container when
TrainGone set.  Access it at every clock tick, BUT if another train exits a continuation before an earlier timeout has completed,
overwrite the earlier list entry with the later one, i.e. can only have one entry per route at a time.  Then when access, at each
required signal change call a new function to renew the signal settings, and delete the entry when all done, i.e. after 3 resettings.
Create the container in the InterfaceUnit, and pass a pointer to it in when call TrainController->Operate, for use during Train->Update

/Major route simplification:

/(a) Only permit routes to start on a blank valid element or on last element of an existing route,
only allow routes to end on a blank valid element or on first element of an existing route.  If add to an existing non-autosig
route by another non-autosig route then extend the one route, same for autosig/autosig routes, but if add to an autosig route
by a non-autosig route, or vice versa, then keep the inclusive signal to signal segement(s) as a single autosig route, but make the
non-autosig part(s) (excluding the signals) separate routes, with their own entry in the AllRoutesVector.  In this way when a train
runs off the end of an autosig route and removes elements from the non-autosig route, this is OK because it is removing elements
consecutively from the back of the non-autosig route without affecting the autosig part.

/(b) Also, when a route is completed, set the signals (SetRouteSignalsAndPoints) for the new route - AND all the linked routes behind it up
to a train - taking the attribute of the first signal before a train further forward if there is a linked front route, or the first signal
before a train in the new route if there isn't a forward linked route.

/(c) Also when signals are set by a train moving past a signal (SetTrailingSignalsOnAutoSigsRoute), signals in all linked routes
behind it are updated.  Note that this allows linked separate routes of alternating autosig and non-autosig segments of any number.

/(d) similarly for SetTrailingSignalsOnContinuationRoute

/(e) Don't permit truncating of routes through linked routes - have to erase each segment in turn - i.e. don't permit truncation of a
route if there is a linked forward route - think this is OK, only truncates own route & can't truncate an autosig route part way
along even if flags set for non-autosig & not consec signals

/(f) When erase a route reset all trailing signals to correct values, including through linked rear routes if present

/(g) Don't allow route truncating through a train

/Think about all the various route linkages - at end, within, adj end, adj start etc, maybe simplify & make more rigid but
allowing all types of route to be created.

/If erase an autosig route that ends in a continuation erase also the entry in AutoSigVector if it exists

XBetter if when PlotSignal, just overplot the aspect so don't need to replot the route colour & can prob dispense with
Clearandrebuildrailway when complete a route - no, covered by replotting the route graphics in SetRearwardsSignals

/Remove TrainID input to SetTrailingSignalsOnAutoSigsRoute

/Problem:  If erase autosig route ending at continuation  & have linked rear routes, doesn't set rear sigs properly
because the attribute is set to 3 due to the continuation, prob same for non-autosig route at continuation &
prob same for buffers too - even worse with non-autosig at end, even last signal on autosig route stays green!

/Need to set signals on AutoSig routes after train passes each signal

/Need to replot a train that is on a bridge on an autosig route after a train on other track has passed & updated the route
on the opposite track (or just don't plot the updated route on other track - no, other train may be only partly on the bridge.

/Test trains on bridges for correct route identification in SetTrailingSignalsOnAutoSigsRoute & SetRouteSignalsAndPoints

/When cancel a route reset signals from end of reduced route

/For signals & points, just replot exactly as per attributes in ClearandRebuildRailway, but set attributes in a new or extended
route from end of route backwards unless reach a train in which case return (that train will deal with its trailing signals
when it updates.

/Prevent 2 signals together in same direction, else fail the 'next signal' check if select signal adjacent to the
following one in an existing route

/Test for autoSigs routes on both bridge tracks & trains going over, autosig & notautosig tracks & etc for all combinations

/Need to add in the direction pointers at start & end of AutoSig routes
/Need to keep autosig graphic for signals after return to red
/Need to allow cancelling of autosig routes,

/Check whether advisable to allow a route to start on a train in any circumstances.  Would be easier to prevent all.  If so,
just allow to start on train stopped at signals or in station, or maybe just at signals.  Probably better not at all, because if
start on a train in wrong direction, have to cancel at the start position (which can't be seen) to replot in correct
direction.

/For a train stopped in a station when select route start, allow it to begin to move normally & ensure it cancels the start
selection, then no need for ClearAllTrainsDelayedAtRouteStartElement(), DelayedAtRouteStartElement, & to have timer to clear
after a few seconds if route not completed

/Check that train is moving when on a route start element, currently can't select stopped trains

/If plot route starting on a train & train moves before complete it, will show the train element(s) until the
next ClearandRebuilRailway, which is when the route is completed.  Better if can just replot the track & text for
the relevant element.  Or, if train present at selected element, momentarily unplot the train while the original
graphic is loaded, then replot it.  Solution: Disallow route start on a moving train, and don't allow train to move until
route completed.

/If plot route on train & train moves well off it before complete route, the route will still show behind the train - maybe cancel
the start element if the train that it is on moves, & advise user that this will happen.  Above solution covers.

/If plot route starting half an element behind a train, will be left with half a route element showing at that position
until next ClearandRebuilRailway, even if train doesn't move before complete it - maybe don't allow selection of
back element of train when half off the track element.  Above solution covers, since train can only stop when fully on an element.

/If train enters a route start element cancel the start selection

/If train enters a flashing route & still flashing behind train, route stays set - check for train entering a flashing route
& cancel it

/Similarly if train enters a flashing point, either selected or diverging, cancel the flashing

/Don't allow points to change under a train, i.e if train present on element at any time that it is flashing cancel the
change.

XWhen select route start element, don't allow to keep it indefinitely as train can't move if present, time out after say 10 secs

/Consider making explicit check whether TrackFinished after loading, rather than just trusting the initial flag

/Have extra check in .....At(...) for position being -1, & give message if so.  Use everywhere where an .size()
function is used

/Check each type of crossover float label for correct track indications - both tracks always 20m so OK

XWarn during build of buffers/continuation next to points/crossover/signals but leave check in LinkTrack

/Display total length for selection, & speed limit if all same, or 'Mixed' if different.  Consider whether need to ignore these
values (as for CR as was) - will need to ignore 'mixed', but the overall length would just recalculate

/Don't allow operation until all distances & speed limits set, though can allow PrefDir build, though consider default
track lengths & speed limits, so don't have to set longhand if don't want to - then the marker will only apply if
values different from default, then shouldn't need DistancesSet flag - think about. 2.5miles (4km) from KC to Finsbury Park,
so 46 elements (mid stn to mid stn) = 4km, & 11 points included, so point length = 220m, leaving 35 elements for 3780m,
so say 100m each.  screen is 60 elements wide, = 6km (3.75m) per screen width. This about same as KC Demo & about double
both SimSig & PCRail - they are about 1.5 screens for KC to FP.  Hence 100m should be OK.  Also have a default speed limit
of 56m/s, corresp to 200km/h, = 125mph

/As is can change point & crossover lengths - keep at 20m

/Finish SetLengths() properly.

/Have unchangeable length of 20m for any element adjacent to points or crossover (easier for train timing); when building track
check if element next to p/c & set accordingly, also during restore selection or restore all.  Also don't allow other elements
to be less than 100m, again easier & no need anyway.

/100km/h no good as default!!  Make 56m/s, corresp to 200km/h, = 125mph

/Need 'Restore all defaults' to show up before make a selection

/Get rid of floating label when make a selection & length panel shows

/Check why floating label now persists with default message additions when didn't before

XMaybe make NamedLocations invisible during operation - only needed for distance plotting & may need a lot
of intermediate locations for accuracy

XCheck whether all the gl graphics in GraphicForm serve any purpose - now that they are loaded directly from file by the InterfaceUnit - only
loaded for glyphs, but many used as graphics in their own right.  Probably not worth dispensing with those that are duplicates.

XFor speed restrictions, use similar function to PrefDir setting - set a whole lot of sections then set speed restriction for them all,
and change colour of the set elements.  Keep as a data member for each element

/Use SetLengths() to check & set DistancesSet flag - don't set it anywhere else except on loading a completed railway, - no, check & set on
track exit or cancel, after have been in length setting mode (use a flag).

/For lengths ensure show both tracks for points when linked

/Include lengths & speed limits in loading & saving, and set DistancesSet flag if all set after load

XUse system like LengthAlreadySet in other searches to give message of reason for failure

XMaybe display all track sections in turn, from each buffer or continuation to next (excluded) point or through named location,
or (included) buffer/continuation/terminal named location; & from each (excluded) point/through named location to
next (excluded) point/named location, or (included) buffer/continuation/terminal named location.  Request distance
(also allow to change - always start with unset ones & allow to accept all, but work through all if don't accept),
then divide it into each element equally.  For points, crossovers & bridges have 2 segments with different
lengths, & work in metres.  When both sides of points & through named locations set, set these elements to the mean of those
adjoining.  If stop at any point can resume where
left off, as program will know which elements have lengths set and which not.  Don't permit to go to operation until all set,
though can set PrefDirs.  Also don't permit distance setting until TrackOK.  Have a flag for DistancesSet, & when any active track
erased or modified reset it, and also reset all element distances within that section, including end points and named locations.
Have button on TrackBuild panel for this operation - Set/Change Distances
Build into Load/Save functions, maybe don't load the DistancesSet flag, but set this if all elements seen to have lengths set.  Tie
in with speed restrictions if possible.
Maybe allow user to select the starting & finishing points for each distance, disallow points except at starts & ends, allow to
cancel individual sections & change colour when set, so can see which done and which not.  Use similar function to PrefDir setting.
Points & crossovers always 20m, so required distance split between other elements.  Bridges have 2 distances for the 2 tracks.  Allow
crossovers within distance sections, but only count as 20m, don't allow points within sections.  Allow end element to be same as start
element, & always include both start & end in distance to be set (unless points/crossovers).

XIn setting distances allow half of the FROM and TO locations (however long) in the distance when they are continuous,
and allow all if terminate (buffer or continuation - not gap)

XMaybe drop the blhc pixel in glyphs so have a white background to track elements, then can dispense with a lot of
bitmaps - no, just makes black the transparent colour so the track appears grey on white on the glyph

/Can drop all the 'false' entries in platallowed function, just ensure start with platallowed = false

__________________________________________________________________________________________________
'35 opened after all maps & basic train movement worked out

XAdd exit PrefDir pointer for leading entry points, or, for points put pointer on tail whether entry or exit - NO, no need,
since can't end a PrefDir on points just look at the elements adjoining the two tails, one or both will have an entry
marker and that shows there is a PrefDir

/Include StationName & TimetableName in save & load functions

/Note that using '&' in station names causes an underline in panel captions, need to add an extra '&' for use in the caption

XKeep station name as entered, but make case insensitive for comparison - no, search too complex

/add explanations for new name multimap functions

/Have a StationName map for easy finding of elements with names, to dispense with brute force searches of
active & inactive track vectors

XConsider making the maps contain element pointers rather than vector positions - not likely given iterator problems!

/Note:  Can't rely on retaining position in memory of vector elements, either by direct memory reference or by use of
iterators, when elements being actively manipulated - so use position rather that TTrackElement*
in name map, done map & pending list, + alter (as for multimaps) when elements erased & when track linked

/Error - why when erase an element from KC after named, does !ElementInSNDone2MultiMap return true? since
all remaining station elements are in contact - because of vector iterators not persisting after active vector
manipulation

/ErrorInTrackBeforeSetGaps is a double brute force search, try to speed up or dispense with if poss - is it needed?

/Get rid of all global variables in class headers - from probs with InactiveTrackMapPair

/Remember to delete all other similar station names - make case insensitive

/Change gap flashing - only any good if other gap on same screen.  Maybe have click-on-gap highlight the other gap

/Stop gap flashing when 'all gaps set' message on, else corrupts the display

/Add explanations for all station name functions - next

/Still to check all entries in detail in EnterStationName

XMaybe drop the remapping of TrackVectorPositions, just keep the original order.  Note that whenever
change track vector positions need to change train positions, also if reposition the display will also
need to change the train positions

/Consider making startselect, requpos etc numbers TOneRoute members rather than TAllRoutes members

/Consider whether when train stops permanently need to erase the remaining route that it stands on

/Add graphic masking for signals and point fillets, where only add white non-transparent rectangle where the old
non-transparent graphic pixels were, so text can still show as much as possible. Calculate rectangle size &
offsets from mask, then use CopyRect as in PickUpBackgroundBitmap

XOnly need to SetTrainElementIDs when array position == 0

XDrop direction indicator on train, the route indicates this & if no route plotted then
no direction set.

/IMPORTANT:  Don't let any containers (vectors etc) call any destructors that delete their elements, since they copy and
erase elements in the normal course of memory expansion and other actions.  This currently includes TextItems & Trains.

/NB: still have to test the TrainID on bridge additions in TTrain in order to 1) allow routes to be set through
bridges with trains on other track; 2) erase only the required track ID when a train leaves a bridge; 3) still to add - when set
a route through a bridge with a train on other track need the bridge route element to show as a route when the train on
the other track has gone.

/Check all types of bridge for retaining other track route, with and without other track routes
/+ replot other track routes in crossovers as train may not be on a route

XConsider just using maps & multimaps for track, PrefDirs etc, rather than vectors, though may still be useful to
use searchvectors - much too embedded!

/Consider changing the FouledDiagonal function to use the map

/Check if TrainOnElement could foul a bridge - may need a more precise mechanism for double tracks on one element
__________________________________________________________________________________________________
'34 opened for new 256 colour graphics that are set to transparent & transparent colour to white
on loading (except blank element), & all work OK.  No graphics now directly on the GraphicForm

/Complete remaining PrefDirmap changes such that use PrefDirmap.find rather than full PrefDir searches

XAdd clearroute into removerouteelement for if removed element is last in a route, and drop from truncate route function

/Combine inserts & erases for routes into single functions

/Check if still need ELink in routemap insert

/Prevent selection of a bridge as a route truncate element

/Error when have bridge with 2 routes & try to erase one route - also when try to erase any route!

/When call PrepareToOperate reset NextTrainID to 0

/Test train bridge crossings with different parts of train on bridge to check Lead, Mid & Lag elements

/At present trains crash if cross on a bridge, need to detect on different tracks & OK to cross

/Finish all full Route searches -> map searches

/NB: Can have 2 max route elements at a given H & V, for bridges, at present only have one, so a failure occurs when 2 routes cross on a bridge.

/Change name of RouteMap to Route2MultiMap, + all similar names

/Separate StorePrefDirElement & StoreRouteElement, currently both use StoreElement & invoke PrefDir4MultiMap
/Check private members not inherited - how does StoreElement in route access PrefDir map?

/Error - when amalgamate 2 routes (& can be any 2 route numbers), all routenumber values in RouteMap beyond the
erased routenumber are too high by 1/

/Note: other simulations don't have a delay in setting points.  KCDemo is delayed while user selects manual
or auto, but no longer.  Maybe just have ~ 1.5 sec delay for points & 0.5 for signals.

/Don't use clearandrebuild for unplotting a square marker for routes - deal with similarly to marker for
points

/Disallow any route that reaches a Train or starts on a train

/Try to keep all map & vector operations together for creating & erasing track, gaps & route (maps),
and inactivetrack (multimap)

/If EveryPrefDir empty disable all route options & only allow NonPreferred

/Change SearchForPreferredRoute & Nonpreferred where check for having found an existing route element to use
the routemap

/Currently working on 'Crashed'

/Don't mark a route over a train

/Remember to erase elements from RouteMap when train passes over

Need to delete trains after exiting a continuation

/Remember to erase elements from RouteMap when carry out GetRouteTruncateElement

/Remember to erase all RouteMap when exit operation

/Check that ~TTrain is called when a vector element is erased - i.e. when goes out of continuation

/If derail on a changing point then train disappears after new position plotted

/On tight corners some of train graphic gets left behind - OK now pickup track element & fillet if there is one

/No need for FixedTrackArray to be created on heap when Track on heap anyway, also no need for
all FixedTrackPieces to be created on heap

/Have different route selection time delays for no signals or points (immediate), signals only (1.5 sec),
or points, whether or not with signals (4 secs).

Xdon't allow platforms adjacent to gaps else will need to plot them too

/Problems:
1.  When remove 2x bridges & replace them with same or opposite orientation bridges lose PrefDir
for 2 extra elements on rhs
2.  When reinstate PrefDirs & remove again, & add in new track elements then try to connect, have access error
When only had small PrefDir - 26 elements across bridges, & erased then set PrefDir in opposite direction where
had blank PrefDir elements, then got error

/In PrefDir mode have default situation to create a new PrefDir, without having to click a button,
whenever finished an existing PrefDir or enter function from outside

/Make all bitmaps 256 colours, then can allow users to change all colours to suit themselves, + save colors when save
railway

/Maybe have a flashing marker for selected route start elements - use steady rectangle at start of
route selection and flash both for a time interval prior to points & signals changing to simulate
time taken for points & signals to change & be notified as changed back at control room.
Apply same time interval & flashing rectangle - diff colour - for manual points changes.

XNote to user, text obscures anything behind it, so position it appropriately - plot text first, then OK

/If change points check if diverging link connected to a complementary point diverging link,
& if so change both points together - but check if either in a route & if so disallow (maybe give message
if select the non-route point).

XRemember to add in the display offsets when fixed Flash graphics - maybe use functions for this duty instead
of having odd offsets in the code

/Problem:  Seem to have end and start elements both stored in routes when extend an existing route
using NonPreferred routes.  Signals that should be yellow (last position of earlier route) are checked
twice in succession and therefore changed to double yellow.  OK, only called preferred convert at end
of flash period, when used another flag to call NonPreferred convert then OK.

/Problem:  Signals now show double yellow behind other colours, prob need to plot a blank for all signals before
replotting a new colour.  But why don't point fillets overlay?  Because clear all before rebuild anything,
but set signals then call rebuildtrack again, without clearing all, hence signals overlay but not points.
Plot blank first, then should be OK.  No, just set signals (and points) after clear all but before rebuild
anything, then can rebuildtrack either side of rebuildtext, to prevent flicker & ensure signals set as should be.

/Move flash route classes to PrefDirunit

/Update descriptions for route functions wrt flashing

XSetRouteFlashElements() to be included in SetRouteSearchVectorGraphics() when route flash classes
& functions moved to PrefDirUnit

/Remove friend class TInterface; from TPrefDirElement when route flash classes & functions moved to
PrefDirUnit

/Error - used FlashGraphic to store replotted original track & platforms, but offset platform
doesn't work as plotted on 16x16 canvas.  Also wouldn't pick up route or PrefDir, so revert to
original
For flashtimer need to pick up the original graphic then replot it, to cover routes, PrefDirs etc
- use CopyRect & store in a 'new' TBitmap belonging to InterfaceUnit

/Use a multimap for the inactive elements, then can plot & replot easily just from the map rather than having
to search the whole vector.  No need ever to change the vector positions as they aren't needed for anything.

/Need to test every type of linked point + several with diverging connections that aren't linked

/Allow user to select text grid size to help with alignment

/Don't display connecting gaps when route plotting - decide whether this needed or not

/Have to change TMap since VLoc & HLoc can be negative, so can't use unsigned ints - use a pair
of ints for HLoc & VLoc for the key

/if(TrackMap.erase((VLocInput*100000)+HLocInput) == 0) in EraseTrackElement is wrong - doesn't return a
value

XUse TrackVectorReverseIterator for working backwards through vector, then can use != for the for... test, also
use this test for forwards iteration - no, erase needs a forward iterator, and if use iterator.base() odd things
happen - not worth effort of sorting out

/Display text below track so doesn't obscure

/Probs: (1) When apply an erase, many existing elements
also erased (only from screen, not from vector or map).  Also if reload then same elements still not
displayed, until reload the programme.  Also can't position any elements over places where erased elements
were, & can't position any of the erased type of element anywhere.  If move layout then makes a difference but
still can't always position elements anywhere, and the erased type won't go anywhere.

/Applies with right mouse click anywhere in add/change track, or when exit from this mode without doing
anything

/It's to do with the TrackElementPanel being displayed in AddTrackStage, though no error until
either right mouse click or exit

/If set TrackElementPanel to false immed after setting it to true then OK

/I think it's becasue trackelementpanel uses glyphs, which just use an = assignment to the graphicform
bitmaps, so now 2 pointers to same bitmap.  Prob better to load from file directly, so if delete after
panel made not visible then the graphicform bitmaps aren't affected.
OK - loading glyph from file seems to have sorted it

/(2) Invert doesn't seem to work with bmWhite transparent - OK with it opaque

/(3) Need to change save arrangment to stop erase elements being saved in map for unbuilt track, currently
the VLoc will be saved in map as -1000000 * 100000 as unsigned int, and HLoc as -1000000 also as unsigned int.

/(4) Need to delete all the new graphics when GraphicForm itself deleted

/(5) Remove defaulttrackelement from erase track in inactivevector search, as it isn't used

XCan probably dispense with GraphicForm as a C++Builder created form, just use an ordinary unit,
GraphicUnit.  NO - TImage needs an owner, & this probably needs to be a form so leave as is for
simplicity.

/Allow platforms alongside arrowed track

/Find a way of linking HLoc/VLoc directly to TrackVectorPosition & PrefDir positions, to avoid time delays in serial searches

__________________________________________________________________________________________________
'33 opened prior to train movement development

XDon't need ValidatePrefDir and CheckPrefDirOK, combine into one.

/Drop PrefDirelement End & Overlap

XFor release version add in if(pointer != 0) delete .... in all but application exit cleanups,
but NOT BEFORE release so that any errors show up.

XHad an out of range error with wavyrailway & I think using nonpreferred & no signal routes,
but couldn't repeat, kept checking, including ConsecSigs & Preferred, & with automatic high speed
checker, but not found. Have to drop & see if reappears later.

/Note: If last entered element in EveryPrefDir is a gapJump then it is displayed during PrefDirMarker

/Use properly defined iterators for all vectors (TPrefDirVector, TAllRoutesVector, TTrackVector
& TTextVector), not just pointers to contents

/NB - 18/07/08 - can't enter a track element at a loc where there is a blank element!!

/Changed bitmap names from '32 version to drop the 'rev' bit for modified point infills, & deleted
original (error) versions.

/Added in all outstanding jobs from '32

/Changed TrackVectorPtr to Trackvector
__________________________________________________________________________________________________
'32 opened after all route setting functions coded but before any tidying up done.  Main job here
is to tidy all code, make it consistent & add descriptions for each function.

Added in all outstanding jobs from '31

/Offer option to delete all PrefDirs in PrefDir build mode

/Have route markers just apply to start and end

/Try to speed up PrefDir display, ~3 secs for 1 screenful in KCPrefDirs

/Dont need AllRoutesVector on heap, since the object to which it belongs is already on the heap

/For each of existing preferred route functions set out what they do in detail in English, then select the relevant elements
from each needed for the new non-preferred functions

/Also need to allow buffers & continuations as valid elements when using ConsecSignalsRoute (check
behaviour of other programs)

/In PreferredRoute mode, can't start with buffers or continuation, probably should be able to

/Get rid of HPos() etc in TextUnit

/Get rid of vector as a pointer in TextHandler, use actual vector

/Need to change TextItem to include a font (not just a font pointer), instead of the separate elements of the font,
just use these for saving & loading, and pass this font to Display->TextOut.  Otherwise all fonts on
display are the same.

/Try to add style to fonts, will need a 0-15 integer since style uses 'Set'

/Allow right click to erase a start route element, so truncate consistent (i.e. not just left click)

/Need to allow to operate railway without any PrefDirs set

/Drop PrefDir colour from PrefDirmarker

XTry to get rid of Speedtag - just use configs etc if poss

XDrop  Size() etc where just invoke another function. No, used in other units that don't have access to vectors

/Try to allow different font colours if possible

/Drop option to use signals only for non-preferred routes, but keep both options for preferred routes

/Remove 'same Elink' condition for Preferred search, as for NonPreferred search

/drop 'if(PrefDirVector.size() != 0) PrefDirVector.clear();' just use 'PrefDirVector.clear(); Also drop 'ClearPrefDir()' No, ClearPrefDir used in InterfaceUnit

/Try to remember why SetUserMode(SetAddTrackDescriptionStage) was in ClearandRebuildRailway, causes an
endless loop as SetUserMode itself calls ClearandRebuildRailway, & seems OK without it

/get rid of all ELink() etc data change functions, mainly used on own classes, and external classes
shouldn't have knowledge of other class' data - if used try to find a better way of accessing than
indirectly changing data.  Maybe make TOnePrefDir & TOneRoute friends of TPrefDirElement, since they need regular access
to the data, having a vector made up of PrefDir elements.  Also TTrack as friend of TTrackElement

/Drop AllRoutes as friend of TPrefDirElement, move all required accesses into TRoute

/Error - routes don't move when display does.  Need to build function for use in MouseUp where reset all
Hs & Vs for all routes.
__________________________________________________________________________________________________
'31 opened 15/05/08 for major change to PrefDirs & routes, where PrefDirs recorded as additions to the track vector, & routes
found using original PrefDir search function, but with additional checks to ensure don't overlap another (or own)
route, and to keep searching if a non-PrefDir element found.

/@14/06/08 still to amend descriptions for functions using ConsecSignalsRoute

/On nonpreferred routes seem to have extra elements in routevector at signals (& prob elsewhere) as
have double yellow signals next to red, and if step through find the double yellow element
treated as 2 consecutive route elements, so must be in twice

/@ 13/06/08:  Still to enter all descriptions for nonpreferred routes - start, next, search & convert
Then to add consecutive signals as option for both preferred & nonpreferred

/Route Setting:

/Have rh button to truncate a route to before the selected point (similar to PrefDirs)

/Have preferred-PrefDir route by default, with buttons for automatic route or any-PrefDir route,
plus buttons to set default to any-PrefDir - prob don't need default automatic.

/For non-preferred routes, behave as preferred wrt selections - i.e. start in or adjacent to an existing
route then use end of route, but if reselect start element then cancel it.  Second selection always ends
the route (doesn't necessarily in PrefDir selection), and if second selection is in or adjacent to a route
then link to that route.  Same restrictions apply wrt selecting between two routes etc & not allowed to
interfere with an existing route.  Need to change code as currently rely on being on a PrefDir, also need to
build a new PrefDir (which is what a route is) from scratch, so need checkcount & validate as for PrefDir building.
Hence need to combine the logic of the two sets of functions - preferred route building & PrefDir building.

/Also have signal control and not, available, for more accurate PSB working, here allow control also to buffers
& continuations - buffer acts as a red signal, such that earlier one is yellow, but continuations have all
green signals preceding them.

/Maybe increase gap size in large radius curve points eventually to make route clearer

/try to find out why route displays twice on selecting next element - because was called in SetAllSignalsAndPoints
then again at end of ClearandRebuildRailway.  Dropped in SetAllSig.....

/Drop PrefDirToBeMarked eventually, just apply on required PrefDir

X Try to indicate why a route failed, may need to make 2 passes of SearchForRoute, first to see if successful
& accept that, next to indicate why unsuccessful, maybe with prioritised messages, basic = route not available, then
route would need to cross non-PrefDir element(s), then route fouls another route (or similar)
No - too complicated, have several calls to SearchForRoute in GetNextRouteElement where the later ones depend on
failures in earlier ones, so would need to compare messages between the two, also the need for 2 passes is complicated in these
circumstances
Explain to user how can determine if a route has failed if reason not given

/Eventually get rid of 'Load failed' message when cancel a load

/Eventually don't allow buffers next to crossover, same reason as for points

/Try to allow a route to couple up to a route in front, providing ELink & Conn match, even for selecting 1 short of front route.
/Disallow any route that would be adjacent to an existing route, so always a gap of at least 1 between non-coupled routes
/Keep ConstructPrefDir for when building a PrefDir, but consolidate into a single 'EveryPrefDir'

/If exit plat 1 KC to gasworks & enter plat 2 from part way up 3rd diag line in the 1st point has both exits marked

/When select route element adjacent to end of existing route it doesn't display

/No, need to keep separate PrefDir database, since can have 4 separate PrefDirs through a single track element, each with
own ELink & XLink & associated Pos's.  Very difficult to represent this in the trackvector.  Hence keep a PrefDirvector,
but make it a single vector with all the PrefDir elements in it.  No need to worry about which follows which, that
will be implicit in the relevant TrackVectorPos's & ELinks, XLinks etc.

/Check if use SelectedRouteElementNumber, may be able to dispense with it
__________________________________________________________________________________________________
'30 opened prior to changing PrefDir functions to avoid overlapping PrefDirs except at start & end, and dispensing
with Loop option.  Includes Route functions.

PROBLEM: for bidirectional looped PrefDirs the route only selects a single direction.  Need to force a route
direction when select an adjacent element.  Leave as changing all PrefDir and route functions, but if have to
revert to this code then need to correct.

Allow platforms alongside arrowed track

Make all comments consistent eventually, suggest all start at beginning of own line under the relevant code line,
or, if general separate from code by spaces

Make all bitmaps 256 colours, then can allow users to change all colours to suit themselves

In all modes trains ONLY respond to signals & station stops - i.e as driver would - don't stop at end of a route without
a signal or station.  Routes just set the points (& signals) as required, they don't stop trains.
Trains run on after a set route in absence of a red signal, & points are set as for the last route or at random (set when
application opens).  Derail if foul a wrongly set trailing point (but check if this really happens or can normally survive).
Have speeds depend on train type and track, so can derail if go over a turning point too fast etc.

/Need a way to show how points are set.  Initially set to straight, then stay set as route until resent by another route.

/Have unsafe mode such that don't plot PrefDirs, but use PrefDir functions to plot routes, so no holds barred.  In this mode
the routes (PrefDirs) don't persist, but are shortened from the rear as trains progress.  Prob no need to
consolidate & split, or perhaps can still consolidate but not split - no, don't do either, as need routes to be able
to cross each other, even when they share one or more elements.  Then can simplify the Route functions, since these now
only needed in safe mode, so disallow any crossing or sharing of route elements.  Any signals on route will be set
according to the route - red for endmost signal, then yellow, etc, regardless of safe or unsafe mode.  Also train
will always stop at a red signal, even in unsafe mode, though a signal may well turn green because of an overlapping route
in unsafe mode, such that a standing train will move, since signals don't know which route they are associated with.
Without a signal a train will move along a route until the end of the route - no, see above.

/At present can have many overlapping routes, eg when start before an existing route & finish within or after it

Eventually create functions for sequences that are complex so that the object is clearer - esp in search
functions

/If select a route start element that lies in 2 PrefDirs don't enter a direction marker until direction clear

Drop PrefDir & route start & end markers and route direction markers eventually

Maybe have a flashing marker for selected route start elements (better if the whole route flashes then can see if
starting a new route or linking to an existing one), while waiting for next element to be selected

/Can work on a 2 directional PrefDir from both ends using adjacent elements - no, it's 2 diff routes!  Maybe disallow
adjacent route elements unless can link to same route?
Can build a new PrefDir right up to adjacent to an existing PrefDir & looks like connected

/Also if select an element in a circular PrefDir and reselect same element get the warning messgae twice, and sometimes
the next element to the one selected is marked

/Also, if start element is the last element in a PrefDir & adjacent to an existing route then
never get to add the end element unless click again on it - it is marked so appears to be in the route but it isn't.


/Complication:  If planning a route & start adjacent to end of an existing route, looks like continuous but not -
allow such a start element to be same as if started on the route itself, then should make the gap indications
disappear when end of route no longer on the gap itself.

/PrefDirElementAt in TOnePrefDir is a reference, but most other 'At's aren't - does this matter?

/Note for user:  if select a route start point on a section of track that is part of 2 routes (in unsafe mode
or bridge) then system won't accept it (because it's ambiguous).  Need to start on a section that is unique to the
route that is wanted.

/Maybe drop Select in PrefDirBuild, also ReversePrefDir?

/Can appear to link routes by adding a joining piece in the middle, but it's a separate route so
trains wouldn't run on it.  Also can link parallel routes by these means.  Decide whether best to allow & consolidate
or not to allow.

/Maybe change SearchFromHere to be a function under TAllPrefDirs, like SearchRoute?

/Try to alter usermodes, such that have main modes + separate submodes, like RouteMode is a submode.
Currently all the modes are on the same level.  Should then be easier to understand & modify.  For tests
use the main + sub modes together, then doesn't matter if a submode left in an unwanted state

/Remove TUserMode etc, only need the variables, don't need a type

XAlter Train constructor, set HeadCode & ExternalRoutePtr in initialiser,
then can drop Headcode being set each time round the 'x' loop!

XMaybe later give a message that no route possible for SearchForRoute if fails to find one

Eventually drop all ELink() etc refs & just use elink data directly within own classes, and outside
use different functions so outsiders don't know of another class's data - but can make protected, so
derived classes have legitimate access

Drop ReversePrefDir now have small PrefDir segments, or use a different function that works on bigger PrefDirs

/NB:  Something odd about several of the graphic images.  If change all transparent properties to true in
Object Inspector, some, e.g. rising diagonal l to r with signals become transparent.  Also if examine others
in PaintShop Pro (free version) the colour test dropper indicates many of the black pixels as white!  This doesn't
happen with the diagonal signals.  Try to resolve why this is.  Perhaps something to do with the TImage being different
to the TBitmap? May be due to different colour depths.
NB Have made the vertical bridge graphic 256 colours, most of others just 2 colours, but nevertheless it still
doesn't change colour from black when dispense with the TempLinkPtr graphics - OK if use these!
Solved (at least some of this):  Must have the colour that want to change to on the pallette, else will
select the nearest numbered colour that is on the pallette.  When changed above to 256 colours, all were various
shades of grey!
Also seems that for 2 colour bitmaps the transparent colour is always white (or highest value if not b & w),
since the bottom lh pixel being black doesn't make the transparent colour black, though for 16 colour bitmaps it does.

/Need to add all other point fillets else won't load existing track with points as no fillet graphics as yet
Also alter fillet display since can't just use SpeedTag - 7 for others (2 x display locations - RebuildFromTrackVector
& PlotAndAddTrackElement - both in TrackUnit

/Note: a start route element can be in 2 PrefDirs, & will pick whichever comes last so direction is fixed so can't use
one of the PrefDirs.  Need to avoid setting the direction (if in 2 PrefDirs) until the 2nd selection made.  Check logic here
as still get 1st route element changing direction when make a new selection adjacent to route if against 1st
set direction, and in opposite direction (with the 1st direction) the 1st adjacent selection isn't marked.

/Try to display individual PrefDirs from non-overlap starts to ends, can probably use the SearchForRoute function, but
note that can have 2 or more parallel PrefDirs between fixed starts & ends, best if can display each unique PrefDir if poss.
No, drop start & end indicators, just have small direction indicators on each element

/Get rid of CompletePrefDir as a separate class.  Don't need it now description gone

/Maybe make SearchElement a PrefDir Element, just ignore the bits don't need, then SearchVector can be a vector
of PrefDir elements.
__________________________________________________________________________________________________
'29 opened prior to dispensing with all old train graphics & associated functions & making behaviour much more
like the final product wrt PrefDir creation etc.

NOTE:  [Solved in '32 by pushing extra element on end of vector before erasing]
In the version that uses vectors to store TFonts, errors occur when erase a TextItem that isn't the last item.
This is because the vector moves all subsequent items forward in the vector, without calling any contructors for heap addresses,
and erases the one at the end, which contains the address of a TFont on the heap that is still in use!  The destructor for this
is called since it's a pointer, and the TFont to which it points is destroyed.  A subsequent attempt to erase any item fails
because the same (end of item) TFont address destructor is called again but this time it doesn't exist.
HENCE:  Don't use vectors to store any heap items!!!

/Take care if bring in any new track elements as tests for track or not all over the place!

/NotATrackElement only uses 96 so far, either add others or change test

NOTE:  Need to change the track description allocation sometime as can't limit the number of strings in TMemo
& could cause confusion.  While using TMemo ensure have second line visible on pressing ... in Object Inspector,
else only displays a single line at startup.  OK for development purposes.

/Need to save descriptions with railway
__________________________________________________________________________________________________
'28 opened after experiment with Raildev27 in CBuilder6.  No apparent benefits and flicker
problem with TImage->Stretch set to false in MainScreen.  BUT - set MainScreen->Stretch to true here in case
flickers with some OSs if set to false.  No difference in performance on development computer.

When replot trains after say display move, moves them one forward because update is used, may need
to find a way to replot exactly as were

Incorporate static 'furniture' - graphics that can place anywhere, & include platforms &
concourses amongst these (no, better to leave as are then can only put in set locations wrt track)

/Eventually incorporate replotting trains in ClearandRebuildRailway then can
call for all modes - include in initial setup for SetUserMode

/Incorporate PrefDir & gap highlighting in ClearandRebuildRailway

/ClearWithoutResettingOffsets and ClearAndResetOffsets are now the same, dispense with one & rename other

/Separate InputModes from OutpuModes, inputs from entry points (buttons & menu
items), & outputs for flag setting.

/Decide how want DisplayMove to work.  As separate mode so can only use without any other
mode selected?  Or along with other modes, when need to disable all relevant panels &
restore afterwards.

/Get rid of all Offsets as only need for moving, zeroed after mouse up

/Change all 'CurrentPrefDir' refs to just 'PrefDir'

/Note:  If build a small railway & move it, the display jumps initially, need to correct.

/NOTE:  PrefDirerror - caused by clicking on display with usermode not set to PreStart,
Continuing or PrefDirTruncate - after which a call is made to TrackPlace from
MainScreenMouseDown.  This then calls ResetConnClk which resets all Conns & CLks
so SearchFromHere is entered with an element without any connections, so the search
fails on an out of range error for TrackVector.
_________________________________________________________________________________________________
'25 opened 31/12/07 on restarting Raildev project

Next job - improve & clarify logic for mode control (after 4/1/08)
/Only allow erase track in 'addtrack' mode
/Only allow erase text in 'addtext' mode
_________________________________________________________________________________________________
'24 Opened 20/01/07

New version for simplification of objects & separation of module activities

Simplify track by dropping all tight curves, keep remainder, drop existing bridges
& bring in 8 new bridge parapet types + 8 new direction indicating straight tracks for one-way operation - not
enforced by program, just for clarity to user

LATER - Try to make text transparent - can't do this directly, need to create a temporary bitmap
of the right size & then use its Canvas->TextOut method to write the text to the bitmap.
Make the bitmap transparent & then should be OK.  Once the text is on the MainScreen canvas destroy
the bitmap.  BUT when moving the text will need to create a bitmap again similarly.

LATER - Allow different text fonts, sizes & bold etc

Remember to alter the 'height' limit in fileintegritycheck when larger fonts allowed

Clarify the conditions for train movement during plotting, updating etc, too complicated as is
Perhaps move all the detail into PrefDirUnit - shouldn't need external access to PrefDirvector

For underbridges look for adjacent underbridge element in appropriate straight line &
include in TrackOK checks

Xcombine trainplot function into plotgraphic, by adding offsets - no, not complicated, offsets just added
    & then plotgraphic called
Xdon't need background bitmaps, just replot original on relevant track element - no,
    need a new graphic anyway for the 8x8 copy so may as well keep the 4 train background graphics
/only use OnePrefDir during PrefDir construction
/try to avoid use of TPrefDirVector, just use TOnePrefDir to keep the vector private esp in train functions
    (ExtPrefDirPtr is a vector pointer, should be TOnePrefDir) - then can get rid of GetCurrentPrefDir()

/should be able to make all train functions TOnePrefDir instead of TAllPrefDirs

/go through TOnePrefDir & TAllPrefDirs to try to simplify the pointers after getting rid of CurrentPrefDirPtr
/maybe get rid of OnePrefDir? just create on the fly (tho needs to persist between returns to user input) [moved to Interface]

/make PrefDirMarker use the implicit TOnePrefDir object rather than having to set OnePrefDir

/all functions that take a TPrefDirVector* as input, use TOnePrefDir* instead (or, if in TOnePrefDir dispense with the input, the specific OnePrefDir is implicit)

/clear searchvector prior to saving PrefDir in allPrefDirs to keep space down
/when saving a PrefDir don't need to create a new PrefDir, just save elements from where they are
/simplify PrefDirvector & its pointer & searchvector & its pointer
_________________________________________________________________________________________________
'23
opened 06/01/07 prior to revised design:

/Change all '__property' values to 'void Value(Type Input) {value = Input;}' for setting &
'Type Value() {return value;} for getting.  Then no probs with VCL classes

Note:  If have 2 adjacent gaps connected to each other both by direct linkage & by the gaps, then
can get a conflicting PrefDir, since can connect at both ends, and train just jumps one position then
back again.  No way to make unambiguous, so leave as is, doesn't cause a fault, and a useless
arrangement anyway!

/Allow concourse building, keep existing platform conditions

/Include headcodes, using upright 6x6 graphics

XTrain movement could go for one full element at a time, with 2 graphics per element, front
graphic diff colour, only front graphic = train location, latter 2 graphics on rear element.

/Better if could achieve movement by one graphic at a time.  Then have 4 segments per element as
at present, so should be able to achieve, though now spans 3 elements during movement rather than two.

/Pick up background in 6x6 element sizes & replot after train passed over, or replot before
any train plot or change of train plot - though since the headcode graphics cover the identical area
shouldn't need to do this until after the train has passed over.

/Can prob drop FixedTrainInfo unit when new functions working
/Speed up train movements by storing H & V offsets between plots & unplots

/All plotting to be non-transparent


Maybe try making temporary graphics transparent for plotting just to see if works (from '21
problem)
__________________________________________________________________________________________________
'22
opened 13/12/06 following 'transparency' problem - see below.

/Problem:  EOutOfResources error given during unplot of current seg in MovingTrainUnit (line 191) - at least, cursor
at next line ( if(!(ContinuationEndLastPass)) )immediately the error given.  Not clear why fails at that point, but
evident that a VERY great many bitmaps created - 4 each for BaseSeg for each element of PrefDir for each train, i.e for
NewKingsCross with 20 PrefDirs (& trains) each of length ~ 45, have 3600 BaseSeg Bitmaps, & each has 7 handles (see Windows help
re Bitmap type.  However the odd thing is that all trains are constructed OK, i.e. seems that all handles allocated
initially, but fails during operation.  Unclear whether the failure is due to lack of handles (as help message states
for EOutOfResources) or due to lack of memory - as the message given when the error occurs implies - 'Not enough storage
available'.
NB happens whether the track is visible on the screen or not - so not to do with actual screen plotting.  Always happens
on the first pass though, towards the end of the train PrefDirs, so probably due to having drawn a great many separate bitmaps,
thereby allocating new memory (or some form of resource) with each draw, until used up.  When overdraw an existing graphic
with a new one - as on 2nd & subsequent passes, then probably doesn't use new memory.
Need to create the BaseSeg bitmaps on the fly during operation, for each PrefDir element individually, and destroy as soon
as used.  Unclear how this helps the drawing situation (unless separate memory used for each separate graphic drawn), but
worth trying.  Fewer separate bitmaps & fewer handles seems a more likely solution that pure memory since lots of memory
available but know that handles are limited.
!!Probably due to limited no of 'active' handles.  Can prob create as many bitmaps as wish, but only when drawn does the
handle become allocated & active.  Probably if a new bitmap overwrites an existing one then the earlier handle is likely
released.
Confirmed above theory by removing all BaseSeg bitmaps & rerunning for a long time (trains not unplotted but worked otherwise)
& all OK.

/Ensure no first saves can conflict with load marker - TrackFinished OK for track,
Height for text & End for PrefDir.

/AllPrefDirsClear seems complicated, why not just AllPrefDirs->clear() followed by ResetCurrentPrefDir()?

/Need to check files for correct structure prior to loading in case of corruption - error message if so

/How can MovingTrainUnit access PrefDir vector->size() when that vector private? - OK
TOnePrefDir is a public type!, it's only TAllPrefDirs & CurrentPrefDirPtr that are private

/NB: when use properties with VCL classes need to access via a pointer or get an E2328 error.  If
do this ensure that the item pointed to persists!!  Caused problems when tried to use properties
to access the TrackText class with an AnsiString (a VCL class) as a stack value.

Try making temporary graphics transparent for plotting just to see if works

/Combined text functions with TrackUnit
/Added truncate PrefDir function

/CheckCurrentPrefDirOK fails if build track leftwards or upwards when HLoc or VLoc can be -1
legitimately.  Need a different value for defaults for these - use a very high value + check if any
others might be affected in same way. (use -1000000)

/Note that Track->ConsolidateOneTrackItem (if does a consolidation) leaves an erase
element at end of vector - need to erase it before final saving.  OK revamped all this
to put all platforms at end so won't be overwritten by later track.  Also all
blanks erased wherever they appear.

/When rebuild vector, if track follows a platform, it overwrites it.

/Make platform plotting just the small graphic, in normal 'copy' mode
/Simplify GetGraphic - return a TrackElement rather than lots of separate values

/Move TrainLinkEntry & eXit into Track & make into a simpler function
/Simplify SetPrefDirLoopValues
/NB:  Switchback still doesn't work!!!  Can loop at point.
__________________________________________________________________________________________________
'21
Opened on restart at 30/10/06

Raildev21 left with the transparency problem - in case wish to investigate further later on.

Note:  Get very odd behaviour if have track element TImages with Transparent = true.
If load a track then select TrackBuild, most of elements disappear from screen.  However if
select TrackBuild first & then load, seems ok, elements all stay on, but can't plot
most track elements.  No apparent reason why some plot and not others, all elements with
bottom lh pixel not white plot OK, but also and some of the others!
However, if then after this set all Transparent values back to false, all works OK!  hence must
be a bug either in CBuilder or in compiled code when working with Windows XP.
Answer is to ensure all have Transparent set to false.  Just use Transparent as true for
temporary graphics e.g. for PrefDir display, but not for the track.

/Drop CopyMode as And for platforms, just plot the smaller graphic with default CopyMode (cmSrcCopy).

Still to do in this version:-

/Change Interface->PrefDirMarker to show actual PrefDirs on the track using a different colour.  Just
    outline the start, end and loop elements.


X Try to get rid of LkHVArray
X Improve the BridgeNum function (PrefDirUnit)
/Note BridgeTrainEntry uses eXit value!! (FixedTrainUnit)

/Consider keeping all Lk values as proper links, & use another set of 4 ints
to indicate position of buffer or gap, or maybe also underbridges?
Then can use Lk's directly in building PrefDir and track vectors rather than
having to do a lot of intricate calculations

Introduced an enum in GraphicFormUnit.h for colours, with basic colour black

Moved all graphic handling functions to GraphicFormUnit from FixedTrainUnit as will need these
more generally than just for trains (i.e.for tracks)

Dropped 'UnderBridge' as bool in PrefDir element, use 'Config[XLinkPos] == Under' instead

/Create a much more comprehensive search ahead function that covers points & gaps.

/Use last entries only as 'End' or 'Loop' values, & enable the buttons only if last PrefDir
element valid.

/Change TrackLayourElement to TrackVectorPosition,

/Make all unused values -1 for consistency

/Remember not to end on points

/Eventually allow any starts or ends apart from crossovers & points

ValidLoc classes built with default constructor.  No need for a TTrackElement constructor.
Later dropped ValidLocs

/Need to set TrackElement to the vector value in PrefDir setting rather than from TagPiece

/NB after setgaps with incomplete track & gaps, reverts to trackok rather than set gaps

/Error on loading a track with gaps (because Conn[0] randomly set on construction it
fails to reset it in ResetConnClk because it treated it as a gap.  Now fixed.

/Still to construct PrefDirElement from existing Trackelement with all base copies created,

Combined fixed & variable track units into a single TrackUnit

/Earlier failed to apply proper OO principles.  Should encapsulate all class internals so
no need for external accesses to know about them.  Try to apply better encapsulation.
e.g.  Track unit should contain all static and dynamic track information, with a
class 'FixedTrackPiece' containing all static info, and a descendant 'TrackElement',
containing all associated dynamic info.

Still to do:

/ERROR:  Can select loop in a switchback situation!  Need to avoid this.  Have loop
available only for the latest selected location, so if that element is identical in H,
V, Tag (must be?), ELink & XLink, & not points (why not points?).  Then if loop button
pressed  make the NextElement = the same NextElement of the earlier location.
Make sure all the remaining fields are completed.  Then can likely dispense with
LookAheadForLoop etc.  Do same for 'End', just have available such
that it applies to the LAST selected location, but make sure not points, gap etc.  Then can
likely dispense with LookAheadForEnd etc.  OK - added check for correct XLink value &
works OK now without needing to change basis of selection

PrefDirpanel dragging not very elegant! Maybe have small toolbar at side away from image
Next job - sort out all functions & draw up as flowcharts, esp main mode selection
Consider filling in diagonal segments for track & trains (maybe after all else)
Stop track & route panels obscuring MainScreen
Allow different font sizes etc for text (?? - if not ensure stay fixed in MainScreen->Canvas->Font)
Rationalise all TrackDisplay modes & ensure logic tight for each type of operation
Save & load text vectors
Save & load routes
Set up conditions appropriate to state of loaded file - track only &/or text, routes etc.
Try to reduce dependence between units apart from Interface
Put all variables & calls in alphabetical order in headers & cpps
Allow for different screen resolutions

Dependencies (+ layer):         All "*.h" except where noted (+ layer)
                                (omitting own header)

InterfaceUnit.cpp 6  (MFU)      TextUnit 0
                                TrackUnit 1
                                FixedTrainUnit 1
                                TrainControllerUnit 5
                                PrefDirUnit 3
                                GraphicFormUnit 0
                                InterfaceConstructor.cpp 0

TrainControllerUnit.cpp 5 (TCU) MovingTrainUnit 4
TrainControllerUnit.h 5         MovingTrainUnit 4

MovingTrainUnit.h 4  (MTU)      PrefDirUnit 3
MovingTrainUnit.cpp 4           PrefDirUnit 3
                                FixedTrainUnit 1
                                TrackUnit 1

PrefDirUnit.cpp 3 (PU)             TrackUnit 1
                                FixedTrainUnit 1

FixedTrainUnit.cpp 1 (FTnU)     GraphicFormUnit 0
                                FixedTrainInfoConstructor.cpp 0

TrackUnit.cpp 1 (FTkU)          GraphicFormUnit 0

GraphicFormUnit.cpp 0 (GFU)     None

TextUnit.cpp 0 (TU)             None

InterfaceConstructor.cpp 0 (MFC) None

FixedTrainInfoConstructor.cpp 0 None
(FTIC)
__________________________________________________________________________________________________
'20 Further development

/Allow links between continuation tracks
/add comments esp to routeplanning
/add gaps in routes & train operation
/TrackVector not setting properly for gaps, seems to be the non gap connection & Clk values
/Lookaheads for loops
/Need to check for LocErrors before set gaps as would need to reset them after,
/Need also to clear all CLks & Conns before set gaps but not after, & cater for
/just calling TrackFinished without set gaps where there are no gaps with Conns still
/cleared etc.  Prob need a class flag to say gaps set if so.

/Opened to further simplify OO nature of program.
/Objects to include 'Track' & 'OneRoute'
/Avoid any direct manipulation of other object's data.
/sort out routeflag - shouldn't need it in trackunit
/if works then try to get rid of firstcurrent - just plot markers from end to beginning so the start
/colour will always show up even if a location used more than once
__________________________________________________________________________________________________
'19:  All main features now included
__________________________________________________________________________________________________
'18:  transferred to CBuilder 4.

/Make all x & y refs relative to MainScreen so doesn't matter where it is placed on form.
/Allow big pictures with just the MainScreen section visible, but movable with hand.

/At initial build just use the actual position on MainScreen for HLoc & VLoc, and same for
/loading a saved image.  Just display the part that fits with no offsets.

/Allow deletion & repositioning of text

/Make members & variables private so far as poss
/Stop flicker during operation - note - didn't used to do this in earlier versions. Seemed
changing any of the Interface VCL components gave focus back to Interface and hid
MainScreen.

X If select 'end' on a possible loop route then loops (only because restart immediately)
__________________________________________________________________________________________________
'17:  re-order all files, only one form, Interface, with access to all else.

/Drop all tests for track, allow anywhere while building, , but keep platform tests &
don't allow new track values to overwrite existing track values as would complicate the
vector too much. TrackFinished will catch everything that's wrong.

/Allow continuation tracks, treat like a buffers wrt track build but display with
dotted ends.  For route building, use a bool = 'Continuation', so if 'start' here
don't plot a train, but allow it to move in gradually over next 4 updates.  Also
if end here allow it to disappear over next 4 updates.

/Allow to save & load with different filenames
__________________________________________________________________________________________________
'16 240805 Opened when all track, text, route & train sections complete in all
main features.
__________________________________________________________________________________________________
'15 190605 Opened to change vectors, ConstructRoute to drop vector batch building,
just push back as needed, and TrackVector to go on heap.
Added route validity check when end on a buffer or a loop.
__________________________________________________________________________________________________
'14
19/06/05:  Took TRouteElement & TCompleteRoute + associated vectors out of TService
class.  Now stand alone in ServiceUnit.

Buffers now use '5' where link would be, to indicate 'buffer'.  Included
lot more info in TrackVector, links for each element in Lk[4], all track
element connections pointed to by each link (Conn[4]), and all entry link array
indices (note this - connecting link indices, NOT link numbers) in connected
elements (CLk[4]).  Also all sections of track given segment numbers (SegNo[4]),
one for eack link (since point, crossover & bridge links belong to different
segments).  A segment is a single stretch of track that ends at a buffer or a
point, or loops back onto itself.  This segmentation helps in defining routes
(which are still to be coded), since it allows elements to be selected that
aren't adjacent, providing they aren't too far apart.  The principle is that a
route will be found between two selected elements providing they lie on the same
or adjacent segments.  If two possible routes can be found (e.g. on a simple loop)
then the shorter will be selected, or if both are the same length then either may
be selected.  Hence a route can't be found if it bridges two sets of points, but
if it doesn't, then it will be found no matter how far apart the selected elements.
This provides a reasonable compromise between ease of route plotting & complexity
of programming.

All the above information is entered when the 'OK' button is pressed in
'TrackBuild' mode.

NB: Having links for buffers allows track to be built next to them!
__________________________________________________________________________________________________
'13 included TrackBuild form & unit to take all track buttons & methods, old
TrackForm becomes TrackDisplay with access to TrackBuild.  Also changed access
between Interface & TrackDisplay so Interface now accesses TrackDisplay & 'Mode'
variable now in TrackDisplay.
__________________________________________________________________________________________________
At '12 began development of Services and Train movements with new units.

Applied a SpeedButton pointer array in Interface 'OnShow' - at that time all the
speedbuttons have been built.  Moved all Interface bottom row buttons to menu items
in TrackForm.
__________________________________________________________________________________________________
Transferred to '11.  Bad file format earlier - can't rely on saving a pointer and
having next reload use the same location!!  Use a tag and search for the Speedbutton
that way.

BUT - vector fails sometimes on destroy - when a large track vector file is loaded
followed by a shutdown.  OK if resave the vector as a file before shutting down.
I think this is a C++ bug, can't find anything wrong with code.  Change for a
large array of TTrackStruc in Version 11.  NO NO NO - Shouldn't call a
destructor explicitly (except in very rare & advanced programming circumstances - see
Stroustrup p 256).  Dropped this & OK now.  Transfer to '11 at this point.
__________________________________________________________________________________________________
Moved Raildev10 from Delphi4 to here for C++ development.
Kept all track buttons by copying from Delphi.  Dropped TrackDB for now, just
use a vector container to keep all the track information to allow rebuilding.
Can develop an appropriate database from this at a later stage.

__________________________________________________________________________________________________
